<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Linq.Expressions">
      <assemblydata version="4.0.10.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Linq.Expressions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Linq.Expressions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Linq.Expressions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.23123.00</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.23123.00 built by: PROJECTKREL</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyMetadataAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Dynamic.Runtime">
      <assemblydata version="4.0.10.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Dynamic.Runtime</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Dynamic.Runtime</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Dynamic.Runtime</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.23123.00</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.23123.00 built by: PROJECTKREL</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyMetadataAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Linq.Expressions">
      <topicdata group="api" />
      <apidata name="System.Linq.Expressions" group="namespace" />
      <elements>
        <element api="T:System.Linq.Expressions.DynamicExpression" />
        <element api="T:System.Linq.Expressions.DynamicExpressionVisitor" />
        <element api="T:System.Linq.Expressions.BinaryExpression" />
        <element api="T:System.Linq.Expressions.BlockExpression" />
        <element api="T:System.Linq.Expressions.CatchBlock" />
        <element api="T:System.Linq.Expressions.ConditionalExpression" />
        <element api="T:System.Linq.Expressions.ConstantExpression" />
        <element api="T:System.Linq.Expressions.DebugInfoExpression" />
        <element api="T:System.Linq.Expressions.DefaultExpression" />
        <element api="T:System.Linq.Expressions.ElementInit" />
        <element api="T:System.Linq.Expressions.Expression" />
        <element api="T:System.Linq.Expressions.Expression`1" />
        <element api="T:System.Linq.Expressions.ExpressionType" />
        <element api="T:System.Linq.Expressions.ExpressionVisitor" />
        <element api="T:System.Linq.Expressions.GotoExpression" />
        <element api="T:System.Linq.Expressions.GotoExpressionKind" />
        <element api="T:System.Linq.Expressions.IArgumentProvider" />
        <element api="T:System.Linq.Expressions.IDynamicExpression" />
        <element api="T:System.Linq.Expressions.IndexExpression" />
        <element api="T:System.Linq.Expressions.InvocationExpression" />
        <element api="T:System.Linq.Expressions.LabelExpression" />
        <element api="T:System.Linq.Expressions.LabelTarget" />
        <element api="T:System.Linq.Expressions.LambdaExpression" />
        <element api="T:System.Linq.Expressions.ListInitExpression" />
        <element api="T:System.Linq.Expressions.LoopExpression" />
        <element api="T:System.Linq.Expressions.MemberAssignment" />
        <element api="T:System.Linq.Expressions.MemberBinding" />
        <element api="T:System.Linq.Expressions.MemberBindingType" />
        <element api="T:System.Linq.Expressions.MemberExpression" />
        <element api="T:System.Linq.Expressions.MemberInitExpression" />
        <element api="T:System.Linq.Expressions.MemberListBinding" />
        <element api="T:System.Linq.Expressions.MemberMemberBinding" />
        <element api="T:System.Linq.Expressions.MethodCallExpression" />
        <element api="T:System.Linq.Expressions.NewArrayExpression" />
        <element api="T:System.Linq.Expressions.NewExpression" />
        <element api="T:System.Linq.Expressions.ParameterExpression" />
        <element api="T:System.Linq.Expressions.RuntimeVariablesExpression" />
        <element api="T:System.Linq.Expressions.SwitchCase" />
        <element api="T:System.Linq.Expressions.SwitchExpression" />
        <element api="T:System.Linq.Expressions.SymbolDocumentInfo" />
        <element api="T:System.Linq.Expressions.TryExpression" />
        <element api="T:System.Linq.Expressions.TypeBinaryExpression" />
        <element api="T:System.Linq.Expressions.UnaryExpression" />
      </elements>
      <file name="e2dba069-365a-eb44-743c-7582954857b6" />
    </api>
    <api id="T:System.Linq.Expressions.BinaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="e6bdf4f1-1eb6-a0fa-ce13-8ab1e5ef5b9e" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.BinaryExpression">
      <topicdata name="BinaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.BinaryExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Conversion" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Left" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Method" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Reduce" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Right" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" />
      </containers>
      <file name="4f5dcedf-2178-decc-54a5-e5d7ea4bfe8e" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.BinaryExpression">
      <topicdata name="BinaryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Reduce" />
        <element api="M:System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" />
      </containers>
      <file name="abfddc27-4595-dd06-8c8b-74ef2ba53a17" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.BinaryExpression">
      <topicdata name="BinaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.BinaryExpression" />
      <apidata name="BinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.BinaryExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Conversion" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Left" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Method" />
        <element api="P:System.Linq.Expressions.BinaryExpression.Right" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" />
      </containers>
      <file name="240842ad-8a26-e33c-72fb-ef373e01d6a3" />
    </api>
    <api id="M:System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="4d64bf6d-c24a-a53d-d2f6-5627a6c7074e" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.CanReduce">
      <topicdata group="api" />
      <apidata name="CanReduce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.CanReduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReduce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="4bfb8d2a-5199-32fa-d888-aef62bdd60be" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Conversion">
      <topicdata group="api" />
      <apidata name="Conversion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Conversion" />
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="8c38287d-c178-f82b-6e9b-339c838102de" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.IsLifted">
      <topicdata group="api" />
      <apidata name="IsLifted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLifted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="b5239ee3-387d-22f2-113e-56265bc11c00" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull">
      <topicdata group="api" />
      <apidata name="IsLiftedToNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLiftedToNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="98f300f1-fdaa-2d6b-bbeb-75a44971dde8" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Left" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="70ec5aff-8b22-8754-f8ab-2be4088235ee" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="647da07c-2cb3-17c1-c0d8-6f6c3d7028ae" />
    </api>
    <api id="M:System.Linq.Expressions.BinaryExpression.Reduce">
      <topicdata group="api" />
      <apidata name="Reduce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Reduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="961f5879-7367-ca03-8ee6-b1dd3109eaec" />
    </api>
    <api id="P:System.Linq.Expressions.BinaryExpression.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Right" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="5bcf26d0-e8be-dc5b-b328-ed9891e19483" />
    </api>
    <api id="M:System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </containers>
      <file name="3a9f6209-8813-d58f-ed0c-e2f02b7b8172" />
    </api>
    <api id="T:System.Linq.Expressions.BlockExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.BlockExpression" />
      <apidata name="BlockExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="75031195-b63d-3080-abe6-117abc8efac9" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.BlockExpression">
      <topicdata name="BlockExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.BlockExpression" />
      <apidata name="BlockExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.BlockExpression.Expressions" />
        <element api="P:System.Linq.Expressions.BlockExpression.NodeType" />
        <element api="P:System.Linq.Expressions.BlockExpression.Result" />
        <element api="P:System.Linq.Expressions.BlockExpression.Type" />
        <element api="M:System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="P:System.Linq.Expressions.BlockExpression.Variables" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" />
      </containers>
      <file name="6cd8f6ff-0792-2932-df45-caab4215bb83" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.BlockExpression">
      <topicdata name="BlockExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.BlockExpression" />
      <apidata name="BlockExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" />
      </containers>
      <file name="1d23e14e-defb-8758-68b7-feed9962b0db" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.BlockExpression">
      <topicdata name="BlockExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.BlockExpression" />
      <apidata name="BlockExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.BlockExpression.Expressions" />
        <element api="P:System.Linq.Expressions.BlockExpression.NodeType" />
        <element api="P:System.Linq.Expressions.BlockExpression.Result" />
        <element api="P:System.Linq.Expressions.BlockExpression.Type" />
        <element api="P:System.Linq.Expressions.BlockExpression.Variables" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" />
      </containers>
      <file name="fd5509f7-a01d-a62f-5516-9f2c4f8eac8b" />
    </api>
    <api id="M:System.Linq.Expressions.BlockExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="1fac5872-a84f-fd08-bef7-08fa8ae36db1" />
    </api>
    <api id="P:System.Linq.Expressions.BlockExpression.Expressions">
      <topicdata group="api" />
      <apidata name="Expressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expressions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="9b48b874-7987-a5b4-750c-7a3f441f5c58" />
    </api>
    <api id="P:System.Linq.Expressions.BlockExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="85ec6ae0-aff7-9b64-3373-037dbdd764ac" />
    </api>
    <api id="P:System.Linq.Expressions.BlockExpression.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="30dbee3c-2e8c-a4ce-6d8c-82dc3b056ab8" />
    </api>
    <api id="P:System.Linq.Expressions.BlockExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="ee3b65f6-03b1-4663-0d72-d25128ad51ea" />
    </api>
    <api id="M:System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="00b93023-2376-3531-a7d1-7d3f0df7047c" />
    </api>
    <api id="P:System.Linq.Expressions.BlockExpression.Variables">
      <topicdata group="api" />
      <apidata name="Variables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variables" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </containers>
      <file name="28c52228-d4da-48b8-5564-83e04ca802f6" />
    </api>
    <api id="T:System.Linq.Expressions.CatchBlock">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.CatchBlock" />
      <apidata name="CatchBlock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="4549b7b3-38c7-f587-ff24-78b406abf4f3" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.CatchBlock">
      <topicdata name="CatchBlock" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.CatchBlock" />
      <apidata name="CatchBlock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.CatchBlock.Body" />
        <element api="P:System.Linq.Expressions.CatchBlock.Filter" />
        <element api="P:System.Linq.Expressions.CatchBlock.Test" />
        <element api="M:System.Linq.Expressions.CatchBlock.ToString" />
        <element api="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="P:System.Linq.Expressions.CatchBlock.Variable" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" />
      </containers>
      <file name="f1d7d9a1-4e1e-dc6f-a809-fb685ca41da1" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.CatchBlock">
      <topicdata name="CatchBlock" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.CatchBlock" />
      <apidata name="CatchBlock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.CatchBlock.ToString" />
        <element api="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" />
      </containers>
      <file name="529b6a37-fe9c-0248-a3b4-fd626575e1b8" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.CatchBlock">
      <topicdata name="CatchBlock" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.CatchBlock" />
      <apidata name="CatchBlock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.CatchBlock.Body" />
        <element api="P:System.Linq.Expressions.CatchBlock.Filter" />
        <element api="P:System.Linq.Expressions.CatchBlock.Test" />
        <element api="P:System.Linq.Expressions.CatchBlock.Variable" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" />
      </containers>
      <file name="ab88b2c7-ceec-1baf-be2a-a64c7aa70ad1" />
    </api>
    <api id="P:System.Linq.Expressions.CatchBlock.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="65bc9c4c-54fa-340c-7245-1cd08f4f7ea4" />
    </api>
    <api id="P:System.Linq.Expressions.CatchBlock.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filter" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="3d323d02-5901-42ae-3b3e-b6cff6deac2f" />
    </api>
    <api id="P:System.Linq.Expressions.CatchBlock.Test">
      <topicdata group="api" />
      <apidata name="Test" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Test" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="e77f153d-f82e-5253-2a1b-73e4685240ec" />
    </api>
    <api id="M:System.Linq.Expressions.CatchBlock.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="3cc0ffe6-460a-8e6e-4ebc-31d78dc908aa" />
    </api>
    <api id="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="e3e6720b-8717-1b83-b2e4-40c95b0d6aa9" />
    </api>
    <api id="P:System.Linq.Expressions.CatchBlock.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variable" />
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </containers>
      <file name="650359a6-d5f6-4156-488d-e90af7de2be4" />
    </api>
    <api id="T:System.Linq.Expressions.ConditionalExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="37c71fdf-cb32-7caf-75cd-5f177c473d08" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ConditionalExpression">
      <topicdata name="ConditionalExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Test" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Type" />
        <element api="M:System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" />
      </containers>
      <file name="b3aeffc8-b042-26a6-2728-cb21b6386b1d" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ConditionalExpression">
      <topicdata name="ConditionalExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" />
      </containers>
      <file name="13c1986b-94d1-4727-2610-0828ef179063" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ConditionalExpression">
      <topicdata name="ConditionalExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ConditionalExpression" />
      <apidata name="ConditionalExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Test" />
        <element api="P:System.Linq.Expressions.ConditionalExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" />
      </containers>
      <file name="752f2b17-d197-8a77-a4c2-3fc9cd13b3a9" />
    </api>
    <api id="M:System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="28e9a352-6926-5110-374b-968ec357dcbe" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.IfFalse">
      <topicdata group="api" />
      <apidata name="IfFalse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IfFalse" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="903e14b6-0016-6bd0-fa26-9a80b75ce0b3" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.IfTrue">
      <topicdata group="api" />
      <apidata name="IfTrue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IfTrue" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="e4a64f90-c4fa-8887-cb44-04d24ea575be" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="3e16881a-46bd-baa5-f71f-b6f84d1539ef" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.Test">
      <topicdata group="api" />
      <apidata name="Test" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Test" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="419c38bf-9308-331e-171b-07d3d2209cf4" />
    </api>
    <api id="P:System.Linq.Expressions.ConditionalExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="2ff21236-01e1-dcf9-8e05-174f8a2a1a59" />
    </api>
    <api id="M:System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifFalse">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </containers>
      <file name="876b0c9f-4e68-321f-e8a7-6df74fa68aa1" />
    </api>
    <api id="T:System.Linq.Expressions.ConstantExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="4d4cacc3-847e-d97a-9726-8d180075745a" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ConstantExpression">
      <topicdata name="ConstantExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.ConstantExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.ConstantExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ConstantExpression.Type" />
        <element api="P:System.Linq.Expressions.ConstantExpression.Value" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" />
      </containers>
      <file name="b8632641-a52f-895a-0a51-bdf6125f149f" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ConstantExpression">
      <topicdata name="ConstantExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.ConstantExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" />
      </containers>
      <file name="127809ea-023d-88a5-de2f-043d445b96d5" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ConstantExpression">
      <topicdata name="ConstantExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ConstantExpression" />
      <apidata name="ConstantExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.ConstantExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ConstantExpression.Type" />
        <element api="P:System.Linq.Expressions.ConstantExpression.Value" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" />
      </containers>
      <file name="1d25eee5-4550-54fd-e468-66ea5ebbbcd8" />
    </api>
    <api id="M:System.Linq.Expressions.ConstantExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </containers>
      <file name="3202f5f8-a1c7-2572-fb1c-a53808bdb81f" />
    </api>
    <api id="P:System.Linq.Expressions.ConstantExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </containers>
      <file name="636f172c-be8b-c369-ca7a-1f79ef29693f" />
    </api>
    <api id="P:System.Linq.Expressions.ConstantExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </containers>
      <file name="3e0f8873-d9e3-e04e-5693-6f085ff05e2c" />
    </api>
    <api id="P:System.Linq.Expressions.ConstantExpression.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </containers>
      <file name="aa7280d1-1645-4443-8bc3-88c09302ed5a" />
    </api>
    <api id="T:System.Linq.Expressions.DebugInfoExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DebugInfoExpression" />
      <apidata name="DebugInfoExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="ef85b864-7354-2b2a-29d3-d1a85544395c" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.DebugInfoExpression">
      <topicdata name="DebugInfoExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.DebugInfoExpression" />
      <apidata name="DebugInfoExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.DebugInfoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.Document" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.EndColumn" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.EndLine" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.IsClear" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.StartColumn" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.StartLine" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" />
      </containers>
      <file name="4e46b8b5-0420-b693-dc5e-2b045d0e06d4" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.DebugInfoExpression">
      <topicdata name="DebugInfoExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.DebugInfoExpression" />
      <apidata name="DebugInfoExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.DebugInfoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" />
      </containers>
      <file name="2f84a32a-0770-fa04-f558-6d30d4c6fbb8" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.DebugInfoExpression">
      <topicdata name="DebugInfoExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.DebugInfoExpression" />
      <apidata name="DebugInfoExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.DebugInfoExpression.Document" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.EndColumn" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.EndLine" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.IsClear" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.StartColumn" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.StartLine" />
        <element api="P:System.Linq.Expressions.DebugInfoExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" />
      </containers>
      <file name="a5e0d1dc-ee86-be52-24e7-5a976d81b2c6" />
    </api>
    <api id="M:System.Linq.Expressions.DebugInfoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="3a066479-8352-de91-7913-6d73fff8d2c5" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.Document">
      <topicdata group="api" />
      <apidata name="Document" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Document" />
      <returns>
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="f0f6ad72-8309-7fb6-ee2f-b586c2360654" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.EndColumn">
      <topicdata group="api" />
      <apidata name="EndColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_EndColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="21f5e1da-e70c-7742-117e-9f9566f0bcae" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.EndLine">
      <topicdata group="api" />
      <apidata name="EndLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_EndLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="597485b4-7e87-7dc6-f7b3-b91ccb9221d5" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.IsClear">
      <topicdata group="api" />
      <apidata name="IsClear" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsClear" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="9b85137a-de89-92d3-439b-06b39039ecae" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="b1dd49f4-837b-7b8a-cdda-3ae1e9b713ab" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.StartColumn">
      <topicdata group="api" />
      <apidata name="StartColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StartColumn" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="0ae9d5be-79f6-c2cc-75f5-5865fb6c4b12" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.StartLine">
      <topicdata group="api" />
      <apidata name="StartLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_StartLine" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="eb38add3-e8cb-6c7f-cbce-d974fde21c49" />
    </api>
    <api id="P:System.Linq.Expressions.DebugInfoExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </containers>
      <file name="454609d5-4b97-e925-7782-41a6ffefc36f" />
    </api>
    <api id="T:System.Linq.Expressions.DefaultExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DefaultExpression" />
      <apidata name="DefaultExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="8a58130e-bf43-d975-e8c0-bf9b752d8647" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.DefaultExpression">
      <topicdata name="DefaultExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.DefaultExpression" />
      <apidata name="DefaultExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.DefaultExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DefaultExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DefaultExpression" />
      </containers>
      <file name="1a5c8036-40f6-4e31-2a9b-84191420bf1f" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.DefaultExpression">
      <topicdata name="DefaultExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.DefaultExpression" />
      <apidata name="DefaultExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DefaultExpression" />
      </containers>
      <file name="e87cafd9-7646-368c-61f3-2ac24d871bfc" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.DefaultExpression">
      <topicdata name="DefaultExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.DefaultExpression" />
      <apidata name="DefaultExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.DefaultExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DefaultExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DefaultExpression" />
      </containers>
      <file name="ff8966f7-b817-e156-2c9d-d184b3cd17ef" />
    </api>
    <api id="P:System.Linq.Expressions.DefaultExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
      </containers>
      <file name="259ae6ab-b036-44a5-22fc-922a0bc21d0f" />
    </api>
    <api id="P:System.Linq.Expressions.DefaultExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
      </containers>
      <file name="96a53482-7e8e-c5e9-06fe-c289480ee8b5" />
    </api>
    <api id="T:System.Linq.Expressions.DynamicExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="DynamicExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="e7d1fa28-12e6-b066-d554-a5b777471942" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.DynamicExpression">
      <topicdata name="DynamicExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="DynamicExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.DynamicExpression.Arguments" />
        <element api="P:System.Linq.Expressions.DynamicExpression.Binder" />
        <element api="P:System.Linq.Expressions.DynamicExpression.DelegateType" />
        <element api="Overload:System.Linq.Expressions.DynamicExpression.Dynamic">
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic">
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="P:System.Linq.Expressions.DynamicExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite" />
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])" />
        <element api="P:System.Linq.Expressions.DynamicExpression.Type" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" />
      </containers>
      <file name="7a2fd802-48cf-3f05-9f4a-bb079693d327" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.DynamicExpression">
      <topicdata name="DynamicExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="DynamicExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="Overload:System.Linq.Expressions.DynamicExpression.Dynamic">
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic">
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite" />
        <element api="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" />
      </containers>
      <file name="c734988b-5901-a1b7-c572-c694dceccc89" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.DynamicExpression">
      <topicdata name="DynamicExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="DynamicExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.DynamicExpression.Arguments" />
        <element api="P:System.Linq.Expressions.DynamicExpression.Binder" />
        <element api="P:System.Linq.Expressions.DynamicExpression.DelegateType" />
        <element api="P:System.Linq.Expressions.DynamicExpression.NodeType" />
        <element api="P:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="P:System.Linq.Expressions.DynamicExpression.Type" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" />
      </containers>
      <file name="a00001ef-a9d4-b447-f8da-680527c0dcc2" />
    </api>
    <api id="Overload:System.Linq.Expressions.DynamicExpression.Dynamic">
      <topicdata name="Dynamic" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="6b9ec8c3-2a8a-51a8-825b-8a29a7871de3" />
    </api>
    <api id="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic">
      <topicdata name="MakeDynamic" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DynamicExpression" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="41935d87-95a5-63b1-10c8-715ef4090c35" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="488875f1-577d-b168-2fa7-3d555a639800" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="b9a1be34-8ae5-3ee8-325c-6837cb00e8cb" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.Binder">
      <topicdata group="api" />
      <apidata name="Binder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Binder" />
      <returns>
        <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="dfcc8a0c-104d-88d0-a9b3-3e73891c7285" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.DelegateType">
      <topicdata group="api" />
      <apidata name="DelegateType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DelegateType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IDynamicExpression.DelegateType">
          <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="6a280cc9-bb70-a002-f5c6-0edc8f87bd2e" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="0d114454-99e3-f256-5711-5269f45022e6" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="c99bdecc-a46c-06ea-b055-bc7ba0b47dac" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="0199e593-3fe8-54d9-c3c6-0c5c43f24f8c" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="3e30fbfb-6a97-6a49-8e93-9e7729fc5e36" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="9eda64c3-913e-5180-3606-d2c120a499a7" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.Dynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="e1f002d7-657c-48c0-9877-83d75d1742a5" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="321781fa-c34e-08c7-3811-2b117658bf77" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="658399d4-5a49-327f-1572-798bc39f411a" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="5bbd8116-2950-a2b2-c50f-804fdc9e9995" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="29905550-763a-703b-fac9-96c0ca49205d" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="bf84641c-b407-3c8b-fca4-be1314c65303" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="MakeDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.DynamicExpression.MakeDynamic" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="binder">
          <type api="T:System.Runtime.CompilerServices.CallSiteBinder" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="dce9214f-0736-e80e-a737-1cb87d1164cf" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="a0fdc1e0-0aeb-bd57-0c04-6e527b5da1a8" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="d17c0dfd-b27e-183b-b370-1908ffc8362e" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="3f234c9b-74bb-8ecb-be31-2799f4b44ebb" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite">
      <topicdata group="api" eiiName="IDynamicExpression.CreateCallSite" />
      <apidata name="CreateCallSite" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite">
          <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="65427e68-c99e-34c0-4b62-fbe0466c0a7e" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])">
      <topicdata group="api" eiiName="IDynamicExpression.Rewrite" />
      <apidata name="Rewrite" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])">
          <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="4b1d6057-604f-0ca0-b1e5-b0f594f9c3ed" />
    </api>
    <api id="P:System.Linq.Expressions.DynamicExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="db4f27ca-bf92-c468-6a69-5592223a59f7" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
      </containers>
      <file name="a7e91684-f236-bf20-db44-8c868ec17c4c" />
    </api>
    <api id="T:System.Linq.Expressions.DynamicExpressionVisitor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.DynamicExpressionVisitor" />
      <apidata name="DynamicExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="5b13893c-6e57-229e-6f43-924a6cc3b132" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.DynamicExpressionVisitor">
      <topicdata name="DynamicExpressionVisitor" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.DynamicExpressionVisitor" />
      <apidata name="DynamicExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Expressions.DynamicExpressionVisitor.#ctor" />
        <element api="M:System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)" />
        <element api="Overload:System.Linq.Expressions.DynamicExpressionVisitor.Visit">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})" />
        </element>
        <element api="Overload:System.Linq.Expressions.DynamicExpressionVisitor.VisitAndConvert">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpressionVisitor" />
      </containers>
      <file name="26f6f717-666b-0c85-3c52-b56fa6636fb0" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.DynamicExpressionVisitor">
      <topicdata name="DynamicExpressionVisitor" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.DynamicExpressionVisitor" />
      <apidata name="DynamicExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)" />
        <element api="Overload:System.Linq.Expressions.DynamicExpressionVisitor.Visit">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})" />
        </element>
        <element api="Overload:System.Linq.Expressions.DynamicExpressionVisitor.VisitAndConvert">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      </elements>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpressionVisitor" />
      </containers>
      <file name="e37a9cbf-1ae8-4077-b9b9-f910be3fddbf" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpressionVisitor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpressionVisitor" ref="true" />
      </containers>
      <file name="3c5f117e-c2a2-9a6b-6437-d6667bb5c1f8" />
    </api>
    <api id="M:System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
      <topicdata group="api" />
      <apidata name="VisitDynamic" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.DynamicExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Dynamic.Runtime" module="System.Dynamic.Runtime" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.DynamicExpressionVisitor" ref="true" />
      </containers>
      <file name="f26d5f0b-9e55-32ac-61b6-581b724303c4" />
    </api>
    <api id="T:System.Linq.Expressions.ElementInit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="4e2c12ba-8183-0b54-8010-0841f9394324" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.ElementInit.AddMethod" />
        <element api="P:System.Linq.Expressions.ElementInit.Arguments" />
        <element api="P:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.ElementInit.ToString" />
        <element api="M:System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" />
      </containers>
      <file name="094b2a8c-6446-4439-130a-39038cb0957b" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.ElementInit.ToString" />
        <element api="M:System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" />
      </containers>
      <file name="f406e413-c467-a804-c447-614ff6a924d8" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ElementInit" />
      <apidata name="ElementInit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.ElementInit.AddMethod" />
        <element api="P:System.Linq.Expressions.ElementInit.Arguments" />
        <element api="P:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" />
      </containers>
      <file name="05cfd381-a5d1-f9a6-00ab-1fd1002f2ecb" />
    </api>
    <api id="P:System.Linq.Expressions.ElementInit.AddMethod">
      <topicdata group="api" />
      <apidata name="AddMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="ba65d396-ec49-5579-3ead-2b67c8cf7e33" />
    </api>
    <api id="P:System.Linq.Expressions.ElementInit.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="3522d24c-2b99-32a0-2c97-556ec159fb08" />
    </api>
    <api id="P:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="7760c5dd-a829-44f5-00d9-a7ab8a4b6c58" />
    </api>
    <api id="M:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="8c25cb9b-262c-cd89-b923-20f84fa7e634" />
    </api>
    <api id="M:System.Linq.Expressions.ElementInit.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="4c9646e1-08db-002b-66a3-5068c2974ad1" />
    </api>
    <api id="M:System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </containers>
      <file name="1614f597-662d-6119-bdb0-a1473318943b" />
    </api>
    <api id="T:System.Linq.Expressions.Expression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
          <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
          <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
          <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
          <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
          <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
          <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
          <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
          <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
          <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
          <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
          <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
          <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
          <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="98b0a939-2b48-5d76-e30b-300d232e796e" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.#ctor" />
        <element api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="Overload:System.Linq.Expressions.Expression.Add">
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddAssign">
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddChecked">
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.And">
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAlso">
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAssign">
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayAccess">
          <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayIndex">
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Bind">
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Block">
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Break">
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Call">
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="Overload:System.Linq.Expressions.Expression.Catch">
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)" />
        <element api="Overload:System.Linq.Expressions.Expression.Coalesce">
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Condition">
          <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Constant">
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Continue">
          <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Convert">
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ConvertChecked">
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="Overload:System.Linq.Expressions.Expression.Decrement">
          <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Default(System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.Divide">
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.DivideAssign">
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ElementInit">
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Empty" />
        <element api="Overload:System.Linq.Expressions.Expression.Equal">
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Field">
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
        <element api="Overload:System.Linq.Expressions.Expression.Goto">
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThan">
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Increment">
          <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Invoke">
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.IsFalse">
          <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.IsTrue">
          <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Label">
          <element api="M:System.Linq.Expressions.Expression.Label" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Lambda">
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShift">
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShiftAssign">
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThan">
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListBind">
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListInit">
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Loop">
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MakeBinary">
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})" />
        <element api="Overload:System.Linq.Expressions.Expression.MakeUnary">
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberBind">
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberInit">
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Modulo">
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ModuloAssign">
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Multiply">
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyAssign">
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Negate">
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NegateChecked">
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.New">
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayInit">
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="Overload:System.Linq.Expressions.Expression.Not">
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NotEqual">
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OnesComplement">
          <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Or">
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrAssign">
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrElse">
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Parameter">
          <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PostDecrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PostIncrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Power">
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PowerAssign">
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PreDecrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PreIncrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Property">
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Rethrow">
          <element api="M:System.Linq.Expressions.Expression.Rethrow" />
          <element api="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Return">
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RightShift">
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RightShiftAssign">
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RuntimeVariables">
          <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Subtract">
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractAssign">
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Switch">
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SwitchCase">
          <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SymbolDocument">
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Throw">
          <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
        <element api="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
        <element api="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)" />
        <element api="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.UnaryPlus">
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.Variable">
          <element api="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" />
      </containers>
      <file name="493e21fb-10f5-202e-cae3-4eedfd98f68a" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="Overload:System.Linq.Expressions.Expression.Add">
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddAssign">
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AddChecked">
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.And">
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAlso">
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.AndAssign">
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayAccess">
          <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ArrayIndex">
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Bind">
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Block">
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Break">
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Call">
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Catch">
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)" />
        <element api="Overload:System.Linq.Expressions.Expression.Coalesce">
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Condition">
          <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Constant">
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
          <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Continue">
          <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Convert">
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ConvertChecked">
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="Overload:System.Linq.Expressions.Expression.Decrement">
          <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Default(System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.Divide">
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.DivideAssign">
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ElementInit">
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Empty" />
        <element api="Overload:System.Linq.Expressions.Expression.Equal">
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign">
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Field">
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])" />
        <element api="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
        <element api="Overload:System.Linq.Expressions.Expression.Goto">
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThan">
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Increment">
          <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Invoke">
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.IsFalse">
          <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.IsTrue">
          <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Label">
          <element api="M:System.Linq.Expressions.Expression.Label" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Lambda">
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShift">
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LeftShiftAssign">
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThan">
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListBind">
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ListInit">
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Loop">
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MakeBinary">
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})" />
        <element api="Overload:System.Linq.Expressions.Expression.MakeUnary">
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberBind">
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MemberInit">
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
          <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Modulo">
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.ModuloAssign">
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Multiply">
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyAssign">
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Negate">
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NegateChecked">
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.New">
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
          <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NewArrayInit">
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Not">
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.NotEqual">
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OnesComplement">
          <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Or">
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrAssign">
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.OrElse">
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Parameter">
          <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PostDecrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PostIncrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Power">
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PowerAssign">
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PreDecrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.PreIncrementAssign">
          <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Property">
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
          <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="Overload:System.Linq.Expressions.Expression.Rethrow">
          <element api="M:System.Linq.Expressions.Expression.Rethrow" />
          <element api="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Return">
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RightShift">
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RightShiftAssign">
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.RuntimeVariables">
          <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Subtract">
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractAssign">
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SubtractChecked">
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Switch">
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
          <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SwitchCase">
          <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.SymbolDocument">
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
          <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.Linq.Expressions.Expression.Throw">
          <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
        <element api="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
        <element api="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)" />
        <element api="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)" />
        <element api="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.UnaryPlus">
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)" />
        <element api="Overload:System.Linq.Expressions.Expression.Variable">
          <element api="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
          <element api="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" />
      </containers>
      <file name="74475b73-8126-27d8-5bfb-441a6afeca24" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.Expression">
      <topicdata name="Expression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" />
      </containers>
      <file name="b2453a78-92bd-c495-40de-dbdb2e8cf810" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5e7da2db-45a2-912d-bd6f-4bab02aa3832" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AddAssign">
      <topicdata name="AddAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AddAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8d22ce39-ce0c-7382-0ccf-71792ee10bb4" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AddAssignChecked">
      <topicdata name="AddAssignChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AddAssignChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="222bcc01-2c88-bb88-4e3b-81dee09edf9b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AddChecked">
      <topicdata name="AddChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7d780d78-3a9f-17b2-afe1-b176993a4dfe" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.And">
      <topicdata name="And" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="And" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f25800cd-8343-69a4-e4ca-d4b1ff47c7a7" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AndAlso">
      <topicdata name="AndAlso" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2b9ccfa0-62fe-b8b1-4b95-34c7d4a21bef" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.AndAssign">
      <topicdata name="AndAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="AndAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="fa4a9db6-bdeb-f39a-792a-a4fb3f0fa9e9" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ArrayAccess">
      <topicdata name="ArrayAccess" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ArrayAccess" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bb8b5fc6-8fb5-089f-f3b5-71c26b9268b0" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ArrayIndex">
      <topicdata name="ArrayIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="50fb2e2a-e0f0-ac83-60a9-c312d9489e7a" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Bind">
      <topicdata name="Bind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Bind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="905663ee-5901-d968-1658-32b151b455c2" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Block">
      <topicdata name="Block" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Block" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ff11bc0e-f3a2-cd7b-646b-c1bc6d83d6bb" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Break">
      <topicdata name="Break" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Break" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="dcb5c200-2f32-123a-766d-bb0de516ac32" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Call">
      <topicdata name="Call" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Call" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="72c9b1b3-2d88-883c-3272-695b1692cc77" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Catch">
      <topicdata name="Catch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Catch" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1a697f82-92ba-389a-5084-2e14cf56bfd5" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Coalesce">
      <topicdata name="Coalesce" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a99ebaf4-6276-20ec-4626-14fab0cf1676" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Condition">
      <topicdata name="Condition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Condition" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4e62346e-37a1-9eb1-5c62-6f79b0c5f9ec" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Constant">
      <topicdata name="Constant" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Constant" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
        <element api="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="afeb4228-837f-1145-246e-ea3629ef9bb0" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Continue">
      <topicdata name="Continue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Continue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="05877227-7add-ab09-82ec-3bdd07edf946" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Convert">
      <topicdata name="Convert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Convert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="006cfa19-d705-25ef-a6f6-a6abc7b32930" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ConvertChecked">
      <topicdata name="ConvertChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="434e01a2-e609-5155-1e1c-c98cad1ffb6a" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="43b7134b-78c3-12b9-1450-ce93d703e016" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Divide">
      <topicdata name="Divide" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Divide" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="29dc0bf2-29c8-5f20-89e5-e2f2324150e2" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.DivideAssign">
      <topicdata name="DivideAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="DivideAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4823ae63-b0c0-1226-6052-1268d900d0d5" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ElementInit">
      <topicdata name="ElementInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c4eb214e-2739-59dc-722c-7691bfaf8dc1" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Equal">
      <topicdata name="Equal" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Equal" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="724ec9fa-3e88-a5ac-ff1c-b8857c493eb3" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ExclusiveOr">
      <topicdata name="ExclusiveOr" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="be61d587-0dca-38b7-5856-d230817fdd17" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign">
      <topicdata name="ExclusiveOrAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ExclusiveOrAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d16743d6-d97c-3a0b-5a23-64a745dfc449" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Field">
      <topicdata name="Field" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Field" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="65bb34be-8490-909b-9d9f-5654ddd63b7b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Goto">
      <topicdata name="Goto" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Goto" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="029e107f-896f-65ae-b7b3-fe6c3a419633" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="65a1d556-ad47-da9d-7abd-ce4ab928613a" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1a66b785-a17b-b8a8-c3a7-17613d9025e6" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Increment" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a562b882-7387-c6b9-bab2-ee234a592919" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="825b4b85-a1a4-2a7f-a25d-cecd3afc8b6b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.IsFalse">
      <topicdata name="IsFalse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="IsFalse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8b721bde-1001-8d9a-f09d-7db5e799b0c9" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.IsTrue">
      <topicdata name="IsTrue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="IsTrue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b5715667-2f37-cf66-5b49-d7fdef739ebc" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Label">
      <topicdata name="Label" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Label" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Label" />
        <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Label(System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Label(System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="29bd917b-3add-cd7d-4e5f-d66fb782f8bf" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Lambda">
      <topicdata name="Lambda" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="523203d7-2880-71d8-3e0a-d9a82e65cdbe" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LeftShift">
      <topicdata name="LeftShift" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a31eeb2e-f045-b9fc-ad43-3cd0c2da5baf" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LeftShiftAssign">
      <topicdata name="LeftShiftAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LeftShiftAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="dbb836b5-c14e-dfe5-da52-f8e10e6752b2" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="da28f3d3-5cd1-c0cb-df24-ec910a148861" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7df18c5d-c052-9887-7b7c-36a35fb4575b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ListBind">
      <topicdata name="ListBind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d89cbe54-d92b-ed21-3208-24a1c407247b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ListInit">
      <topicdata name="ListInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="91252414-a2fe-7e6f-f6b9-d838b089495b" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Loop">
      <topicdata name="Loop" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Loop" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="763e66d5-25a6-28d9-4d54-65a78fd898e8" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MakeBinary">
      <topicdata name="MakeBinary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="de014f37-1811-51f5-73ff-3917d819d235" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MakeUnary">
      <topicdata name="MakeUnary" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b5320343-3bcc-19c7-c038-1d7c07afdd4d" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MemberBind">
      <topicdata name="MemberBind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c2d4bdaf-d2c4-6e70-654a-83438270acf3" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MemberInit">
      <topicdata name="MemberInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
        <element api="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c092c775-bb28-b39c-8f9b-da902fdac712" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Modulo">
      <topicdata name="Modulo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d14d821d-db84-6731-ec99-f016ceaf0a07" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.ModuloAssign">
      <topicdata name="ModuloAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="ModuloAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="35867c1c-97e9-ec34-f9c2-cf77947c2f03" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Multiply">
      <topicdata name="Multiply" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="47fe77e3-d61a-e2ac-1226-848bba5a9e5e" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MultiplyAssign">
      <topicdata name="MultiplyAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MultiplyAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="88425278-7a5c-fb70-f817-a41068419a27" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked">
      <topicdata name="MultiplyAssignChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MultiplyAssignChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f1c47e24-d4f6-7e23-e98a-78d7a7a27991" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.MultiplyChecked">
      <topicdata name="MultiplyChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="161b245b-c5fc-bcfc-c98a-02de4fc4abe4" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Negate">
      <topicdata name="Negate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Negate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e0767c8e-4391-7fcd-fa99-ec5e35c21335" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NegateChecked">
      <topicdata name="NegateChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1c43daf6-552b-4909-f7dc-9bbdb1038214" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.New">
      <topicdata name="New" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="New" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
        <element api="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2f3883c2-e3cc-6e04-768c-eb39a80f2d5e" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NewArrayBounds">
      <topicdata name="NewArrayBounds" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="546250f0-8b09-c7ef-bd28-ce4242c40e4f" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NewArrayInit">
      <topicdata name="NewArrayInit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d0332d63-ecd8-9599-c385-37948fb7dd12" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Not">
      <topicdata name="Not" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Not" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="07da4b5e-c5e7-7de5-efb6-f78727ce0051" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.NotEqual">
      <topicdata name="NotEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="45b989d9-7c02-bc16-b1b0-f3bf1af4f6ca" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.OnesComplement">
      <topicdata name="OnesComplement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="OnesComplement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e6124bb0-f150-95b8-2749-eacd9bcf62eb" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Or">
      <topicdata name="Or" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Or" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6d6b06e0-24e1-275b-b368-b71f53ef0e93" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.OrAssign">
      <topicdata name="OrAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="OrAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="77a78a38-0de5-cc7a-303d-0953156b456e" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.OrElse">
      <topicdata name="OrElse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="28386b3c-2614-f8bf-cabf-65bdf0a4b406" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Parameter">
      <topicdata name="Parameter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Parameter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c8b6c603-c327-d10f-44a2-5a847de05241" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.PostDecrementAssign">
      <topicdata name="PostDecrementAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="PostDecrementAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6c834b60-c456-b3c4-3991-d6241ff9e238" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.PostIncrementAssign">
      <topicdata name="PostIncrementAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="PostIncrementAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3dfee93e-42b2-a215-af0d-5ded39b4ca62" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Power">
      <topicdata name="Power" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Power" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="447a4ae4-82c8-2300-9dcb-a18452b4c75d" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.PowerAssign">
      <topicdata name="PowerAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="PowerAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4f45cc75-2d4e-1a27-8f67-138742580a2d" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.PreDecrementAssign">
      <topicdata name="PreDecrementAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="PreDecrementAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f501b6b5-6935-e172-8be4-5a2caa0b9fe1" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.PreIncrementAssign">
      <topicdata name="PreIncrementAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="PreIncrementAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="007f18ff-0eae-d736-6632-052810991a97" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Property">
      <topicdata name="Property" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Property" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
        <element api="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2aab692a-3f43-f343-825f-05fb30ebe043" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Rethrow">
      <topicdata name="Rethrow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Rethrow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Rethrow" />
        <element api="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3c2c0cf4-b561-776a-8143-a29e40a32512" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Return">
      <topicdata name="Return" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Return" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b1072234-549c-ff46-8052-6880564db815" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.RightShift">
      <topicdata name="RightShift" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="75190b90-0de0-65d4-8849-e1429a2379f9" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.RightShiftAssign">
      <topicdata name="RightShiftAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="RightShiftAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="766dd7e8-fdf1-8dd8-1427-27d9feb5b801" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.RuntimeVariables">
      <topicdata name="RuntimeVariables" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="RuntimeVariables" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ecd83378-e21a-911e-0ab7-ddac0906b558" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Subtract">
      <topicdata name="Subtract" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="804cbd80-a7de-0bba-30cc-74ff40061aa5" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SubtractAssign">
      <topicdata name="SubtractAssign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SubtractAssign" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7ac85655-5246-a0cc-5993-a72f304218ae" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked">
      <topicdata name="SubtractAssignChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SubtractAssignChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="483e6060-ffc7-93b8-8626-7e22f2aa37d3" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SubtractChecked">
      <topicdata name="SubtractChecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="958d08f0-e321-9458-e9a4-93c2b460df54" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Switch">
      <topicdata name="Switch" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Switch" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
        <element api="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4df23eee-bb3f-043f-02fe-848df5c8fe02" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SwitchCase">
      <topicdata name="SwitchCase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SwitchCase" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d1eb1643-f4dd-4a1a-a08b-40ba027690de" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.SymbolDocument">
      <topicdata name="SymbolDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="SymbolDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
        <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
        <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
        <element api="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="74a89dcd-2b8d-e4d9-2f52-2c5e476003a3" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Throw">
      <topicdata name="Throw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Throw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="252f6887-f6d6-9d99-ef95-f6241d149c59" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.UnaryPlus">
      <topicdata name="UnaryPlus" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0e501769-239a-cccd-3400-1d8f5607eb53" />
    </api>
    <api id="Overload:System.Linq.Expressions.Expression.Variable">
      <topicdata name="Variable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression" />
      <apidata name="Variable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
        <element api="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="24712b18-97f4-d993-888b-4fe222e77ee3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d626dc65-e53f-d583-43b7-2d02b407dffa" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="aeaac8ca-9c02-e82f-e71e-ef7649a13c1e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6cb15747-60f5-4bf1-8ca4-e334e284ba40" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="557ebcb8-6176-4c4e-636a-c80dddaa6b99" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AddAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5b37a08d-eda5-1b2f-836e-c1f7093bfbd3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AddAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7bc94244-5f7d-e6f0-dffd-9fe8d0d8f5a5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="AddAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="891c6e85-def6-390e-1723-77e54d937977" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AddAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="17bbe294-ffd3-353b-f94e-3dd336547cfe" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AddAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e0ceae8b-4cb1-ef6c-3cb9-01c34ae5b01a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="AddAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2accdac7-fee5-3153-f8fa-06293c94ca56" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8406e71b-18c7-e401-4cfe-ce398c242973" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AddChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AddChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1c04f1d8-3c17-0b30-85b7-134600540418" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.And" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b2de6980-28a3-e43e-e742-db25b3ea1090" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.And" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0c765c0c-ea8f-5b05-b1a4-6b7d99263515" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAlso" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5d1779f4-6560-3ed4-2fd1-edd597264490" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AndAlso" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAlso" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="91b28bd7-fc41-0858-790a-2f866156bd65" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="AndAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a7df3b24-9497-1cdf-44e0-94f5fdaabf5e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="AndAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c986d2b7-0892-cefd-00c4-7b34672dd2df" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="AndAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.AndAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c68390b8-ccc0-fb1c-5684-5c1ebb641920" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ArrayAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayAccess" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="027fe784-755d-6d7c-25bd-2ff72ad9f269" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ArrayAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayAccess" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5fd25e34-4097-cd2a-e56a-6e21493091b8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bb9958fa-b29c-a1f5-b45d-9e2c2f6f3a4c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bf767f24-7e42-df53-461f-f1aed0344a4d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ArrayIndex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b0985f5a-1781-a670-2051-42c6596c4163" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ArrayLength" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0ef44eeb-8f47-8cab-b059-aa04229d0081" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cc48eb4e-4554-3eb5-c331-4497eb4439a0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Bind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="08a2cc10-63f2-50e5-b3c8-0f74afc24b80" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Bind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="99612ef0-24fc-e861-5ad3-4dbaa9616edf" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f4da4e4a-d7f9-21a1-5630-88c4d09cae61" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c468e576-360a-3528-46a3-ef0c8b6b3380" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expressions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="40e22731-ff6b-d25d-9f3a-5997d0bad2eb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ba594bbe-69c2-dfc2-c631-59c78d9ac502" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2f8ff180-7d82-f531-82c4-14056443aaef" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d0ec87b4-d64e-a66c-5ad8-a881b9c6666c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="95470e4e-c81e-fe9b-332b-6d91e5912dc0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expressions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="af96c804-4388-5947-e57a-8b84d2c9f30a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b5faef82-a77c-beb6-f23e-2ee45968e31a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b5ed7b85-8262-89c3-5473-2d5d0831a394" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="expressions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c4d21500-26f4-61d1-4b1c-9226d8825ff0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Block" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expressions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bf3fffcb-cdca-157b-5434-a7c443a3e0b4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Break" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5976aba0-81c5-2078-0a85-00c509655dbf" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Break" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b8054110-2fec-ac8f-43e6-926fcdacfd47" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Break" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="231b7ab4-20ac-05ef-f9d7-99111a1098ca" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Break" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="270cdda7-8162-5128-bed8-1296bb7249ff" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ff105194-8c3f-1985-8f12-69d93ac97818" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7ac135f6-2f3a-2357-1623-ef0691ace613" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="04153050-3998-3f85-a551-1756ec8e686c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="326ad9bf-3987-de4a-ec6a-041a1befd0c7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a5f06ada-4bef-7aa4-879a-ff48d4b98ce0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeArguments">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="102d5329-346e-24b4-7300-79f9fb72cb16" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4623f04a-7c04-cc48-e5ee-b8f98b9df84d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="486a251a-4db9-1c91-c0b2-962f671456c1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d2a5a3e2-2b3b-32d8-7fd1-f039465cbcb0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d7c5ec07-e79a-b601-d295-b99cd7adea1f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f6e67d9a-83af-8275-1b4c-b7e637dc3f21" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arg0">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg1">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg2">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg3">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arg4">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="162f6ebf-c747-1cd7-76f2-884020a89900" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8ab1966f-f85f-283a-871a-12fde17d54ff" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeArguments">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2ca8f4fe-a8ea-3e67-fe41-99d3ee1aa2ea" />
    </api>
    <api id="P:System.Linq.Expressions.Expression.CanReduce">
      <topicdata group="api" />
      <apidata name="CanReduce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanReduce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="47583aae-df45-f54e-197e-e81f8e32f850" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Catch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Catch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6d7f94c1-e241-be60-e832-dc8a9ef0d46a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Catch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Catch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ffe046bc-379e-2cc5-0fe7-090b5748c8aa" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Catch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Catch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="66a1e457-a91b-c273-e898-f5fc6bc4732a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Catch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Catch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3170b9d9-e702-ac7a-a21b-cfc4d92f74d2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)">
      <topicdata group="api" />
      <apidata name="ClearDebugInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="document">
          <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9c27b191-a890-bb38-732b-305a212ae175" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Coalesce" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="de70e30a-6954-b303-f433-c4caab4ca265" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="Coalesce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Coalesce" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cdf49c73-31fa-4c75-0d2c-33dd49409c49" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Condition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifFalse">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="69611d03-a7bd-4cd5-401f-5637c61b3393" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Condition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Condition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifFalse">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e28369e7-9779-910d-a1a9-78120fc63f9b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Constant(System.Object)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ffaf1b79-2635-1679-34a4-fe767ceff2e3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Constant" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="46b9ab97-00b0-aebc-caf8-5eecfc77dc16" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Continue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="34246395-1ac0-9d4f-0ed1-8902c81712e8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Continue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d09aeb4b-9403-1765-6183-ccdf23c73f07" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="05b14665-5df6-ff4b-a120-53a993254445" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Convert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5d0dc911-b013-ef57-d3a7-057d0e054824" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ConvertChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="21a79521-c8fb-a4b5-0eae-afb968dcada5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ConvertChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ConvertChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c0187f1c-0c84-dc0e-9019-142b14fe37ab" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="DebugInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="document">
          <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
        </parameter>
        <parameter name="startLine">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="startColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endLine">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="endColumn">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="53482668-2edb-2e3e-8167-b733880274b1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="490c5246-7fa4-2c98-6bbe-387a4f670d61" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3b99f63d-29db-26f2-10c4-ef4d637b7b4d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Default(System.Type)">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="01fefd68-f925-da19-fde6-cf08076576dc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c59681e4-c97c-7cf0-d5c9-1888c92099d2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Divide" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7fdb90df-0ac0-10a7-7796-c29293245f5c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="DivideAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.DivideAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c2c62518-feb9-d4ee-2e79-ab65546a823b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="DivideAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.DivideAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="90d07109-10f3-9178-b5e7-c4547c963f2e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="DivideAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.DivideAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e356cdf3-f30a-fca4-5fbf-8740ec298f45" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ElementInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3bba7fa0-15f8-6fcd-fb53-309d7c11dd53" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ElementInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ElementInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1e028a67-f709-777b-dcf0-a399387ecf4d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="49cb5d57-1f14-fe30-c021-212a2c3fa8b3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Equal" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4b4c51fd-52ae-772e-e822-89aadbfe6b85" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Equal" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3aac0617-34a6-8abb-a0d8-d5c6baa54a76" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOr" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2e30e691-7197-1293-c797-39f9bc680530" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOr" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2e10575f-a94b-3d22-f3e8-34733c51ce21" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ExclusiveOrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f8f8c44d-9b78-9085-936f-587d7432a973" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ExclusiveOrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f7205a5d-5ca5-8fc3-7c4d-0f9c1a7c9b8f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ExclusiveOrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ExclusiveOrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="59dae4b9-c407-c75f-d827-0345e15bb4e1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Field" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="field">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f208a383-7f79-5454-4165-feb334341e86" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Field" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="03192801-f49e-dbed-235d-ab48d624bfff" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Field" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="fieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e7ebf9a8-f8a8-f8c2-0003-e53887c2f0dd" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])">
      <topicdata group="api" />
      <apidata name="GetActionType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eca566b2-6668-e1b1-6868-f5eab85571dc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])">
      <topicdata group="api" />
      <apidata name="GetDelegateType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a49d721c-53bd-30b4-5c9c-bd613da03b19" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])">
      <topicdata group="api" />
      <apidata name="GetFuncType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0624868b-e94f-732a-dcd4-58d17a9c947f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Goto" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="403c86b4-91fc-7985-5d10-b1e822adc6df" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Goto" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="19d2c521-d17c-0e03-8eeb-517787bc484e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Goto" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eef3d9d1-5b78-4e66-4e93-a9f0d8568f6c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Goto" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="25415b3a-496e-552f-3613-fe8516d0f322" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9ffea50a-9d64-0677-2436-c5998ba33162" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b8237da9-37a9-5f1c-0381-a900ef1616d2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="df777b5f-7417-1d2e-c938-05363248d15c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6cd61fa1-b1e5-fa99-9632-842c15730347" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="IfThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7a94b60f-5854-62be-dfd4-659a82ecb94c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="IfThenElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="test">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifTrue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="ifFalse">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="683bc843-60ff-5496-049a-2e0fc3805fd2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b81aabf4-1275-3dea-fd71-4daef4d652c6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f3bd9b49-061b-9203-e336-e6e6a46e13cb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="811df138-0751-8b3b-a7b9-b5c881afe61d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7ed977a0-50ee-6a36-2943-3e84510a8898" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="IsFalse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.IsFalse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0f25d8bc-575b-a130-4344-52d3ac3d90e8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="IsFalse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.IsFalse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0d2c92f5-daea-4a66-edca-656555e6ebbf" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="IsTrue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.IsTrue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ab7a28d7-f942-75cc-64f8-7107828f0312" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="IsTrue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.IsTrue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a318e01c-4fa6-2dda-c5bd-95cafcbbcb51" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="fb4a6233-3708-19b4-65a8-28a65c7c9d39" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="52506d1e-cc9b-d934-d71f-349b45249889" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7eb37e0a-a868-f4ad-b39c-8c681c87f407" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label(System.String)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1b86ea61-1b68-b7ab-4c88-2a2dc73ab7ab" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label(System.Type)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="69828144-2dd3-25ce-78d8-7bc4fc76e630" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Label" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="71205993-6e90-2acd-3499-d7c933501079" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="36955502-be3d-9e59-0aa6-507b2464d22d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f58185f5-f01b-80a2-0fd1-30545a1ead2f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7e84bbe1-18c2-7928-43c6-4be5c5b8505a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1ea812cf-22ae-fa91-bbd9-791ea0dbd0f4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e02c9021-ebd4-d107-4957-2dad9089eb26" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="64791876-5b38-aa4d-af0d-c86eb6ca9cd8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="957470a6-9f33-2079-2995-ace143dd517b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="184e0923-e0ba-5d34-b3ea-d43674142bf5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9b99650a-e858-119f-5106-d9003f590b32" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="074d96e1-016b-d0fb-c59a-5c62b465c91e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1942c0bb-1005-ac86-1445-39740e4b23e5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="204e18a5-1bf6-8fd5-33ea-b0ee1fe71e20" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7a47c5ef-d4d4-a356-a2ba-145adb5c5405" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="022de9ca-0a22-373e-b946-d9bc353fe1ac" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="45fbacdf-324f-26fd-b980-1fdf92b3c1e8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="26296fd5-66b0-6b13-aec4-a6e1f84eca20" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tailCall">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2c9da55b-15d8-f453-4882-22715cad9e25" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Lambda" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b1e08044-0e9c-1a88-ff01-b5d4fd572e24" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="efb5bff7-9b76-edd6-7bb7-a50308cb04d3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="89931fec-19fc-49b4-5ebd-18f5bfb2f101" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LeftShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="15b9b57b-42f9-bd69-b8fc-9ee7fdee5012" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LeftShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ca161519-b0b6-f439-2dad-6b67f2bb2ebe" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="LeftShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LeftShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b1cd158c-47dc-118b-f69a-0d805bd0a93f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b4c9e857-77ea-d2e0-9c03-d52b698a465a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7bff524f-ba08-0c53-1275-f7affdc2e703" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5344b214-99ba-212a-c229-9ae88848d9ef" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ac1d76af-b1f0-ccc7-1a02-a2178be856ba" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4d87efe7-2d85-3c59-379f-b0fe9b160e9e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c68864f4-9496-c071-44e9-1352662fccc5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="47ff7529-fe87-29d1-aaac-2293845959c7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="de464ef8-22ae-1000-dc1b-47b509298342" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7f6cf286-2b6c-e7c3-f3d1-217f34a2a34a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="71efe980-40c7-712e-2b7c-65c0cbecf3c9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f80dae4f-756a-57ce-2051-422fb50daea3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="67088bdd-67bc-b89d-633d-7dd67fdd8a70" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cb2cd33c-61dd-7a6d-808b-17e4df5f3eeb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ListInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="addMethod">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="44e39c35-6bae-45e3-26c5-fd02fee2c59c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Loop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Loop" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b0aec810-c908-ce26-95c0-3386f4955d7c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Loop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Loop" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="break">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="63ec45bc-f29a-4047-35ea-66aa6acfd88f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Loop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Loop" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="break">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="continue">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bd080722-d716-3a58-439b-e1f1fbf92f7d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9db84a3a-3075-a42a-ed66-8bc69a405d6e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c6672b12-316e-f766-f37c-a92563744c28" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="MakeBinary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeBinary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="fd8272be-e083-30a6-0dec-c241c057dc1f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MakeCatchBlock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="variable">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f24e0be0-8985-86ef-5965-c20844db1e76" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="MakeGoto" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="kind">
          <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e947b3c1-e14c-3542-da91-3cb35bb811be" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="MakeIndex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a7afb785-050f-a8ca-a360-98f0d0beb7af" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
      <topicdata group="api" />
      <apidata name="MakeMemberAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b08d0db5-7360-59b6-d45f-0c5cb8ae5a0e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})">
      <topicdata group="api" />
      <apidata name="MakeTry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="finally">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="fault">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="handlers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9e72bcfe-6d30-b438-eeb0-82df3503c6d6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeUnary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
        </parameter>
        <parameter name="operand">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="715e5084-ef96-ea4f-5e38-bb9d066e4115" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MakeUnary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MakeUnary" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unaryType">
          <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
        </parameter>
        <parameter name="operand">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0047f4e2-c37b-f71a-e90b-122c790ab8cd" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="df70a536-2d17-47cc-c1e0-f2184b0e2ae3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="bindings" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5e344f98-36bb-8432-ee3d-9c4159059dd4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="02ac85d7-b6ef-0735-5258-2346a33bca39" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberBind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberBind" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="bindings" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="61a3f1a1-604e-f09a-f8bd-050639434388" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b34516e2-bef0-30a8-e67a-77aff2f5964e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])">
      <topicdata group="api" />
      <apidata name="MemberInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MemberInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="bindings" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b1bd9db0-11b4-ca77-6321-c9f98aaa8a47" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Modulo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d3fce21f-e4e8-ea43-1a15-940d16c43b25" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Modulo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f44a792e-b62b-1677-49d5-b9dd04a43d4e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ModuloAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ModuloAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="53f29fb7-9ea6-404a-ffcf-31b960cbb007" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="ModuloAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ModuloAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="aca172a3-014f-e003-b71a-f48ebbdcb4cb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="ModuloAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.ModuloAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e614aac5-6dd6-fdbb-69af-ac7beb0bd794" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0d18c029-87ea-5bee-e423-fad4979ba08a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Multiply" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="04b21394-62f9-e724-9cfd-63e6cadc4722" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MultiplyAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="12dd0499-0267-0aff-e374-376de3caf43a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MultiplyAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b0be22e4-b2f0-a706-0690-1e05d9bd0e4a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="MultiplyAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9b4b2cf9-7092-6050-cd35-3c969e50bff0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MultiplyAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="42e04c73-4e52-467f-e6c3-41376eedb65a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MultiplyAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cc26ad7c-f7df-0923-fd24-a131f5f89fea" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="MultiplyAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5a9570ca-fe6f-c958-c0b6-383d662cbe6b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="90b81401-c280-a9bb-74b0-1bc9d4c437db" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="MultiplyChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.MultiplyChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5b3932a4-141f-45d7-e0b2-e6a3c5429a43" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Negate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b4cc2f33-183c-93f3-0b62-c10540298fae" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Negate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cbefd69d-7e79-5e47-be84-6f0e6a551db8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NegateChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b78636c7-d0f3-b5d2-fb56-64e912e1a4ad" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="NegateChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NegateChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="720d3c2c-c5dd-9505-5303-5ebc60545b09" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b4eb0566-95af-5292-8c19-db69d94e805d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2f725fb6-2ba3-c72c-4f54-4d8b936b0aee" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="members">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.MemberInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6077b3e7-16d3-e758-10e1-ef35101e86cb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="members" params="true">
          <arrayOf rank="1">
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2ffb9939-ca40-3a10-3f45-2a461fd254d0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructor">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cc9594a1-91b1-6b4c-485e-3eefda3756cc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.New(System.Type)">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.New" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4bf2dceb-a2c9-29a8-3b95-b2fc7bce0cb0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayBounds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bounds">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bd3d4917-a5ec-4b51-4234-623a5fd0ff2d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="NewArrayBounds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayBounds" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="bounds" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="79f1e6fe-fd83-d937-63db-1b7c4aa65f04" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f10cad30-c4a4-4f73-c95b-63de0cd62dae" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="NewArrayInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NewArrayInit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="initializers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="180ab614-ef79-05e3-1248-bf636f7fb4b8" />
    </api>
    <api id="P:System.Linq.Expressions.Expression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e4eda770-adfa-85ee-1eb2-26a4759d9d4f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Not" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="35430cfa-2267-409e-a4ff-ac8c1c9591d4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Not" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="efbc4e0d-c3df-bab9-a3f5-b0d62a9e3d9e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NotEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="70519604-0c82-43ae-0c6c-3b455a81466b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.NotEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="liftToNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="418ed82f-eebc-bb0c-6f82-51508028a017" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="OnesComplement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OnesComplement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="95e1621e-2dc9-939e-42d3-109588e01e3d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="OnesComplement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OnesComplement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2c5e975e-6b35-be20-c858-59acd2d0c88b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Or" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bc847dad-13e7-a9de-c813-6c10772c4a40" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Or" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8d58ac6c-54b7-a0bf-930c-534b677786b5" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="OrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="19308eca-1c36-cc69-5fb5-9efc73d545ab" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="OrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8be8485f-35fa-10a0-dca8-b34a15e56d1b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="OrAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3fe507ee-8f27-6aed-d4e4-9bc666ae33f0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrElse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5230c056-39e1-0189-4f99-367fb75ed1db" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="OrElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.OrElse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="4098ff5c-815e-5f4a-57bc-28e9e7cf6fad" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Parameter(System.Type)">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Parameter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b8ec75ac-4115-b91c-b5f5-7eb1f7a2a5b4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Parameter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="90403ef3-e359-7765-9f25-012a34784038" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="PostDecrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PostDecrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2ad13fc6-1b2e-5227-382f-8bb8a83bf964" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="PostDecrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PostDecrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c0a58510-5454-c601-0187-71d0943a44f9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="PostIncrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PostIncrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="94c145ae-6188-23e9-8d1f-df23de6de66f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="PostIncrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PostIncrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ecda8250-3ae7-d434-9adf-30cd8916c6b2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Power" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e9be31c9-36ed-11c4-e365-2cf96f70b545" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Power" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a3a65458-5d8f-4d41-cb26-31e8828a8bbb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="PowerAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PowerAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="427b8d21-cb62-b6b0-69b2-79d4862625c6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="PowerAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PowerAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a3678a56-9de7-bfe8-0fd6-3912e5ffb156" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="PowerAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PowerAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3eba732e-e749-211f-cdca-2ff38e5b6ee3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="PreDecrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PreDecrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eb93b26a-8dc6-b105-32b5-aea100166c28" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="PreDecrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PreDecrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cea9b0eb-6767-b4f5-a21e-27ec948fcc48" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="PreIncrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PreIncrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0088bbce-186f-5f21-83ac-084ee5ae3e55" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="PreIncrementAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.PreIncrementAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5352d2e7-ce93-ba7b-bd89-25749e731a2e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyAccessor">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="dddae587-f226-f078-3a49-34922c3f5bce" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="fa30420c-ee13-610a-e4cb-0a7319efe360" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ff80739b-876f-3244-bb08-6815022d18bb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="indexer">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c24a7815-3836-a242-1f93-e9694260b45d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="7fb9b21e-957f-733e-4035-fd78f4df16d3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="63d70b0d-be0c-347e-f15a-2ffa0316afa1" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Property" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="53f8d22b-2d4b-331b-6f27-0e4f227a7565" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)">
      <topicdata group="api" />
      <apidata name="PropertyOrField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="propertyOrFieldName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="991314a5-5a25-105b-47c3-c7275ef9737b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Quote" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c2cb9039-fe0b-02bc-e379-23737792a796" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Reduce">
      <topicdata group="api" />
      <apidata name="Reduce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="3848d6b2-bf09-c29b-4194-1aa597612d96" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ReduceAndCheck">
      <topicdata group="api" />
      <apidata name="ReduceAndCheck" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="bf1c3fb5-34ec-df88-6ad3-4596437dc33f" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ReduceExtensions">
      <topicdata group="api" />
      <apidata name="ReduceExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="95d2de4b-4e02-d7c6-d380-f3944797b4a4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ReferenceEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d58f2791-51ef-1c85-dd02-14eebcee75a8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="ReferenceNotEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cdb6e328-64e1-8bd3-5ec3-f143c4a2be3a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Rethrow">
      <topicdata group="api" />
      <apidata name="Rethrow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Rethrow" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="01c3cf41-f36a-0c6d-fe93-2b4f4e36cafb" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Rethrow(System.Type)">
      <topicdata group="api" />
      <apidata name="Rethrow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Rethrow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c93ed5e0-29ee-68fe-ef81-87c04a5b05dc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Return" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9c7e3806-8160-7f65-6a43-437ec1f6ff82" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Return" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f5de9989-8a4a-2e62-3d0d-0fa447b1d324" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Return" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6744e4a5-c1fe-0a5f-857a-5f9e3642145b" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Return" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="89b6820e-04b7-a8cc-0fb4-a8eeb53497d9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eceeb1c4-43c4-274f-2586-bc8891423cbc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShift" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9a6969a4-a9dc-1143-edd2-9ce30db2f832" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="RightShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c06250dc-2786-1739-5d4b-41c1ebf1cb40" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="RightShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="30da4bf8-d858-a8a1-55a4-d18bd238b775" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="RightShiftAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RightShiftAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ae618fbe-0dd7-7782-6bb3-1f57313a954c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="RuntimeVariables" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RuntimeVariables" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="ac386817-26f0-de6c-3c14-55829e31e32a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])">
      <topicdata group="api" />
      <apidata name="RuntimeVariables" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.RuntimeVariables" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6cafb34e-de75-79f0-231b-bad6cdd0e63d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Subtract" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b6a21a08-f970-e2e4-f2f8-1ccbb90596dd" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Subtract" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="febae9ae-d1fc-c0d8-fad2-11418afd7d9c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="SubtractAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="5a92d3dc-86a5-406f-a382-2b2359fb4d73" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="SubtractAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="db4777ee-699a-d337-634e-d4996180d4ac" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="SubtractAssign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="dd0cab99-4414-94ef-d7c1-7eae49c61c69" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="SubtractAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="225064f5-61c5-2b02-7b2d-d1171859614d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="SubtractAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="d930702c-d7e7-8886-9c82-e2ceddb33879" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
      <topicdata group="api" />
      <apidata name="SubtractAssignChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractAssignChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="conversion">
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="02a8e0bd-007b-ba9d-ef93-02b53ef02eba" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0950a089-626c-6bb4-6d73-e8de6a8b6b58" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="SubtractChecked" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SubtractChecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="0eb12d94-0585-2a23-e46d-3878d614c735" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="cases" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2f19fb73-be53-8f50-f99a-86086a1d61e7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="cases">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2a5f700a-44d1-abf8-efc7-deb9aa3059d0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="cases" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e7f31d1f-9bc9-0cd3-78e5-c2b271c7faa0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="cases" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="cdca9db7-0483-c724-c467-7666d7fbfc44" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="cases">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1c34ea5b-9993-c9ae-0b07-dcd49a3dcfe8" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Switch" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="comparison">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="cases" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6e882b9b-b0f7-525d-b9b3-0b240b498d90" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="SwitchCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SwitchCase" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="testValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="1e5c3c9a-8dad-086e-6f7c-fbd65e5161b4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="SwitchCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SwitchCase" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="testValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="53800080-4ecb-8481-dbfd-ee3d310a1d80" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)">
      <topicdata group="api" />
      <apidata name="SymbolDocument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SymbolDocument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="b516a960-b306-35cc-9144-5ff57004e7b2" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="SymbolDocument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SymbolDocument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.Guid" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a3a30091-fea4-4516-d55b-322559df1111" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="SymbolDocument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SymbolDocument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.Guid" ref="true" />
        </parameter>
        <parameter name="languageVendor">
          <type api="T:System.Guid" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="58b1ed64-f55d-b3fe-c472-16177b78d51e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="SymbolDocument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.SymbolDocument" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.Guid" ref="true" />
        </parameter>
        <parameter name="languageVendor">
          <type api="T:System.Guid" ref="true" />
        </parameter>
        <parameter name="documentType">
          <type api="T:System.Guid" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="9ea65bf6-5aa4-8786-9240-5410bde7299a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Throw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="45bd2575-e870-2cd4-b50c-0653c9f0ab1c" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Throw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="324fdfcf-2f3e-e7cd-a43e-20cbe93582f0" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="6c9db602-4d26-316a-7ceb-461c131e1578" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])">
      <topicdata group="api" />
      <apidata name="TryCatch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="handlers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="a1377426-889f-88d7-9c3e-4c8ff8b74ea9" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])">
      <topicdata group="api" />
      <apidata name="TryCatchFinally" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="finally">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="handlers" params="true">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="e8f47a53-5509-fe6c-91aa-da445652edf7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="TryFault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="fault">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8520d255-c33d-79e2-caa2-752d97081c06" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="TryFinally" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="finally">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f2465e95-ba88-3db4-4576-05004aa4f46e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)">
      <topicdata group="api" />
      <apidata name="TryGetActionType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="actionType" out="true">
          <referenceTo>
            <type api="T:System.Type" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="8854341d-3e33-0127-3d37-1d3728a1985d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)">
      <topicdata group="api" />
      <apidata name="TryGetFuncType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeArgs">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="funcType" out="true">
          <referenceTo>
            <type api="T:System.Type" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="db0986c8-0ceb-2488-0fcc-aece1291b7a0" />
    </api>
    <api id="P:System.Linq.Expressions.Expression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="018f5f57-a6a8-c41f-dd0a-8aa5ca46bcb4" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeAs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="f1a61e03-a0ad-c597-7605-594638400bb6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eab171a0-aca5-f6b0-b5ad-a60b2757129e" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeIs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="28ed416a-ec1c-0004-d888-0eaa10614489" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.UnaryPlus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="2854ed9e-95e2-7805-4d13-ee12f8fa4c3a" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.UnaryPlus" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="76f514ea-3a2e-5d74-3497-83d5a138a6fc" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)">
      <topicdata group="api" />
      <apidata name="Unbox" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="c9f7d30e-8e85-a423-884c-abd44ed13ea6" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Variable(System.Type)">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Variable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="37771640-7f62-32da-0c5e-91ee5d3ccca7" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.Expression.Variable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="536223dc-facc-4166-a93f-5b9ebfe17ad3" />
    </api>
    <api id="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="VisitChildren" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </containers>
      <file name="eb446f97-8168-644d-b1c6-73e9ff074e5d" />
    </api>
    <api id="T:System.Linq.Expressions.Expression`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDelegate" />
      </templates>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="04d6d651-c5b8-c83d-7bef-73ee92c7394c" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.Expression`1">
      <topicdata name="Expression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression`1.Compile" />
        <element api="M:System.Linq.Expressions.Expression`1.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Name" />
        <element api="P:System.Linq.Expressions.LambdaExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
        <element api="P:System.Linq.Expressions.LambdaExpression.ReturnType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.TailCall" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" />
      </containers>
      <file name="e102d7ad-cb10-f1f3-b2b8-b31f9e6914fb" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.Expression`1">
      <topicdata name="Expression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression`1.Compile" />
        <element api="M:System.Linq.Expressions.Expression`1.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" />
      </containers>
      <file name="19b8cf62-c8f8-74f0-b240-a950c82c2d0b" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.Expression`1">
      <topicdata name="Expression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.Expression`1" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TDelegate" />
      </templates>
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Name" />
        <element api="P:System.Linq.Expressions.LambdaExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
        <element api="P:System.Linq.Expressions.LambdaExpression.ReturnType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.TailCall" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" />
      </containers>
      <file name="3a4da1e2-44a6-564b-51ea-cace09ae0663" />
    </api>
    <api id="M:System.Linq.Expressions.Expression`1.Compile">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <template name="TDelegate" index="0" api="T:System.Linq.Expressions.Expression`1" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" ref="true" />
      </containers>
      <file name="c012499d-3321-4ede-d568-c24bb60ca90d" />
    </api>
    <api id="M:System.Linq.Expressions.Expression`1.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression`1" ref="true">
          <specialization>
            <template name="TDelegate" index="0" api="T:System.Linq.Expressions.Expression`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.Expression`1" ref="true" />
      </containers>
      <file name="059083c1-5764-8265-1bb8-a726d610a506" />
    </api>
    <api id="T:System.Linq.Expressions.ExpressionType">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ExpressionType" />
      <apidata name="ExpressionType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Enum" ref="true" />
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="fce9722b-33cb-b268-b8bf-acd16347e0f1" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ExpressionType">
      <topicdata name="ExpressionType" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ExpressionType" />
      <apidata name="ExpressionType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.ExpressionType.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="F:System.Linq.Expressions.ExpressionType.Add" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.And" />
        <element api="F:System.Linq.Expressions.ExpressionType.AndAlso" />
        <element api="F:System.Linq.Expressions.ExpressionType.AndAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayIndex" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayLength" />
        <element api="F:System.Linq.Expressions.ExpressionType.Assign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Block" />
        <element api="F:System.Linq.Expressions.ExpressionType.Call" />
        <element api="F:System.Linq.Expressions.ExpressionType.Coalesce" />
        <element api="F:System.Linq.Expressions.ExpressionType.Conditional" />
        <element api="F:System.Linq.Expressions.ExpressionType.Constant" />
        <element api="F:System.Linq.Expressions.ExpressionType.Convert" />
        <element api="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.DebugInfo" />
        <element api="F:System.Linq.Expressions.ExpressionType.Decrement" />
        <element api="F:System.Linq.Expressions.ExpressionType.Default" />
        <element api="F:System.Linq.Expressions.ExpressionType.Divide" />
        <element api="F:System.Linq.Expressions.ExpressionType.DivideAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Dynamic" />
        <element api="F:System.Linq.Expressions.ExpressionType.Equal" />
        <element api="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />
        <element api="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Extension" />
        <element api="F:System.Linq.Expressions.ExpressionType.Goto" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.Increment" />
        <element api="F:System.Linq.Expressions.ExpressionType.Index" />
        <element api="F:System.Linq.Expressions.ExpressionType.Invoke" />
        <element api="F:System.Linq.Expressions.ExpressionType.IsFalse" />
        <element api="F:System.Linq.Expressions.ExpressionType.IsTrue" />
        <element api="F:System.Linq.Expressions.ExpressionType.Label" />
        <element api="F:System.Linq.Expressions.ExpressionType.Lambda" />
        <element api="F:System.Linq.Expressions.ExpressionType.LeftShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.ListInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Loop" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberAccess" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Modulo" />
        <element api="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Multiply" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Negate" />
        <element api="F:System.Linq.Expressions.ExpressionType.NegateChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.New" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Not" />
        <element api="F:System.Linq.Expressions.ExpressionType.NotEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.OnesComplement" />
        <element api="F:System.Linq.Expressions.ExpressionType.Or" />
        <element api="F:System.Linq.Expressions.ExpressionType.OrAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.OrElse" />
        <element api="F:System.Linq.Expressions.ExpressionType.Parameter" />
        <element api="F:System.Linq.Expressions.ExpressionType.PostDecrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PostIncrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Power" />
        <element api="F:System.Linq.Expressions.ExpressionType.PowerAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PreDecrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PreIncrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Quote" />
        <element api="F:System.Linq.Expressions.ExpressionType.RightShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" />
        <element api="F:System.Linq.Expressions.ExpressionType.Subtract" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Switch" />
        <element api="F:System.Linq.Expressions.ExpressionType.Throw" />
        <element api="F:System.Linq.Expressions.ExpressionType.Try" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeAs" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeIs" />
        <element api="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />
        <element api="F:System.Linq.Expressions.ExpressionType.Unbox" />
        <element api="F:System.Linq.Expressions.ExpressionType.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" />
      </containers>
      <file name="d96d33d1-1a6b-6979-eaf1-500ff4faa131" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ExpressionType">
      <topicdata name="ExpressionType" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ExpressionType" />
      <apidata name="ExpressionType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.ExpressionType.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" />
      </containers>
      <file name="ce5f9391-28b3-839d-807b-02e7559869e3" />
    </api>
    <api id="Fields.T:System.Linq.Expressions.ExpressionType">
      <topicdata name="ExpressionType" group="list" subgroup="Fields" typeTopicId="T:System.Linq.Expressions.ExpressionType" />
      <apidata name="ExpressionType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Linq.Expressions.ExpressionType.Add" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.AddChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.And" />
        <element api="F:System.Linq.Expressions.ExpressionType.AndAlso" />
        <element api="F:System.Linq.Expressions.ExpressionType.AndAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayIndex" />
        <element api="F:System.Linq.Expressions.ExpressionType.ArrayLength" />
        <element api="F:System.Linq.Expressions.ExpressionType.Assign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Block" />
        <element api="F:System.Linq.Expressions.ExpressionType.Call" />
        <element api="F:System.Linq.Expressions.ExpressionType.Coalesce" />
        <element api="F:System.Linq.Expressions.ExpressionType.Conditional" />
        <element api="F:System.Linq.Expressions.ExpressionType.Constant" />
        <element api="F:System.Linq.Expressions.ExpressionType.Convert" />
        <element api="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.DebugInfo" />
        <element api="F:System.Linq.Expressions.ExpressionType.Decrement" />
        <element api="F:System.Linq.Expressions.ExpressionType.Default" />
        <element api="F:System.Linq.Expressions.ExpressionType.Divide" />
        <element api="F:System.Linq.Expressions.ExpressionType.DivideAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Dynamic" />
        <element api="F:System.Linq.Expressions.ExpressionType.Equal" />
        <element api="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />
        <element api="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Extension" />
        <element api="F:System.Linq.Expressions.ExpressionType.Goto" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.Increment" />
        <element api="F:System.Linq.Expressions.ExpressionType.Index" />
        <element api="F:System.Linq.Expressions.ExpressionType.Invoke" />
        <element api="F:System.Linq.Expressions.ExpressionType.IsFalse" />
        <element api="F:System.Linq.Expressions.ExpressionType.IsTrue" />
        <element api="F:System.Linq.Expressions.ExpressionType.Label" />
        <element api="F:System.Linq.Expressions.ExpressionType.Lambda" />
        <element api="F:System.Linq.Expressions.ExpressionType.LeftShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThan" />
        <element api="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.ListInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Loop" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberAccess" />
        <element api="F:System.Linq.Expressions.ExpressionType.MemberInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Modulo" />
        <element api="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Multiply" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Negate" />
        <element api="F:System.Linq.Expressions.ExpressionType.NegateChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.New" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />
        <element api="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />
        <element api="F:System.Linq.Expressions.ExpressionType.Not" />
        <element api="F:System.Linq.Expressions.ExpressionType.NotEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.OnesComplement" />
        <element api="F:System.Linq.Expressions.ExpressionType.Or" />
        <element api="F:System.Linq.Expressions.ExpressionType.OrAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.OrElse" />
        <element api="F:System.Linq.Expressions.ExpressionType.Parameter" />
        <element api="F:System.Linq.Expressions.ExpressionType.PostDecrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PostIncrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Power" />
        <element api="F:System.Linq.Expressions.ExpressionType.PowerAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PreDecrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.PreIncrementAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.Quote" />
        <element api="F:System.Linq.Expressions.ExpressionType.RightShift" />
        <element api="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" />
        <element api="F:System.Linq.Expressions.ExpressionType.Subtract" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />
        <element api="F:System.Linq.Expressions.ExpressionType.Switch" />
        <element api="F:System.Linq.Expressions.ExpressionType.Throw" />
        <element api="F:System.Linq.Expressions.ExpressionType.Try" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeAs" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeEqual" />
        <element api="F:System.Linq.Expressions.ExpressionType.TypeIs" />
        <element api="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />
        <element api="F:System.Linq.Expressions.ExpressionType.Unbox" />
        <element api="F:System.Linq.Expressions.ExpressionType.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" />
      </containers>
      <file name="ef602cd7-34cb-477b-57c9-c46f79927c1e" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="7fc2b1f9-0745-1eb2-5baa-b521c7acdab9" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AddAssign">
      <topicdata group="api" />
      <apidata name="AddAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>63</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="a95160c4-a736-d59a-fb9a-43331f697306" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AddAssignChecked">
      <topicdata group="api" />
      <apidata name="AddAssignChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>74</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="6aab1a32-2b5b-81b1-4c59-b3e323773ea3" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AddChecked">
      <topicdata group="api" />
      <apidata name="AddChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="31a8479a-dce8-e36b-739f-5fa7da63b844" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.And">
      <topicdata group="api" />
      <apidata name="And" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="664e6f43-26d9-9cf3-95b1-278702bea7a9" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AndAlso">
      <topicdata group="api" />
      <apidata name="AndAlso" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="af0a6ba8-b0b4-c7eb-9315-832afcdb60d0" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.AndAssign">
      <topicdata group="api" />
      <apidata name="AndAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e1cf2d1b-4c26-29c1-1afd-d1e6504c7ece" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ArrayIndex">
      <topicdata group="api" />
      <apidata name="ArrayIndex" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="a94a50a3-c95e-f5c7-20a4-8ecbdf102877" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ArrayLength">
      <topicdata group="api" />
      <apidata name="ArrayLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="ad4e13d1-a88a-d78e-7b1d-a94c370d9e6c" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Assign">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>46</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="0754e9a7-77c4-1702-ef8f-64ae7a335ccc" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Block">
      <topicdata group="api" />
      <apidata name="Block" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>47</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="f6ccd5cc-9cad-14d8-18c2-a8ec0f9303c5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Call">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="00ea39cc-9681-daa2-d146-c366931396bb" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Coalesce">
      <topicdata group="api" />
      <apidata name="Coalesce" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="bb929f4b-695e-fff2-8b0a-f728b7ca4f36" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Conditional">
      <topicdata group="api" />
      <apidata name="Conditional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2e6ac8ee-2187-128a-3aef-b56eed096a3c" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Constant">
      <topicdata group="api" />
      <apidata name="Constant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="6acd89f6-b42c-7a3b-db34-28c443f228d5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Convert">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="6d5d1ec0-c910-924d-4258-70f210d4d731" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ConvertChecked">
      <topicdata group="api" />
      <apidata name="ConvertChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="d83230c6-f656-b09d-c56d-0f53f1a8f208" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.DebugInfo">
      <topicdata group="api" />
      <apidata name="DebugInfo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>48</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="af698369-4b6f-0044-57c3-1fd1142e6296" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Decrement">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>49</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="4a9b21db-60c0-0924-0b2f-34e39a1e1b6a" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>51</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="839c8cf9-db42-d87e-0e46-c4dcb1e3fbce" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Divide">
      <topicdata group="api" />
      <apidata name="Divide" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="fdc3ebd7-c2a1-3b78-a6d1-733a63761471" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.DivideAssign">
      <topicdata group="api" />
      <apidata name="DivideAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>65</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e8ade7e4-e5bc-420a-fc6f-1ef034ea6b4a" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Dynamic">
      <topicdata group="api" />
      <apidata name="Dynamic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>50</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="65173a5e-68e0-88f9-aa19-64e61e5e0ecd" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Equal">
      <topicdata group="api" />
      <apidata name="Equal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e3bdbc28-b655-774b-237e-27dfd140e7ca" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ExclusiveOr">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="d547b37e-cffd-6ebb-9458-84e3e5c63a67" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign">
      <topicdata group="api" />
      <apidata name="ExclusiveOrAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>66</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2efcb9d7-22df-c79d-81e2-2992e62415f5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Extension">
      <topicdata group="api" />
      <apidata name="Extension" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>52</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="8cec935b-26ba-0ead-aa6b-2cbaa2e427c5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Goto">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>53</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="60e712b7-517a-d395-41d7-623fbe49a124" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.GreaterThan">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="087c1fbc-3fe8-9e86-2a88-00f15379c9df" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="d8740913-0491-90cb-1c2d-5cff1d1c3107" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Increment">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>54</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="0a0f57f2-33fd-58ab-c36d-c5405be69385" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>55</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="ef5c48a8-2456-4bb6-d85c-f590528d03c4" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Invoke">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="0fbe8b4a-ae17-8d6d-b3e1-a67f1030f48a" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.IsFalse">
      <topicdata group="api" />
      <apidata name="IsFalse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>84</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="3c6326aa-73af-df27-2b77-40c209924fef" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.IsTrue">
      <topicdata group="api" />
      <apidata name="IsTrue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>83</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e3f799f9-37e4-bed4-577a-75e04d41e901" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Label">
      <topicdata group="api" />
      <apidata name="Label" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>56</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2700b750-b13e-d559-771a-a51411e9fecb" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Lambda">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="20b9a09a-8aa3-deda-e56a-18d138d5b99e" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LeftShift">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="53ec9cab-5381-2a64-8548-e9356d48c14d" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign">
      <topicdata group="api" />
      <apidata name="LeftShiftAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>67</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e9ab4a1d-3335-5833-f731-6cd7799e64d7" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LessThan">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="4d651266-35a2-e3f8-6273-9bcb02b00136" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="13cb7d13-95ef-3cdd-d4bd-47e8f7e6529e" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ListInit">
      <topicdata group="api" />
      <apidata name="ListInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="ea4252b8-d746-79dc-913c-06e183cce9c3" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Loop">
      <topicdata group="api" />
      <apidata name="Loop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>58</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="984178f3-8828-839e-fbcf-e01bc0b2d981" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MemberAccess">
      <topicdata group="api" />
      <apidata name="MemberAccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="16ea2775-c954-0e68-fcf8-711262b3965d" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MemberInit">
      <topicdata group="api" />
      <apidata name="MemberInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>24</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="1e125ea0-f1bb-1135-2b55-5262ff7566f8" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Modulo">
      <topicdata group="api" />
      <apidata name="Modulo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="69ab168d-8507-cc4b-46ae-e96d8386fb17" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.ModuloAssign">
      <topicdata group="api" />
      <apidata name="ModuloAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>68</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="dc061829-ff35-90a1-829c-9526929ce183" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Multiply">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="4db802e3-d10b-d9f4-0aba-0400b1b45f56" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MultiplyAssign">
      <topicdata group="api" />
      <apidata name="MultiplyAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>69</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2ce907d9-1eb2-3f25-e82c-647e6bfe2a59" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked">
      <topicdata group="api" />
      <apidata name="MultiplyAssignChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>75</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="5c2644f4-46ab-121d-e755-9d2eb29f7e7b" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.MultiplyChecked">
      <topicdata group="api" />
      <apidata name="MultiplyChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="886df754-b191-141b-a0ec-0ae83d43a953" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Negate">
      <topicdata group="api" />
      <apidata name="Negate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>28</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="bdb5ccdc-67ba-4125-4163-a0927fbdf83d" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NegateChecked">
      <topicdata group="api" />
      <apidata name="NegateChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="7ddd3228-05af-7967-0748-e8daef30db8a" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.New">
      <topicdata group="api" />
      <apidata name="New" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="19de4cde-928a-40ae-8ac1-9f714b1d5b21" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NewArrayBounds">
      <topicdata group="api" />
      <apidata name="NewArrayBounds" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="89c7aa7a-ebdf-20f6-878f-46c8d342aa62" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NewArrayInit">
      <topicdata group="api" />
      <apidata name="NewArrayInit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="87f6f7cf-a6d1-b7d4-31a0-6b2851e2f532" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Not">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="237c94a0-79e0-4f61-8f89-36c29074cf15" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.NotEqual">
      <topicdata group="api" />
      <apidata name="NotEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>35</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="18296cbf-2da9-d31b-8109-4bc3f4c58c63" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.OnesComplement">
      <topicdata group="api" />
      <apidata name="OnesComplement" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>82</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="100b961a-4300-ac18-713d-941b11404907" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Or">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>36</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="67a0d66d-9478-8927-f6e4-b2698842b9e2" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.OrAssign">
      <topicdata group="api" />
      <apidata name="OrAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>70</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="817fe38a-a2c6-3390-ae37-b15e7355cd08" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.OrElse">
      <topicdata group="api" />
      <apidata name="OrElse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>37</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="b462bcf9-50f0-e1b4-b1e3-46fb52c50183" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Parameter">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>38</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="1a1ac385-771d-d094-4bbc-4a04f4dbda4d" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.PostDecrementAssign">
      <topicdata group="api" />
      <apidata name="PostDecrementAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>80</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="95bceda9-04a0-d438-c9f3-bd85e357da6d" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.PostIncrementAssign">
      <topicdata group="api" />
      <apidata name="PostIncrementAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>79</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="40416df0-6a30-218c-bf73-5be1ad92ac46" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Power">
      <topicdata group="api" />
      <apidata name="Power" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>39</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="dce1f9c9-cf0b-ce15-3f53-73facb716acc" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.PowerAssign">
      <topicdata group="api" />
      <apidata name="PowerAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>71</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="73a37e4b-8d91-f3b3-34a7-1901f8b73bfc" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.PreDecrementAssign">
      <topicdata group="api" />
      <apidata name="PreDecrementAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>78</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="86f47f22-e766-dcf5-0097-9be468b28573" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.PreIncrementAssign">
      <topicdata group="api" />
      <apidata name="PreIncrementAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>77</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="9929049e-b5e3-193c-dcf4-e5c76418ddfb" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Quote">
      <topicdata group="api" />
      <apidata name="Quote" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>40</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="08216517-51dc-9b60-82dc-952b2abc5fd5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.RightShift">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>41</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="cd150140-c68d-a8bc-3d6e-1ea9d7af5162" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.RightShiftAssign">
      <topicdata group="api" />
      <apidata name="RightShiftAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>72</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="350765ab-7588-edbc-ecfe-8ccc2de4eddb" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.RuntimeVariables">
      <topicdata group="api" />
      <apidata name="RuntimeVariables" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>57</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="4c30fc78-6162-19f4-7da8-f85828df6535" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Subtract">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>42</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="d2a95533-619c-1cdf-6fcc-7b6c08e46813" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.SubtractAssign">
      <topicdata group="api" />
      <apidata name="SubtractAssign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>73</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="b38d7f09-ca3d-8360-482e-e27ac4037dc5" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked">
      <topicdata group="api" />
      <apidata name="SubtractAssignChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>76</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="30bfb86b-663a-d4d9-98aa-434d0306205b" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.SubtractChecked">
      <topicdata group="api" />
      <apidata name="SubtractChecked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>43</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="38b4701d-ba9b-6fdb-b729-c063ab41170f" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Switch">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>59</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2721978d-3cf8-3d2b-6a8b-ceadf92ab770" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Throw">
      <topicdata group="api" />
      <apidata name="Throw" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>60</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="2d53bb23-b6b3-f4e5-f23a-29c89b0531d6" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Try">
      <topicdata group="api" />
      <apidata name="Try" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>61</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="1681cfb1-4481-4337-cda2-d1831de2452f" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.TypeAs">
      <topicdata group="api" />
      <apidata name="TypeAs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>44</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="437d70f9-1e45-ebe5-4da1-755403d7e703" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.TypeEqual">
      <topicdata group="api" />
      <apidata name="TypeEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>81</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="7eef98fa-5f17-d923-4744-a12f0adffeb3" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.TypeIs">
      <topicdata group="api" />
      <apidata name="TypeIs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>45</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="e3849e22-a7cf-912d-53f8-e6e156b5a323" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.UnaryPlus">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="7dba5ad3-bd24-b301-8bda-8a8ffa97db51" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.Unbox">
      <topicdata group="api" />
      <apidata name="Unbox" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <value>62</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="6ad322be-03cc-23c3-0969-54e3c5ce89d1" />
    </api>
    <api id="F:System.Linq.Expressions.ExpressionType.value__">
      <topicdata group="api" />
      <apidata name="value__" group="member" subgroup="field" />
      <memberdata visibility="public" special="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </containers>
      <file name="ebbdf3a0-ca9b-d73d-1467-266393e18493" />
    </api>
    <api id="T:System.Linq.Expressions.ExpressionVisitor">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ExpressionVisitor" />
      <apidata name="ExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="825a61f0-9e3a-36fe-5008-3e8a087c5938" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ExpressionVisitor">
      <topicdata name="ExpressionVisitor" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ExpressionVisitor" />
      <apidata name="ExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.#ctor" />
        <element api="Overload:System.Linq.Expressions.ExpressionVisitor.Visit">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
        </element>
        <element api="Overload:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" />
      </containers>
      <file name="0ab321ff-6abb-2f19-aee1-adb4f4173f10" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ExpressionVisitor">
      <topicdata name="ExpressionVisitor" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ExpressionVisitor" />
      <apidata name="ExpressionVisitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Linq.Expressions.ExpressionVisitor.Visit">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
        </element>
        <element api="Overload:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert">
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
          <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
        </element>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" />
      </containers>
      <file name="2fdaf4c2-2b94-e29e-165e-c7b28f0084b2" />
    </api>
    <api id="Overload:System.Linq.Expressions.ExpressionVisitor.Visit">
      <topicdata name="Visit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ExpressionVisitor" />
      <apidata name="Visit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="35aedb29-26a4-521a-c08c-37c337474184" />
    </api>
    <api id="Overload:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert">
      <topicdata name="VisitAndConvert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ExpressionVisitor" />
      <apidata name="VisitAndConvert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
        <element api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="71a57191-8cb6-1954-852d-cda3ee4c3ddf" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="058d657c-c0af-67e7-472a-2d1c44185238" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.Expressions.ExpressionVisitor.Visit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nodes">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="bc712994-2af7-1237-bd55-ee9923f24a8c" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Linq.Expressions.ExpressionVisitor.Visit" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="nodes">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="elementVisitor">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
              <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="da0b75d8-852b-265c-8166-7da5f9633bb6" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Visit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.Expressions.ExpressionVisitor.Visit" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="491c02fd-d965-f000-3639-5b033f0b7045" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)">
      <topicdata group="api" />
      <apidata name="VisitAndConvert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="nodes">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="callerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="b051e80f-ac1a-bfb0-6caa-907a60cc14c1" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)">
      <topicdata group="api" />
      <apidata name="VisitAndConvert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="node">
          <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
        </parameter>
        <parameter name="callerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="a5cc8ebf-20f8-b3d9-79ca-457e27d4642d" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
      <topicdata group="api" />
      <apidata name="VisitBinary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.BinaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="b19d16be-be58-2701-9bee-94abf1d135a5" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)">
      <topicdata group="api" />
      <apidata name="VisitBlock" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.BlockExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="8ef90b7f-a94d-da69-7e5f-ee6aa125e5e2" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
      <topicdata group="api" />
      <apidata name="VisitCatchBlock" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="e7b57ffd-224d-4b1a-0a3f-14525b6e9ffa" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
      <topicdata group="api" />
      <apidata name="VisitConditional" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.ConditionalExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="56d6a5fe-9138-c242-4aac-4d80f7d449a0" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
      <topicdata group="api" />
      <apidata name="VisitConstant" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.ConstantExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="d845a120-93c1-264c-f2ef-4d7959d60211" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
      <topicdata group="api" />
      <apidata name="VisitDebugInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.DebugInfoExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="1268a987-3832-f874-5ab8-10deabd2d5d9" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)">
      <topicdata group="api" />
      <apidata name="VisitDefault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.DefaultExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="b96ef41a-114f-4b33-3153-11c801108b02" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
      <topicdata group="api" />
      <apidata name="VisitElementInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="62e3a1c4-c14e-bb62-b122-e64d1a52a098" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="VisitExtension" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="5258abf3-2c1f-783e-bdd1-ea7be51ab933" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)">
      <topicdata group="api" />
      <apidata name="VisitGoto" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="7823faff-93d7-ce4a-88f2-94616978d5cc" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)">
      <topicdata group="api" />
      <apidata name="VisitIndex" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="4c07c456-7fe4-1221-4b45-bb526e04580a" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
      <topicdata group="api" />
      <apidata name="VisitInvocation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="997b1f6a-b29d-2df4-f385-b4abf5098430" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)">
      <topicdata group="api" />
      <apidata name="VisitLabel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="36632e9f-4e67-b410-78fd-de4421e22995" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
      <topicdata group="api" />
      <apidata name="VisitLabelTarget" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="c15945c4-9d2a-d1bb-b4cd-1cb9c3f2f56c" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
      <topicdata group="api" />
      <apidata name="VisitLambda" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="ab6c16b0-7976-dffb-b699-49ee03dc774c" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
      <topicdata group="api" />
      <apidata name="VisitListInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="ddf2e533-05e7-8a09-92aa-209f5e696cfe" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)">
      <topicdata group="api" />
      <apidata name="VisitLoop" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="7f7f1086-d7ef-af30-4ef5-ff46b2f2d601" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
      <topicdata group="api" />
      <apidata name="VisitMember" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="10dbf09c-49b0-23b1-950c-40eacea80569" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
      <topicdata group="api" />
      <apidata name="VisitMemberAssignment" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="f6d85e42-bd13-b67c-78bf-4a6a759e94b5" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
      <topicdata group="api" />
      <apidata name="VisitMemberBinding" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="4312455b-741c-3651-2358-1bbcfe14a4aa" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
      <topicdata group="api" />
      <apidata name="VisitMemberInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="2c43203b-ccc7-4634-3368-a346c4f4e38a" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
      <topicdata group="api" />
      <apidata name="VisitMemberListBinding" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="e208f8a0-b292-4f22-1b2a-3f55d49ee466" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
      <topicdata group="api" />
      <apidata name="VisitMemberMemberBinding" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="21d0db69-1190-f168-116d-21e31fdbd1d1" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
      <topicdata group="api" />
      <apidata name="VisitMethodCall" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="2cc8c11c-2a4d-e241-e7c1-8127b46a8681" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
      <topicdata group="api" />
      <apidata name="VisitNew" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="40cdf076-01ed-582e-fc6c-2a00335077d0" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
      <topicdata group="api" />
      <apidata name="VisitNewArray" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="63adbe8b-708f-7300-bd80-650fbaa9af7b" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
      <topicdata group="api" />
      <apidata name="VisitParameter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="f81061e6-2b31-1598-6f5b-572366e01e36" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
      <topicdata group="api" />
      <apidata name="VisitRuntimeVariables" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="27922fc0-a414-e592-a8e8-2c501352ad8e" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
      <topicdata group="api" />
      <apidata name="VisitSwitch" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="08576ec1-e36e-056b-d68d-13df83e17c9f" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
      <topicdata group="api" />
      <apidata name="VisitSwitchCase" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="7358dc81-de6d-ff24-523c-c4d3a7d8d1a1" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)">
      <topicdata group="api" />
      <apidata name="VisitTry" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="0355b623-cf62-d496-6dc4-bdeeb6fac975" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
      <topicdata group="api" />
      <apidata name="VisitTypeBinary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="a159eedc-9bd8-7300-60a1-11b66fbb21f8" />
    </api>
    <api id="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
      <topicdata group="api" />
      <apidata name="VisitUnary" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
      </containers>
      <file name="c0ab4334-20a4-d3de-676c-12730683e823" />
    </api>
    <api id="T:System.Linq.Expressions.GotoExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.GotoExpression" />
      <apidata name="GotoExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="8a92c5cf-ef5b-8326-e888-737c4e18d0cd" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.GotoExpression">
      <topicdata name="GotoExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.GotoExpression" />
      <apidata name="GotoExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.GotoExpression.Kind" />
        <element api="P:System.Linq.Expressions.GotoExpression.NodeType" />
        <element api="P:System.Linq.Expressions.GotoExpression.Target" />
        <element api="P:System.Linq.Expressions.GotoExpression.Type" />
        <element api="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
        <element api="P:System.Linq.Expressions.GotoExpression.Value" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" />
      </containers>
      <file name="e0bebc4c-8df5-1fd9-a8e4-c14056473d30" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.GotoExpression">
      <topicdata name="GotoExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.GotoExpression" />
      <apidata name="GotoExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" />
      </containers>
      <file name="266524e8-70fc-d7ba-fc67-7843560f1811" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.GotoExpression">
      <topicdata name="GotoExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.GotoExpression" />
      <apidata name="GotoExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.GotoExpression.Kind" />
        <element api="P:System.Linq.Expressions.GotoExpression.NodeType" />
        <element api="P:System.Linq.Expressions.GotoExpression.Target" />
        <element api="P:System.Linq.Expressions.GotoExpression.Type" />
        <element api="P:System.Linq.Expressions.GotoExpression.Value" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" />
      </containers>
      <file name="e7b89f0b-ecf2-60e0-61b9-83fed8873b8c" />
    </api>
    <api id="P:System.Linq.Expressions.GotoExpression.Kind">
      <topicdata group="api" />
      <apidata name="Kind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Kind" />
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="d9321bfa-b2cb-9395-32bf-a8545e71fdda" />
    </api>
    <api id="P:System.Linq.Expressions.GotoExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="777f55af-53b8-1346-577c-e51ec0476a12" />
    </api>
    <api id="P:System.Linq.Expressions.GotoExpression.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Target" />
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="616722be-96b2-3d46-8b76-686e86341bda" />
    </api>
    <api id="P:System.Linq.Expressions.GotoExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="dc19929a-fcb2-3bee-6773-cf6127d387e8" />
    </api>
    <api id="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="818b8ad5-4d25-b9ed-2e25-231878c3da56" />
    </api>
    <api id="P:System.Linq.Expressions.GotoExpression.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpression" ref="true" />
      </containers>
      <file name="20678871-6771-368d-c828-b608feba2490" />
    </api>
    <api id="T:System.Linq.Expressions.GotoExpressionKind">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.GotoExpressionKind" />
      <apidata name="GotoExpressionKind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Enum" ref="true" />
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="593fa34f-8e0d-1eaf-8dc9-7b829fd0c2f4" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.GotoExpressionKind">
      <topicdata name="GotoExpressionKind" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.GotoExpressionKind" />
      <apidata name="GotoExpressionKind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.GotoExpressionKind.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Break" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Continue" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Goto" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Return" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" />
      </containers>
      <file name="6c80e5ca-3910-b5d1-0eb5-a70263c47c1d" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.GotoExpressionKind">
      <topicdata name="GotoExpressionKind" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.GotoExpressionKind" />
      <apidata name="GotoExpressionKind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.GotoExpressionKind.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" />
      </containers>
      <file name="8b9ad1d4-f3af-a063-1132-1ad5f1412b15" />
    </api>
    <api id="Fields.T:System.Linq.Expressions.GotoExpressionKind">
      <topicdata name="GotoExpressionKind" group="list" subgroup="Fields" typeTopicId="T:System.Linq.Expressions.GotoExpressionKind" />
      <apidata name="GotoExpressionKind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Break" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Continue" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Goto" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.Return" />
        <element api="F:System.Linq.Expressions.GotoExpressionKind.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" />
      </containers>
      <file name="557ab1b2-5820-b15d-8300-b32f701cab97" />
    </api>
    <api id="F:System.Linq.Expressions.GotoExpressionKind.Break">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </containers>
      <file name="5b297724-5a01-663f-1eaf-15ea00e8e7f7" />
    </api>
    <api id="F:System.Linq.Expressions.GotoExpressionKind.Continue">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </containers>
      <file name="2ce1e608-dd88-a864-436f-7256eba0443c" />
    </api>
    <api id="F:System.Linq.Expressions.GotoExpressionKind.Goto">
      <topicdata group="api" />
      <apidata name="Goto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </containers>
      <file name="369ac04f-5262-318e-f052-387208fb28a4" />
    </api>
    <api id="F:System.Linq.Expressions.GotoExpressionKind.Return">
      <topicdata group="api" />
      <apidata name="Return" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </containers>
      <file name="ec64409a-1233-2f96-f15a-4583077b49a7" />
    </api>
    <api id="F:System.Linq.Expressions.GotoExpressionKind.value__">
      <topicdata group="api" />
      <apidata name="value__" group="member" subgroup="field" />
      <memberdata visibility="public" special="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.GotoExpressionKind" ref="true" />
      </containers>
      <file name="189517dc-e524-9eeb-8032-8a09781bcdf3" />
    </api>
    <api id="T:System.Linq.Expressions.IArgumentProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.IArgumentProvider" />
      <apidata name="IArgumentProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="bebe9ddf-7b6a-0e88-fc4f-f91e3feec024" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.IArgumentProvider">
      <topicdata name="IArgumentProvider" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.IArgumentProvider" />
      <apidata name="IArgumentProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
        <element api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IArgumentProvider" />
      </containers>
      <file name="ba154343-4ca2-93ab-a80a-615be1305d01" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.IArgumentProvider">
      <topicdata name="IArgumentProvider" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.IArgumentProvider" />
      <apidata name="IArgumentProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IArgumentProvider" />
      </containers>
      <file name="0042e9d6-dedc-4230-01f1-a35d8d8df81f" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.IArgumentProvider">
      <topicdata name="IArgumentProvider" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.IArgumentProvider" />
      <apidata name="IArgumentProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IArgumentProvider" />
      </containers>
      <file name="dba68d02-1c62-da96-b84a-82be8870053f" />
    </api>
    <api id="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
      <topicdata group="api" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </containers>
      <file name="d05a6fed-dcb9-d3d2-c40e-e98767edac04" />
    </api>
    <api id="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </containers>
      <file name="f5fab55d-f845-49ed-32dd-8f1c0f00c876" />
    </api>
    <api id="T:System.Linq.Expressions.IDynamicExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.IDynamicExpression" />
      <apidata name="IDynamicExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="b4270c21-f330-576c-f0d0-424a2349243d" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.IDynamicExpression">
      <topicdata name="IDynamicExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.IDynamicExpression" />
      <apidata name="IDynamicExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
        <element api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite" />
        <element api="P:System.Linq.Expressions.IDynamicExpression.DelegateType" />
        <element api="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" />
      </containers>
      <file name="6d42384e-537b-a261-9c34-7387562aded2" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.IDynamicExpression">
      <topicdata name="IDynamicExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.IDynamicExpression" />
      <apidata name="IDynamicExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite" />
        <element api="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" />
      </containers>
      <file name="b1ae615a-b656-51fd-6cc5-24ee84b17157" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.IDynamicExpression">
      <topicdata name="IDynamicExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.IDynamicExpression" />
      <apidata name="IDynamicExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
        <element api="P:System.Linq.Expressions.IDynamicExpression.DelegateType" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" />
      </containers>
      <file name="c43ca2e5-7c26-7b71-4502-4f5f7c1ce3b2" />
    </api>
    <api id="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite">
      <topicdata group="api" />
      <apidata name="CreateCallSite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
      </containers>
      <file name="1e04fe02-fe97-3206-773c-1668d65727dc" />
    </api>
    <api id="P:System.Linq.Expressions.IDynamicExpression.DelegateType">
      <topicdata group="api" />
      <apidata name="DelegateType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DelegateType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
      </containers>
      <file name="7d67c4c7-a9a1-1466-ab3a-8ab2e86d76a7" />
    </api>
    <api id="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])">
      <topicdata group="api" />
      <apidata name="Rewrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IDynamicExpression" ref="true" />
      </containers>
      <file name="aa507fe3-92d7-cc6e-0401-4e347c3acc23" />
    </api>
    <api id="T:System.Linq.Expressions.IndexExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.IndexExpression" />
      <apidata name="IndexExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="b04013cf-4e94-de12-720c-9197a5ff1a54" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.IndexExpression">
      <topicdata name="IndexExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.IndexExpression" />
      <apidata name="IndexExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.IndexExpression.Arguments" />
        <element api="P:System.Linq.Expressions.IndexExpression.Indexer" />
        <element api="P:System.Linq.Expressions.IndexExpression.NodeType" />
        <element api="P:System.Linq.Expressions.IndexExpression.Object" />
        <element api="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="P:System.Linq.Expressions.IndexExpression.Type" />
        <element api="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" />
      </containers>
      <file name="2fb1b407-3f14-20c3-be3a-335eae8243ad" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.IndexExpression">
      <topicdata name="IndexExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.IndexExpression" />
      <apidata name="IndexExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" />
      </containers>
      <file name="b9b684f7-22c7-757b-72b4-c356413e2f22" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.IndexExpression">
      <topicdata name="IndexExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.IndexExpression" />
      <apidata name="IndexExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.IndexExpression.Arguments" />
        <element api="P:System.Linq.Expressions.IndexExpression.Indexer" />
        <element api="P:System.Linq.Expressions.IndexExpression.NodeType" />
        <element api="P:System.Linq.Expressions.IndexExpression.Object" />
        <element api="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="P:System.Linq.Expressions.IndexExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" />
      </containers>
      <file name="3461f96f-c972-b588-b00b-90d019871012" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="9db1e847-7686-4dae-677f-d834a2f254c4" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.Indexer">
      <topicdata group="api" />
      <apidata name="Indexer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Indexer" />
      <returns>
        <type api="T:System.Reflection.PropertyInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="d8426b00-2981-2911-c781-164942fab801" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="e2f26516-b06e-02fa-246a-f3ef291b4ee6" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.Object">
      <topicdata group="api" />
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Object" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="331635df-1095-716b-96f2-36397eb6d7c1" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="f783b38c-cf4e-d3f2-d6cb-f5dc8e4ef17e" />
    </api>
    <api id="M:System.Linq.Expressions.IndexExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="b51f6ddf-2f4a-ba8b-969f-d039bb2dbd1a" />
    </api>
    <api id="P:System.Linq.Expressions.IndexExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="08252e6c-04b9-513b-9b5c-6de01e14c7de" />
    </api>
    <api id="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="object">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.IndexExpression" ref="true" />
      </containers>
      <file name="cea05a47-566f-6458-b510-a3a4098f6dac" />
    </api>
    <api id="T:System.Linq.Expressions.InvocationExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="375a05be-057b-f4e5-c661-7b8e0df10f0c" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.InvocationExpression">
      <topicdata name="InvocationExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Arguments" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Expression" />
        <element api="P:System.Linq.Expressions.InvocationExpression.NodeType" />
        <element api="P:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Type" />
        <element api="M:System.Linq.Expressions.InvocationExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" />
      </containers>
      <file name="12bc471d-72cc-dd6c-012d-e638a99966be" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.InvocationExpression">
      <topicdata name="InvocationExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.InvocationExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" />
      </containers>
      <file name="9463a2e6-ed7f-a102-0cca-9bf8334e4a22" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.InvocationExpression">
      <topicdata name="InvocationExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.InvocationExpression" />
      <apidata name="InvocationExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Arguments" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Expression" />
        <element api="P:System.Linq.Expressions.InvocationExpression.NodeType" />
        <element api="P:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="P:System.Linq.Expressions.InvocationExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" />
      </containers>
      <file name="c2258fe5-86a0-27e7-a8c6-3491cdf79a89" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="ec89f574-94d3-3f09-0192-6c7b55d8334f" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="a6f0b38f-43a9-3698-f128-ef79aef9b699" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="08c95542-3985-7163-47a7-e572d9f0cf7f" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="0a37a281-34d2-5b49-005b-497087cd6942" />
    </api>
    <api id="M:System.Linq.Expressions.InvocationExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="123259a4-454f-1197-fb36-1c1dc23b466a" />
    </api>
    <api id="P:System.Linq.Expressions.InvocationExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="caef2b1a-2ffb-47b1-6a30-11a92872d9af" />
    </api>
    <api id="M:System.Linq.Expressions.InvocationExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.InvocationExpression" ref="true" />
      </containers>
      <file name="f460976e-18dc-c397-c9a5-cc2616078fa8" />
    </api>
    <api id="T:System.Linq.Expressions.LabelExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.LabelExpression" />
      <apidata name="LabelExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="b7b9d7f0-eecc-d717-ad81-c52fa0a9ccae" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.LabelExpression">
      <topicdata name="LabelExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.LabelExpression" />
      <apidata name="LabelExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.LabelExpression.DefaultValue" />
        <element api="P:System.Linq.Expressions.LabelExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LabelExpression.Target" />
        <element api="P:System.Linq.Expressions.LabelExpression.Type" />
        <element api="M:System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" />
      </containers>
      <file name="149fbf57-ee65-dfbf-7035-980f4cf42e34" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.LabelExpression">
      <topicdata name="LabelExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.LabelExpression" />
      <apidata name="LabelExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" />
      </containers>
      <file name="19185463-b55f-d162-7f5f-c977e21a00a8" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.LabelExpression">
      <topicdata name="LabelExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.LabelExpression" />
      <apidata name="LabelExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.LabelExpression.DefaultValue" />
        <element api="P:System.Linq.Expressions.LabelExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LabelExpression.Target" />
        <element api="P:System.Linq.Expressions.LabelExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" />
      </containers>
      <file name="14287f65-970a-e03e-f56d-e8f0ac3d7571" />
    </api>
    <api id="P:System.Linq.Expressions.LabelExpression.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultValue" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </containers>
      <file name="0ae251d1-a10a-cb75-3b9d-d9f7358270c7" />
    </api>
    <api id="P:System.Linq.Expressions.LabelExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </containers>
      <file name="5e520937-1322-7542-9f5d-0bfedfb96717" />
    </api>
    <api id="P:System.Linq.Expressions.LabelExpression.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Target" />
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </containers>
      <file name="181766f5-e963-6731-2154-24bd28134c18" />
    </api>
    <api id="P:System.Linq.Expressions.LabelExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </containers>
      <file name="09b04230-794b-6e4b-5a7e-92a63d0717ac" />
    </api>
    <api id="M:System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelExpression" ref="true" />
      </containers>
      <file name="f8976bdb-9676-d054-7a4e-68ea2c5b2a5c" />
    </api>
    <api id="T:System.Linq.Expressions.LabelTarget">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.LabelTarget" />
      <apidata name="LabelTarget" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="e3fdbd11-c192-a565-f81a-fe754e6fabf3" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.LabelTarget">
      <topicdata name="LabelTarget" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.LabelTarget" />
      <apidata name="LabelTarget" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.LabelTarget.Name" />
        <element api="M:System.Linq.Expressions.LabelTarget.ToString" />
        <element api="P:System.Linq.Expressions.LabelTarget.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" />
      </containers>
      <file name="d7fa5040-0675-45a6-016d-4939a58bf005" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.LabelTarget">
      <topicdata name="LabelTarget" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.LabelTarget" />
      <apidata name="LabelTarget" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.LabelTarget.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" />
      </containers>
      <file name="db93abc8-a9b2-3c3f-b7a0-1a6b70948036" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.LabelTarget">
      <topicdata name="LabelTarget" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.LabelTarget" />
      <apidata name="LabelTarget" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.LabelTarget.Name" />
        <element api="P:System.Linq.Expressions.LabelTarget.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" />
      </containers>
      <file name="3deb969d-1fae-2bae-f560-64ca973f629c" />
    </api>
    <api id="P:System.Linq.Expressions.LabelTarget.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </containers>
      <file name="21cbb604-3f86-e5db-2ebc-53209f91d719" />
    </api>
    <api id="M:System.Linq.Expressions.LabelTarget.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </containers>
      <file name="5822ffa5-5095-cd1c-17cd-a391dd81012f" />
    </api>
    <api id="P:System.Linq.Expressions.LabelTarget.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </containers>
      <file name="3dfc64ea-dee4-d90b-6674-27254a4f592c" />
    </api>
    <api id="T:System.Linq.Expressions.LambdaExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.Expression`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="e18222a3-4f8d-a746-76ae-6c68cb31a441" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="M:System.Linq.Expressions.LambdaExpression.Compile" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Name" />
        <element api="P:System.Linq.Expressions.LambdaExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
        <element api="P:System.Linq.Expressions.LambdaExpression.ReturnType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.TailCall" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" />
      </containers>
      <file name="ce90d83c-94b9-9741-23ad-dea909ed4726" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.LambdaExpression.Compile" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" />
      </containers>
      <file name="eefe88e3-b92e-a76c-f159-e425c64ee1ba" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.LambdaExpression">
      <topicdata name="LambdaExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.LambdaExpression" />
      <apidata name="LambdaExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Body" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Name" />
        <element api="P:System.Linq.Expressions.LambdaExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Parameters" />
        <element api="P:System.Linq.Expressions.LambdaExpression.ReturnType" />
        <element api="P:System.Linq.Expressions.LambdaExpression.TailCall" />
        <element api="P:System.Linq.Expressions.LambdaExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" />
      </containers>
      <file name="89774d15-0f84-544a-81cb-407183bf494e" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="a28020b8-c7b9-0305-85ee-07e7e6fb6997" />
    </api>
    <api id="M:System.Linq.Expressions.LambdaExpression.Compile">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Delegate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="a73bf3b6-2338-8d6c-020e-19249b2d0e41" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="4b9dba22-dbf6-a129-3625-e0b4835c36dd" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="fbb5e24e-8fd3-ac7a-6bd0-67ff0e833580" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="abd78cca-87c3-43a6-a75b-6c340d57cfdb" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.ReturnType">
      <topicdata group="api" />
      <apidata name="ReturnType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="6d0ce30c-0223-1959-8c9c-607d06de9c15" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.TailCall">
      <topicdata group="api" />
      <apidata name="TailCall" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TailCall" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="74fdac61-4d6d-4de2-1e86-da33a4fcac0d" />
    </api>
    <api id="P:System.Linq.Expressions.LambdaExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LambdaExpression" ref="true" />
      </containers>
      <file name="294b5d76-2aca-c1bd-2a47-2e36c48fcd27" />
    </api>
    <api id="T:System.Linq.Expressions.ListInitExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="fb6b6150-d1b6-bae5-d1f9-bf5684be609f" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ListInitExpression">
      <topicdata name="ListInitExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.ListInitExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Initializers" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NewExpression" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NodeType" />
        <element api="M:System.Linq.Expressions.ListInitExpression.Reduce" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Type" />
        <element api="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" />
      </containers>
      <file name="e8da7679-adbe-05b5-8445-6ff7a44e3a7f" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ListInitExpression">
      <topicdata name="ListInitExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.ListInitExpression.Reduce" />
        <element api="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" />
      </containers>
      <file name="250e3884-e1f3-15f2-6eea-24c16a94f182" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ListInitExpression">
      <topicdata name="ListInitExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ListInitExpression" />
      <apidata name="ListInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.ListInitExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Initializers" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NewExpression" />
        <element api="P:System.Linq.Expressions.ListInitExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ListInitExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" />
      </containers>
      <file name="177446bb-1cb2-5f8b-bc33-344da3977a81" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.CanReduce">
      <topicdata group="api" />
      <apidata name="CanReduce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.CanReduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReduce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="5e13286d-4059-5785-b540-e540d0236a2a" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.Initializers">
      <topicdata group="api" />
      <apidata name="Initializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Initializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="a9758572-c19d-34da-6900-b64e5e1ee7f5" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.NewExpression">
      <topicdata group="api" />
      <apidata name="NewExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewExpression" />
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="4dbd473c-9366-52d6-8233-e517f7c46632" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="ca41665a-29cf-41cc-9e23-4b77d414a2be" />
    </api>
    <api id="M:System.Linq.Expressions.ListInitExpression.Reduce">
      <topicdata group="api" />
      <apidata name="Reduce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Reduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="5ff0676b-11e4-4b86-0e25-8263382750ed" />
    </api>
    <api id="P:System.Linq.Expressions.ListInitExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="bd98677e-422e-3235-28e5-8b7dabd61e05" />
    </api>
    <api id="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ListInitExpression" ref="true" />
      </containers>
      <file name="8429e073-58c2-430e-dcfd-290e4909e629" />
    </api>
    <api id="T:System.Linq.Expressions.LoopExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.LoopExpression" />
      <apidata name="LoopExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="258b20fe-580c-720a-b8b8-96900d82cdec" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.LoopExpression">
      <topicdata name="LoopExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.LoopExpression" />
      <apidata name="LoopExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.LoopExpression.Body" />
        <element api="P:System.Linq.Expressions.LoopExpression.BreakLabel" />
        <element api="P:System.Linq.Expressions.LoopExpression.ContinueLabel" />
        <element api="P:System.Linq.Expressions.LoopExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LoopExpression.Type" />
        <element api="M:System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" />
      </containers>
      <file name="a4fedfcc-2d01-13c5-9309-dc2345a3f5e2" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.LoopExpression">
      <topicdata name="LoopExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.LoopExpression" />
      <apidata name="LoopExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" />
      </containers>
      <file name="fb78bcdb-bc0c-8447-2c83-6fc27e7780be" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.LoopExpression">
      <topicdata name="LoopExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.LoopExpression" />
      <apidata name="LoopExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.LoopExpression.Body" />
        <element api="P:System.Linq.Expressions.LoopExpression.BreakLabel" />
        <element api="P:System.Linq.Expressions.LoopExpression.ContinueLabel" />
        <element api="P:System.Linq.Expressions.LoopExpression.NodeType" />
        <element api="P:System.Linq.Expressions.LoopExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" />
      </containers>
      <file name="c8bc38a1-ff41-b585-46a4-de54121646a8" />
    </api>
    <api id="P:System.Linq.Expressions.LoopExpression.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="ab9f45bf-5355-b251-119a-9367bc0254a4" />
    </api>
    <api id="P:System.Linq.Expressions.LoopExpression.BreakLabel">
      <topicdata group="api" />
      <apidata name="BreakLabel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BreakLabel" />
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="f0e0e447-63a1-5802-d1d2-46d798b6ede8" />
    </api>
    <api id="P:System.Linq.Expressions.LoopExpression.ContinueLabel">
      <topicdata group="api" />
      <apidata name="ContinueLabel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContinueLabel" />
      <returns>
        <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="3219c766-3979-1051-c1f3-5c159874160a" />
    </api>
    <api id="P:System.Linq.Expressions.LoopExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="d9eaf80c-d24b-6398-8f7d-effa771b1528" />
    </api>
    <api id="P:System.Linq.Expressions.LoopExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="787b79f8-64fa-475b-0634-6e53cbe6c018" />
    </api>
    <api id="M:System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="breakLabel">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="continueLabel">
          <type api="T:System.Linq.Expressions.LabelTarget" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.LoopExpression" ref="true" />
      </containers>
      <file name="30ef7429-4ccc-9c97-595e-65ae9266c368" />
    </api>
    <api id="T:System.Linq.Expressions.MemberAssignment">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="43917ac6-3c6f-21d6-cd97-ffb87ec208a6" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberAssignment">
      <topicdata name="MemberAssignment" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.MemberAssignment.Expression" />
        <element api="M:System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" />
      </containers>
      <file name="77a5dc0b-084f-121a-dcc6-58e57ef62b85" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberAssignment">
      <topicdata name="MemberAssignment" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" />
      </containers>
      <file name="af2bfe55-2d9a-9b8d-609d-fc2d561fe914" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberAssignment">
      <topicdata name="MemberAssignment" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberAssignment" />
      <apidata name="MemberAssignment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberAssignment.Expression" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" />
      </containers>
      <file name="0f4d2eaf-b593-8312-9ec0-80a37eed811f" />
    </api>
    <api id="P:System.Linq.Expressions.MemberAssignment.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </containers>
      <file name="1772715e-0e9a-4e45-f003-aa8e70f7dace" />
    </api>
    <api id="M:System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
      </containers>
      <file name="72ec5530-d336-4d7d-6da0-1adfe3df02ab" />
    </api>
    <api id="T:System.Linq.Expressions.MemberBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Linq.Expressions.MemberAssignment" ref="true" />
          <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
          <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="69009327-c484-cc4a-a485-c06c46c6b003" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" />
      </containers>
      <file name="f7aef0ec-5d2f-2794-613e-f8ba12e9c6b5" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" />
      </containers>
      <file name="f0cd6b8d-49c9-2154-dc2a-7f4e202490e0" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberBinding">
      <topicdata name="MemberBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberBinding" />
      <apidata name="MemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" />
      </containers>
      <file name="d58181c2-d531-758f-15e3-45bdf988024a" />
    </api>
    <api id="P:System.Linq.Expressions.MemberBinding.BindingType">
      <topicdata group="api" />
      <apidata name="BindingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingType" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="614b8c7b-3a39-440c-f7cb-e7d9073095a8" />
    </api>
    <api id="P:System.Linq.Expressions.MemberBinding.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="1cdc9baf-a2b2-7610-61d5-0d7c69953bee" />
    </api>
    <api id="M:System.Linq.Expressions.MemberBinding.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
      </containers>
      <file name="54c7ba3c-e475-5d67-4e1f-9f7de94ef815" />
    </api>
    <api id="T:System.Linq.Expressions.MemberBindingType">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberBindingType" />
      <apidata name="MemberBindingType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Enum" ref="true" />
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="4770d2f3-adc6-7c9d-e6e6-02a503daf049" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberBindingType">
      <topicdata name="MemberBindingType" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberBindingType" />
      <apidata name="MemberBindingType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.MemberBindingType.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="F:System.Linq.Expressions.MemberBindingType.Assignment" />
        <element api="F:System.Linq.Expressions.MemberBindingType.ListBinding" />
        <element api="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />
        <element api="F:System.Linq.Expressions.MemberBindingType.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" />
      </containers>
      <file name="605a4af6-fcb7-735e-4b5b-cfae92eb334e" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberBindingType">
      <topicdata name="MemberBindingType" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberBindingType" />
      <apidata name="MemberBindingType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Enum.CompareTo(System.Object)" />
        <element api="M:System.Enum.Equals(System.Object)" />
        <element api="M:System.Enum.GetHashCode" />
        <element api="M:System.Enum.HasFlag(System.Enum)" />
        <element api="M:System.Enum.System#IConvertible#GetTypeCode" />
        <element api="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
        <element api="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Linq.Expressions.MemberBindingType.ToString">
          <element api="M:System.Enum.ToString" />
          <element api="M:System.Enum.ToString(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" />
      </containers>
      <file name="434c4b6e-640a-b73c-7567-bfb9207474d3" />
    </api>
    <api id="Fields.T:System.Linq.Expressions.MemberBindingType">
      <topicdata name="MemberBindingType" group="list" subgroup="Fields" typeTopicId="T:System.Linq.Expressions.MemberBindingType" />
      <apidata name="MemberBindingType" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Linq.Expressions.MemberBindingType.Assignment" />
        <element api="F:System.Linq.Expressions.MemberBindingType.ListBinding" />
        <element api="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />
        <element api="F:System.Linq.Expressions.MemberBindingType.value__" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" />
      </containers>
      <file name="3a2d8d9a-bcc8-1765-691c-6076aba04ca3" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.Assignment">
      <topicdata group="api" />
      <apidata name="Assignment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </containers>
      <file name="2e245ecf-d32b-df49-9e46-9b0957a0a55f" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.ListBinding">
      <topicdata group="api" />
      <apidata name="ListBinding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </containers>
      <file name="48bd4e6c-963e-252a-1e7b-91aa3a9f0fa3" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.MemberBinding">
      <topicdata group="api" />
      <apidata name="MemberBinding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </containers>
      <file name="9bafec39-e579-d909-16ad-73ebb2acec59" />
    </api>
    <api id="F:System.Linq.Expressions.MemberBindingType.value__">
      <topicdata group="api" />
      <apidata name="value__" group="member" subgroup="field" />
      <memberdata visibility="public" special="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberBindingType" ref="true" />
      </containers>
      <file name="11b3ff74-0d5b-be4e-014a-f6fad2187f26" />
    </api>
    <api id="T:System.Linq.Expressions.MemberExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="57a06087-44e7-a885-2e56-9ca4b91957c0" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberExpression">
      <topicdata name="MemberExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.MemberExpression.Expression" />
        <element api="P:System.Linq.Expressions.MemberExpression.Member" />
        <element api="P:System.Linq.Expressions.MemberExpression.NodeType" />
        <element api="M:System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" />
      </containers>
      <file name="8333c11b-bf14-264d-7fdf-9a905e870335" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberExpression">
      <topicdata name="MemberExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" />
      </containers>
      <file name="a3e26a81-3a4e-aa04-4bbd-954a62b864ad" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberExpression">
      <topicdata name="MemberExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberExpression" />
      <apidata name="MemberExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.Expression.Type" />
        <element api="P:System.Linq.Expressions.MemberExpression.Expression" />
        <element api="P:System.Linq.Expressions.MemberExpression.Member" />
        <element api="P:System.Linq.Expressions.MemberExpression.NodeType" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" />
      </containers>
      <file name="db6e8190-06db-fa97-1844-c678ee8102dc" />
    </api>
    <api id="M:System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="0cb85f90-4639-1eae-2e0c-cc45c6b4f34f" />
    </api>
    <api id="P:System.Linq.Expressions.MemberExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="44e8ee68-9926-5911-e1c2-c92201acacb7" />
    </api>
    <api id="P:System.Linq.Expressions.MemberExpression.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="b03e4f46-15ff-ae8a-4022-e0d5e7204371" />
    </api>
    <api id="P:System.Linq.Expressions.MemberExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="3e4b98ea-2062-6e70-0ab4-f9c2a51a230b" />
    </api>
    <api id="M:System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberExpression" ref="true" />
      </containers>
      <file name="3c51a791-fbc7-28c1-aa17-c24309d430f2" />
    </api>
    <api id="T:System.Linq.Expressions.MemberInitExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="fdcf5818-b621-4541-5622-12e20ce05f2a" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberInitExpression">
      <topicdata name="MemberInitExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.Bindings" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NodeType" />
        <element api="M:System.Linq.Expressions.MemberInitExpression.Reduce" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.Type" />
        <element api="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" />
      </containers>
      <file name="c3f1eb38-468a-c3ec-2650-f0e17bfb6bdc" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberInitExpression">
      <topicdata name="MemberInitExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.MemberInitExpression.Reduce" />
        <element api="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" />
      </containers>
      <file name="fd21c8c1-5274-adce-0834-f32c57a02a0b" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberInitExpression">
      <topicdata name="MemberInitExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberInitExpression" />
      <apidata name="MemberInitExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberInitExpression.Bindings" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.NodeType" />
        <element api="P:System.Linq.Expressions.MemberInitExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" />
      </containers>
      <file name="d9ddaecc-3a79-75ac-d894-181e3e55c6a2" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindings" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="7ccf80b1-6d2f-ef1d-8102-8c2bff3b0b21" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.CanReduce">
      <topicdata group="api" />
      <apidata name="CanReduce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.CanReduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReduce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="3eb0f835-9c9b-5639-c592-044a423cfe62" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
      <topicdata group="api" />
      <apidata name="NewExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewExpression" />
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="87860154-66a3-ec43-e4e0-20e5dd809bf4" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="283183fe-673e-4d1b-71b6-7687c29c330c" />
    </api>
    <api id="M:System.Linq.Expressions.MemberInitExpression.Reduce">
      <topicdata group="api" />
      <apidata name="Reduce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Reduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="9ac5215f-1038-33fe-213b-a21dc656a844" />
    </api>
    <api id="P:System.Linq.Expressions.MemberInitExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="e30e73e5-86ba-63fc-c8fb-8919c7b90d0a" />
    </api>
    <api id="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newExpression">
          <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
        </parameter>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberInitExpression" ref="true" />
      </containers>
      <file name="fd49d451-422e-b949-6dfd-517d56810210" />
    </api>
    <api id="T:System.Linq.Expressions.MemberListBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="83f92edb-fc42-afcc-4fa2-f29d165e0fa1" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberListBinding">
      <topicdata name="MemberListBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="P:System.Linq.Expressions.MemberListBinding.Initializers" />
        <element api="M:System.Linq.Expressions.MemberListBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" />
      </containers>
      <file name="74183f78-0266-53f8-703e-5529d3199e5a" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberListBinding">
      <topicdata name="MemberListBinding" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="M:System.Linq.Expressions.MemberListBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" />
      </containers>
      <file name="656c639e-453c-31f1-31aa-c3d2cacc2c0d" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberListBinding">
      <topicdata name="MemberListBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberListBinding" />
      <apidata name="MemberListBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="P:System.Linq.Expressions.MemberListBinding.Initializers" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" />
      </containers>
      <file name="db205859-aae2-4304-5c13-c49e849c3e49" />
    </api>
    <api id="P:System.Linq.Expressions.MemberListBinding.Initializers">
      <topicdata group="api" />
      <apidata name="Initializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Initializers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </containers>
      <file name="fcf03ab6-154c-aa3a-6a1c-c3e7356d023e" />
    </api>
    <api id="M:System.Linq.Expressions.MemberListBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="initializers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ElementInit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberListBinding" ref="true" />
      </containers>
      <file name="2ba1d731-7513-d0cc-04b3-c6672b6349f9" />
    </api>
    <api id="T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="e9303b18-6150-651e-d4d7-734944052011" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata name="MemberMemberBinding" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />
        <element api="M:System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" />
      </containers>
      <file name="0a11afc1-8641-7e0a-f1b1-d273ddf97dd1" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata name="MemberMemberBinding" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.MemberBinding.ToString" />
        <element api="M:System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" />
      </containers>
      <file name="e1548f7c-cb57-e5ca-0f47-f4c2f09f5d9f" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MemberMemberBinding">
      <topicdata name="MemberMemberBinding" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MemberMemberBinding" />
      <apidata name="MemberMemberBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.MemberBinding.BindingType" />
        <element api="P:System.Linq.Expressions.MemberBinding.Member" />
        <element api="P:System.Linq.Expressions.MemberMemberBinding.Bindings" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" />
      </containers>
      <file name="7cd2fe86-0b6f-d8a1-ad53-52ff6cfa6cc8" />
    </api>
    <api id="P:System.Linq.Expressions.MemberMemberBinding.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindings" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </containers>
      <file name="801873d6-552d-8e04-40be-de141e251fa7" />
    </api>
    <api id="M:System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.MemberBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MemberMemberBinding" ref="true" />
      </containers>
      <file name="0d046d21-e9f3-5d10-688c-716c1ac79e97" />
    </api>
    <api id="T:System.Linq.Expressions.MethodCallExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="aec06997-634c-a20f-24cc-40b85185c214" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.MethodCallExpression">
      <topicdata name="MethodCallExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Arguments" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Method" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.NodeType" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Object" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Type" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" />
      </containers>
      <file name="e16403ba-3a21-884d-2116-0e9c0b72a8bb" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.MethodCallExpression">
      <topicdata name="MethodCallExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" />
      </containers>
      <file name="31fb697e-794d-7a1f-9679-d1eba09ae35c" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.MethodCallExpression">
      <topicdata name="MethodCallExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.MethodCallExpression" />
      <apidata name="MethodCallExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Arguments" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Method" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.NodeType" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Object" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="P:System.Linq.Expressions.MethodCallExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" />
      </containers>
      <file name="62d881fb-e510-536f-41ec-1a132b3f247f" />
    </api>
    <api id="M:System.Linq.Expressions.MethodCallExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="51f5a2c6-7df7-6aa6-b00e-13f6cf6af34b" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="9e4528be-b387-b2bd-7755-38ca1025dcdc" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="6f245e77-1c1f-a7f3-49e5-6fb03614ed17" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="72aae5ec-c0bf-e751-6bf9-9a3c8f4fbba3" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Object">
      <topicdata group="api" />
      <apidata name="Object" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Object" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="ce248502-736b-a11b-11da-8b13cb7a2698" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="9cc6e8db-b298-4131-e4ac-76a3009bc7e0" />
    </api>
    <api id="M:System.Linq.Expressions.MethodCallExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="d19e1c4c-54e2-0c0d-c77a-558d05d823d8" />
    </api>
    <api id="P:System.Linq.Expressions.MethodCallExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="259e5c18-f1a9-f1e8-2d7c-e0aadca1eb6e" />
    </api>
    <api id="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="object">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.MethodCallExpression" ref="true" />
      </containers>
      <file name="acaddb51-808a-779e-cc89-a66004934267" />
    </api>
    <api id="T:System.Linq.Expressions.NewArrayExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="65917dec-72f4-07ab-f23c-98c25be2ccba" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.NewArrayExpression">
      <topicdata name="NewArrayExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Expressions" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Type" />
        <element api="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" />
      </containers>
      <file name="5a724467-a4b2-c918-c4f9-265cfa2157fc" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.NewArrayExpression">
      <topicdata name="NewArrayExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" />
      </containers>
      <file name="d46485dc-5a30-87d1-7f72-9301e0777751" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.NewArrayExpression">
      <topicdata name="NewArrayExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.NewArrayExpression" />
      <apidata name="NewArrayExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.Expression.NodeType" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Expressions" />
        <element api="P:System.Linq.Expressions.NewArrayExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" />
      </containers>
      <file name="53c5b007-c4bd-4fa8-1809-3668b1b5c215" />
    </api>
    <api id="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </containers>
      <file name="ebf46b51-2068-f830-0b5a-fa139e65f310" />
    </api>
    <api id="P:System.Linq.Expressions.NewArrayExpression.Expressions">
      <topicdata group="api" />
      <apidata name="Expressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expressions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </containers>
      <file name="0e690a12-b95a-fb85-0346-f694f32d7589" />
    </api>
    <api id="P:System.Linq.Expressions.NewArrayExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </containers>
      <file name="c08bf836-fd86-fd51-2853-2fa1cfc826b0" />
    </api>
    <api id="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expressions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewArrayExpression" ref="true" />
      </containers>
      <file name="32d24c93-cacd-ca4a-3af1-932ba655bee0" />
    </api>
    <api id="T:System.Linq.Expressions.NewExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="cd01851d-70de-f4b9-fa7a-49124a34951e" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.NewExpression">
      <topicdata name="NewExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.NewExpression.Arguments" />
        <element api="P:System.Linq.Expressions.NewExpression.Constructor" />
        <element api="P:System.Linq.Expressions.NewExpression.Members" />
        <element api="P:System.Linq.Expressions.NewExpression.NodeType" />
        <element api="P:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="M:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="P:System.Linq.Expressions.NewExpression.Type" />
        <element api="M:System.Linq.Expressions.NewExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" />
      </containers>
      <file name="70a91641-c85c-b6ca-73c1-08a10824e000" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.NewExpression">
      <topicdata name="NewExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)" />
        <element api="M:System.Linq.Expressions.NewExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" />
      </containers>
      <file name="4fdb5f61-10a7-8a39-6359-646d1ff05628" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.NewExpression">
      <topicdata name="NewExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.NewExpression" />
      <apidata name="NewExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.NewExpression.Arguments" />
        <element api="P:System.Linq.Expressions.NewExpression.Constructor" />
        <element api="P:System.Linq.Expressions.NewExpression.Members" />
        <element api="P:System.Linq.Expressions.NewExpression.NodeType" />
        <element api="P:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount" />
        <element api="P:System.Linq.Expressions.NewExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" />
      </containers>
      <file name="42c7c8ad-390e-14ef-ca52-6268e2d02c8b" />
    </api>
    <api id="M:System.Linq.Expressions.NewExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="881f2dff-976b-e5d9-4f01-3c4021c2898d" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="fe11ace3-c18b-0cfa-54fa-0fc2c20fa2e1" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Constructor">
      <topicdata group="api" />
      <apidata name="Constructor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constructor" />
      <returns>
        <type api="T:System.Reflection.ConstructorInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="eb63ed47-9284-4c23-cbbc-c1ad6bb448e8" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Members">
      <topicdata group="api" />
      <apidata name="Members" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Members" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.MemberInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="f5a35c90-57ee-21e7-8ec5-81c204560745" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="5f777cd7-3bab-1257-c8a9-cf6e4c3a3019" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount">
      <topicdata group="api" eiiName="IArgumentProvider.ArgumentCount" />
      <apidata name="ArgumentCount" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="df270e63-8bf7-991d-de7c-0d4a395e788e" />
    </api>
    <api id="M:System.Linq.Expressions.NewExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)">
      <topicdata group="api" eiiName="IArgumentProvider.GetArgument" />
      <apidata name="GetArgument" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)">
          <type api="T:System.Linq.Expressions.IArgumentProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="9481e98f-c327-3052-d724-d4394311d677" />
    </api>
    <api id="P:System.Linq.Expressions.NewExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="fb75a561-7a82-9769-d71c-dfbebae7dfe8" />
    </api>
    <api id="M:System.Linq.Expressions.NewExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.NewExpression" ref="true" />
      </containers>
      <file name="59871ff0-1cd7-285f-1cb4-a4b1eb42633f" />
    </api>
    <api id="T:System.Linq.Expressions.ParameterExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="de8b30f4-e9d2-6ad6-4255-34b6fb73593e" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.ParameterExpression">
      <topicdata name="ParameterExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="P:System.Linq.Expressions.ParameterExpression.IsByRef" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Name" />
        <element api="P:System.Linq.Expressions.ParameterExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" />
      </containers>
      <file name="3893841a-4db3-07e5-9b02-6fe1011a3f83" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.ParameterExpression">
      <topicdata name="ParameterExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
        <element api="M:System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" />
      </containers>
      <file name="bbb0dfb8-4aca-2559-0e44-7bc5597d1580" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.ParameterExpression">
      <topicdata name="ParameterExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.ParameterExpression" />
      <apidata name="ParameterExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.ParameterExpression.IsByRef" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Name" />
        <element api="P:System.Linq.Expressions.ParameterExpression.NodeType" />
        <element api="P:System.Linq.Expressions.ParameterExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" />
      </containers>
      <file name="3df14bba-6491-fa2b-1041-c1e42b6e0bff" />
    </api>
    <api id="M:System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="visitor">
          <type api="T:System.Linq.Expressions.ExpressionVisitor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="fe87ee5b-45d7-22a8-771e-e242cc87cdf4" />
    </api>
    <api id="P:System.Linq.Expressions.ParameterExpression.IsByRef">
      <topicdata group="api" />
      <apidata name="IsByRef" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsByRef" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="8d18459c-73de-c396-0d50-7e7b753a580d" />
    </api>
    <api id="P:System.Linq.Expressions.ParameterExpression.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="fd6b7f56-d6eb-dcf8-cc89-752308cf7498" />
    </api>
    <api id="P:System.Linq.Expressions.ParameterExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="55348bea-185c-c2df-bfe1-e44c961dd4e7" />
    </api>
    <api id="P:System.Linq.Expressions.ParameterExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
      </containers>
      <file name="bc300da9-f693-4d7d-54dc-e29e16d496e4" />
    </api>
    <api id="T:System.Linq.Expressions.RuntimeVariablesExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.RuntimeVariablesExpression" />
      <apidata name="RuntimeVariablesExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="bafc56ef-9938-6265-21a8-a31d6505834e" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.RuntimeVariablesExpression">
      <topicdata name="RuntimeVariablesExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      <apidata name="RuntimeVariablesExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.NodeType" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.Type" />
        <element api="M:System.Linq.Expressions.RuntimeVariablesExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      </containers>
      <file name="c1a34f56-6cee-566a-53cc-4761614bb35a" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.RuntimeVariablesExpression">
      <topicdata name="RuntimeVariablesExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      <apidata name="RuntimeVariablesExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.RuntimeVariablesExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      </containers>
      <file name="cfb0e216-695d-9e0b-4c24-107a7d15bccc" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.RuntimeVariablesExpression">
      <topicdata name="RuntimeVariablesExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      <apidata name="RuntimeVariablesExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.NodeType" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.Type" />
        <element api="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" />
      </containers>
      <file name="1e618451-e66a-048f-ba43-595fea836d1c" />
    </api>
    <api id="P:System.Linq.Expressions.RuntimeVariablesExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </containers>
      <file name="b147ffbd-09a0-ac90-4a97-953092b63064" />
    </api>
    <api id="P:System.Linq.Expressions.RuntimeVariablesExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </containers>
      <file name="c683ef79-a467-e381-789d-3ef8b0989307" />
    </api>
    <api id="M:System.Linq.Expressions.RuntimeVariablesExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </containers>
      <file name="303e83ec-51a1-447c-a22c-17ca3237edca" />
    </api>
    <api id="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables">
      <topicdata group="api" />
      <apidata name="Variables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Variables" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.ParameterExpression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.RuntimeVariablesExpression" ref="true" />
      </containers>
      <file name="5a13f12d-0309-b4bc-c0e6-5ee240abb4a1" />
    </api>
    <api id="T:System.Linq.Expressions.SwitchCase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.SwitchCase" />
      <apidata name="SwitchCase" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="69dcb129-4daf-a21e-ad18-c7bad533c6d8" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.SwitchCase">
      <topicdata name="SwitchCase" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.SwitchCase" />
      <apidata name="SwitchCase" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.SwitchCase.Body" />
        <element api="P:System.Linq.Expressions.SwitchCase.TestValues" />
        <element api="M:System.Linq.Expressions.SwitchCase.ToString" />
        <element api="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" />
      </containers>
      <file name="d07ead8e-9d19-f484-9453-b1224cf70bbf" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.SwitchCase">
      <topicdata name="SwitchCase" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.SwitchCase" />
      <apidata name="SwitchCase" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.SwitchCase.ToString" />
        <element api="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" />
      </containers>
      <file name="1e368e05-0299-be3c-5110-35e4329f3d88" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.SwitchCase">
      <topicdata name="SwitchCase" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.SwitchCase" />
      <apidata name="SwitchCase" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.SwitchCase.Body" />
        <element api="P:System.Linq.Expressions.SwitchCase.TestValues" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" />
      </containers>
      <file name="205aa9ac-d7dd-2aaf-7c64-d39ce157be10" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchCase.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </containers>
      <file name="2e8d5bff-d7db-7879-f153-dba9c04c5d69" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchCase.TestValues">
      <topicdata group="api" />
      <apidata name="TestValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TestValues" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.Expression" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </containers>
      <file name="09392fb3-a523-76ed-96ed-f4b4daa32522" />
    </api>
    <api id="M:System.Linq.Expressions.SwitchCase.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </containers>
      <file name="eb05ddf5-73ed-480e-1de4-94c8f3d522cc" />
    </api>
    <api id="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="testValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.Expression" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
      </containers>
      <file name="fdd70efe-7581-5012-e9f5-9cb3b40c01d0" />
    </api>
    <api id="T:System.Linq.Expressions.SwitchExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.SwitchExpression" />
      <apidata name="SwitchExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="23fa4b3c-8602-e846-3a1f-0261dd2d05bb" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.SwitchExpression">
      <topicdata name="SwitchExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.SwitchExpression" />
      <apidata name="SwitchExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Cases" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Comparison" />
        <element api="P:System.Linq.Expressions.SwitchExpression.DefaultBody" />
        <element api="P:System.Linq.Expressions.SwitchExpression.NodeType" />
        <element api="P:System.Linq.Expressions.SwitchExpression.SwitchValue" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Type" />
        <element api="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" />
      </containers>
      <file name="a8199ea3-af1e-12ab-8089-38fb02c0fd9d" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.SwitchExpression">
      <topicdata name="SwitchExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.SwitchExpression" />
      <apidata name="SwitchExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" />
      </containers>
      <file name="eb0a6f2a-9867-2027-18ce-9883cefe7394" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.SwitchExpression">
      <topicdata name="SwitchExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.SwitchExpression" />
      <apidata name="SwitchExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Cases" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Comparison" />
        <element api="P:System.Linq.Expressions.SwitchExpression.DefaultBody" />
        <element api="P:System.Linq.Expressions.SwitchExpression.NodeType" />
        <element api="P:System.Linq.Expressions.SwitchExpression.SwitchValue" />
        <element api="P:System.Linq.Expressions.SwitchExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" />
      </containers>
      <file name="db3189b6-34d0-41e1-6462-8a88a2f2736e" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.Cases">
      <topicdata group="api" />
      <apidata name="Cases" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cases" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="46e2d828-a0ee-ed04-00ce-23c4f71c968f" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.Comparison">
      <topicdata group="api" />
      <apidata name="Comparison" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Comparison" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="1efe56e9-06f4-cf02-23d5-182900d2645c" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.DefaultBody">
      <topicdata group="api" />
      <apidata name="DefaultBody" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBody" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="abbd715f-ec24-238c-739e-1474f07153c3" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="689dd33d-feca-a330-1e42-0d348859e6c4" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.SwitchValue">
      <topicdata group="api" />
      <apidata name="SwitchValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SwitchValue" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="37fd3889-104b-0293-6adc-b7406f4130c8" />
    </api>
    <api id="P:System.Linq.Expressions.SwitchExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="6d8ea822-827e-9035-be72-7888b39e2900" />
    </api>
    <api id="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="switchValue">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="cases">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.SwitchCase" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultBody">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SwitchExpression" ref="true" />
      </containers>
      <file name="fb9d9cc2-26e8-03a9-9a15-dea52a868b67" />
    </api>
    <api id="T:System.Linq.Expressions.SymbolDocumentInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.SymbolDocumentInfo" />
      <apidata name="SymbolDocumentInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="09cb6d1a-d355-54d3-9d96-f615c9bde045" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.SymbolDocumentInfo">
      <topicdata name="SymbolDocumentInfo" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.SymbolDocumentInfo" />
      <apidata name="SymbolDocumentInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" />
      </containers>
      <file name="c5d3dcdf-8ceb-d96d-6b2e-eee508301024" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.SymbolDocumentInfo">
      <topicdata name="SymbolDocumentInfo" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.SymbolDocumentInfo" />
      <apidata name="SymbolDocumentInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" />
      </containers>
      <file name="7a1fdd6c-d836-9e1c-d376-384fd9331ed4" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.SymbolDocumentInfo">
      <topicdata name="SymbolDocumentInfo" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.SymbolDocumentInfo" />
      <apidata name="SymbolDocumentInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />
        <element api="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" />
      </containers>
      <file name="cdafb790-e391-715b-328d-b340f583f2dd" />
    </api>
    <api id="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType">
      <topicdata group="api" />
      <apidata name="DocumentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DocumentType" />
      <returns>
        <type api="T:System.Guid" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </containers>
      <file name="ac286aee-6c53-09c8-0490-934204349f3e" />
    </api>
    <api id="P:System.Linq.Expressions.SymbolDocumentInfo.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </containers>
      <file name="8be4ba34-6926-d425-7ecc-a7a1d10f1fbc" />
    </api>
    <api id="P:System.Linq.Expressions.SymbolDocumentInfo.Language">
      <topicdata group="api" />
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Language" />
      <returns>
        <type api="T:System.Guid" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </containers>
      <file name="c55a7b73-4165-2191-53f1-183d84c822c9" />
    </api>
    <api id="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor">
      <topicdata group="api" />
      <apidata name="LanguageVendor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LanguageVendor" />
      <returns>
        <type api="T:System.Guid" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.SymbolDocumentInfo" ref="true" />
      </containers>
      <file name="be06fb70-93cf-64fb-e2bd-5d328765ae0c" />
    </api>
    <api id="T:System.Linq.Expressions.TryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.TryExpression" />
      <apidata name="TryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="737f4c12-3f25-0fbe-b01f-32580419448f" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.TryExpression">
      <topicdata name="TryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.TryExpression" />
      <apidata name="TryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.TryExpression.Body" />
        <element api="P:System.Linq.Expressions.TryExpression.Fault" />
        <element api="P:System.Linq.Expressions.TryExpression.Finally" />
        <element api="P:System.Linq.Expressions.TryExpression.Handlers" />
        <element api="P:System.Linq.Expressions.TryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.TryExpression.Type" />
        <element api="M:System.Linq.Expressions.TryExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" />
      </containers>
      <file name="05f5f2c2-d037-f4c3-6145-eaab8fed8d2c" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.TryExpression">
      <topicdata name="TryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.TryExpression" />
      <apidata name="TryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.TryExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" />
      </containers>
      <file name="9f716075-78b0-e3cb-5e31-1ec700c25020" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.TryExpression">
      <topicdata name="TryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.TryExpression" />
      <apidata name="TryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.TryExpression.Body" />
        <element api="P:System.Linq.Expressions.TryExpression.Fault" />
        <element api="P:System.Linq.Expressions.TryExpression.Finally" />
        <element api="P:System.Linq.Expressions.TryExpression.Handlers" />
        <element api="P:System.Linq.Expressions.TryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.TryExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" />
      </containers>
      <file name="554f4c80-92f4-3a4a-7938-8ee75073cf6b" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.Body">
      <topicdata group="api" />
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Body" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="29dd6ce4-4b93-83e3-8c24-dbfd599b4f21" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.Fault">
      <topicdata group="api" />
      <apidata name="Fault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Fault" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="125d2e35-d1f6-55ad-747c-63f9199c5a6e" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.Finally">
      <topicdata group="api" />
      <apidata name="Finally" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Finally" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="e91b90bd-b59e-d3da-9e19-a193e3bc72ef" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.Handlers">
      <topicdata group="api" />
      <apidata name="Handlers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handlers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="a8f8d54a-cc43-96e3-49f6-40571af4adb5" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="bf141166-9fc6-497a-464b-8454a44dec48" />
    </api>
    <api id="P:System.Linq.Expressions.TryExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="5e57656b-13dc-ef08-af0d-4113971a6628" />
    </api>
    <api id="M:System.Linq.Expressions.TryExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="handlers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Linq.Expressions.CatchBlock" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finally">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
        <parameter name="fault">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TryExpression" ref="true" />
      </containers>
      <file name="81f749d4-c010-8ac1-f4f9-1e77bc185c34" />
    </api>
    <api id="T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="3857f4a3-899b-4627-545c-7b51d5d1cb25" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata name="TypeBinaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Type" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />
        <element api="M:System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" />
      </containers>
      <file name="b2aa541b-6c64-aeeb-171d-f803223b5f9f" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata name="TypeBinaryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.Reduce" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" />
      </containers>
      <file name="07e6d877-ce5b-526f-ae1a-1969c7f71e28" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.TypeBinaryExpression">
      <topicdata name="TypeBinaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.TypeBinaryExpression" />
      <apidata name="TypeBinaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.Expression.CanReduce" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.Type" />
        <element api="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" />
      </containers>
      <file name="19fee4c7-ace0-910f-f989-5e202729c91e" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expression" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="d2e46040-327b-aeb4-4d0b-988cc93de123" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="f6a1ead3-5a11-b86b-62eb-74306d0402c6" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="2aa0e623-e292-b53d-33da-8428b9b1c036" />
    </api>
    <api id="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand">
      <topicdata group="api" />
      <apidata name="TypeOperand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeOperand" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="adc46f3a-9251-f1a8-3d3a-94c1634a0683" />
    </api>
    <api id="M:System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.TypeBinaryExpression" ref="true" />
      </containers>
      <file name="62474af9-7911-9dbf-9f8b-6d2cd7a3cb60" />
    </api>
    <api id="T:System.Linq.Expressions.UnaryExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
      </containers>
      <file name="ee799724-26e7-1f1f-4a1b-62bc56257471" />
    </api>
    <api id="AllMembers.T:System.Linq.Expressions.UnaryExpression">
      <topicdata name="UnaryExpression" group="list" subgroup="members" typeTopicId="T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="P:System.Linq.Expressions.UnaryExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Method" />
        <element api="P:System.Linq.Expressions.UnaryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Operand" />
        <element api="M:System.Linq.Expressions.UnaryExpression.Reduce" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Type" />
        <element api="M:System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" />
      </containers>
      <file name="07ab67e8-00d3-ec28-8d41-b6305101b7de" />
    </api>
    <api id="Methods.T:System.Linq.Expressions.UnaryExpression">
      <topicdata name="UnaryExpression" group="list" subgroup="Methods" typeTopicId="T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
        <element api="M:System.Linq.Expressions.Expression.ReduceExtensions" />
        <element api="M:System.Linq.Expressions.Expression.ToString" />
        <element api="M:System.Linq.Expressions.UnaryExpression.Reduce" />
        <element api="M:System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" />
      </containers>
      <file name="05560cd1-5a4d-4739-49ec-065c31f8e036" />
    </api>
    <api id="Properties.T:System.Linq.Expressions.UnaryExpression">
      <topicdata name="UnaryExpression" group="list" subgroup="Properties" typeTopicId="T:System.Linq.Expressions.UnaryExpression" />
      <apidata name="UnaryExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Linq.Expressions.UnaryExpression.CanReduce" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLifted" />
        <element api="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Method" />
        <element api="P:System.Linq.Expressions.UnaryExpression.NodeType" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Operand" />
        <element api="P:System.Linq.Expressions.UnaryExpression.Type" />
      </elements>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" />
      </containers>
      <file name="86673257-96b4-66f7-b60c-ff44967e24d0" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.CanReduce">
      <topicdata group="api" />
      <apidata name="CanReduce" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.CanReduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReduce" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="0e2af7ae-6032-9308-9f9a-1f2bf4ecd2f5" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.IsLifted">
      <topicdata group="api" />
      <apidata name="IsLifted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLifted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="46c41108-a34b-d5b8-e1ad-d650bae40d0e" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.IsLiftedToNull">
      <topicdata group="api" />
      <apidata name="IsLiftedToNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLiftedToNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="cae86002-ac67-3579-31ee-6643f69b7851" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="ca9e1cfb-3ae3-cc99-5b3b-fda64fa03188" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.NodeType">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Linq.Expressions.ExpressionType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="89881892-2fc7-363b-c823-38cefa46d371" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Operand" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="cfd5e386-76f2-0bb7-3056-92e96acb10bd" />
    </api>
    <api id="M:System.Linq.Expressions.UnaryExpression.Reduce">
      <topicdata group="api" />
      <apidata name="Reduce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Linq.Expressions.Expression.Reduce">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="e22d8a25-d83f-4260-d5d6-16244ceb0aae" />
    </api>
    <api id="P:System.Linq.Expressions.UnaryExpression.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Linq.Expressions.Expression.Type">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="1ee656f5-0c78-8db2-13d7-421e990f429d" />
    </api>
    <api id="M:System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operand">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Linq.Expressions" module="System.Linq.Expressions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.23123.00 built by: PROJECTKREL" />
        </library>
        <namespace api="N:System.Linq.Expressions" />
        <type api="T:System.Linq.Expressions.UnaryExpression" ref="true" />
      </containers>
      <file name="786221c0-c728-0b9a-5bf4-1a2088ec3b71" />
    </api>
  </apis>
</reflection>