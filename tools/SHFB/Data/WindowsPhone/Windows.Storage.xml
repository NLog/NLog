<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Windows">
      <assemblydata version="255.255.255.255" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.PlatformAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.Platform" ref="false" />
            <enumValue>
              <field name="WindowsPhone" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Windows.Storage">
      <topicdata group="api" />
      <apidata name="Windows.Storage" group="namespace" />
      <elements>
        <element api="T:Windows.Storage.StorageFolder" />
        <element api="T:Windows.Storage.KnownFolders" />
        <element api="T:Windows.Storage.CreationCollisionOption" />
        <element api="T:Windows.Storage.StorageFile" />
        <element api="T:Windows.Storage.NameCollisionOption" />
        <element api="T:Windows.Storage.StorageDeleteOption" />
        <element api="T:Windows.Storage.StorageItemTypes" />
        <element api="T:Windows.Storage.FileAttributes" />
        <element api="T:Windows.Storage.FileAccessMode" />
        <element api="T:Windows.Storage.StreamedFileFailureMode" />
        <element api="T:Windows.Storage.IStreamedFileDataRequest" />
        <element api="T:Windows.Storage.StreamedFileDataRequest" />
        <element api="T:Windows.Storage.StreamedFileDataRequestedHandler" />
        <element api="T:Windows.Storage.StorageStreamTransaction" />
        <element api="T:Windows.Storage.IStorageItem" />
        <element api="T:Windows.Storage.IStorageFolder" />
        <element api="T:Windows.Storage.IStorageFile" />
        <element api="T:Windows.Storage.IStorageItemProperties" />
        <element api="T:Windows.Storage.IStorageItemProperties2" />
        <element api="T:Windows.Storage.FileIO" />
        <element api="T:Windows.Storage.PathIO" />
        <element api="T:Windows.Storage.CachedFileManager" />
        <element api="T:Windows.Storage.SystemAudioProperties" />
        <element api="T:Windows.Storage.SystemGPSProperties" />
        <element api="T:Windows.Storage.SystemImageProperties" />
        <element api="T:Windows.Storage.SystemMediaProperties" />
        <element api="T:Windows.Storage.SystemMusicProperties" />
        <element api="T:Windows.Storage.SystemPhotoProperties" />
        <element api="T:Windows.Storage.SystemVideoProperties" />
        <element api="T:Windows.Storage.SystemProperties" />
        <element api="T:Windows.Storage.ApplicationDataLocality" />
        <element api="T:Windows.Storage.ApplicationDataCreateDisposition" />
        <element api="T:Windows.Storage.ApplicationData" />
        <element api="T:Windows.Storage.ApplicationDataSetVersionHandler" />
        <element api="T:Windows.Storage.SetVersionRequest" />
        <element api="T:Windows.Storage.ApplicationDataContainer" />
        <element api="T:Windows.Storage.SetVersionDeferral" />
        <element api="T:Windows.Storage.ApplicationDataContainerSettings" />
        <element api="T:Windows.Storage.ApplicationDataCompositeValue" />
      </elements>
      <file name="d2b3d134-87df-abb2-cada-10e1523435c7" />
    </api>
    <api id="T:Windows.Storage.ApplicationData">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.ApplicationData" />
      <apidata name="ApplicationData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.IApplicationData" ref="true" />
        <type api="T:Windows.Storage.IApplicationData2" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.ThreadingAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.ThreadingModel" ref="false" />
            <enumValue>
              <field name="MTA" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="182fb2b8-6925-c01a-cd37-ba791ab5553d" />
    </api>
    <api id="AllMembers.T:Windows.Storage.ApplicationData">
      <topicdata name="ApplicationData" group="list" subgroup="members" typeTopicId="T:Windows.Storage.ApplicationData" />
      <apidata name="ApplicationData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:Windows.Storage.ApplicationData.ClearAsync">
          <element api="M:Windows.Storage.ApplicationData.ClearAsync" />
          <element api="M:Windows.Storage.ApplicationData.ClearAsync(Windows.Storage.ApplicationDataLocality)" />
        </element>
        <element api="P:Windows.Storage.ApplicationData.Current" />
        <element api="E:Windows.Storage.ApplicationData.DataChanged" />
        <element api="P:Windows.Storage.ApplicationData.LocalCacheFolder" />
        <element api="P:Windows.Storage.ApplicationData.LocalFolder" />
        <element api="P:Windows.Storage.ApplicationData.LocalSettings" />
        <element api="P:Windows.Storage.ApplicationData.RoamingFolder" />
        <element api="P:Windows.Storage.ApplicationData.RoamingSettings" />
        <element api="P:Windows.Storage.ApplicationData.RoamingStorageQuota" />
        <element api="M:Windows.Storage.ApplicationData.SetVersionAsync(System.UInt32,Windows.Storage.ApplicationDataSetVersionHandler)" />
        <element api="M:Windows.Storage.ApplicationData.SignalDataChanged" />
        <element api="P:Windows.Storage.ApplicationData.TemporaryFolder" />
        <element api="P:Windows.Storage.ApplicationData.Version" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" />
      </containers>
      <file name="1ce872f2-29cc-b373-6900-4d3b68331be3" />
    </api>
    <api id="Methods.T:Windows.Storage.ApplicationData">
      <topicdata name="ApplicationData" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.ApplicationData" />
      <apidata name="ApplicationData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:Windows.Storage.ApplicationData.ClearAsync">
          <element api="M:Windows.Storage.ApplicationData.ClearAsync" />
          <element api="M:Windows.Storage.ApplicationData.ClearAsync(Windows.Storage.ApplicationDataLocality)" />
        </element>
        <element api="M:Windows.Storage.ApplicationData.SetVersionAsync(System.UInt32,Windows.Storage.ApplicationDataSetVersionHandler)" />
        <element api="M:Windows.Storage.ApplicationData.SignalDataChanged" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" />
      </containers>
      <file name="dc67c2a7-ec79-cd0b-a923-64a799deab9e" />
    </api>
    <api id="Properties.T:Windows.Storage.ApplicationData">
      <topicdata name="ApplicationData" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.ApplicationData" />
      <apidata name="ApplicationData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.ApplicationData.Current" />
        <element api="P:Windows.Storage.ApplicationData.LocalCacheFolder" />
        <element api="P:Windows.Storage.ApplicationData.LocalFolder" />
        <element api="P:Windows.Storage.ApplicationData.LocalSettings" />
        <element api="P:Windows.Storage.ApplicationData.RoamingFolder" />
        <element api="P:Windows.Storage.ApplicationData.RoamingSettings" />
        <element api="P:Windows.Storage.ApplicationData.RoamingStorageQuota" />
        <element api="P:Windows.Storage.ApplicationData.TemporaryFolder" />
        <element api="P:Windows.Storage.ApplicationData.Version" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" />
      </containers>
      <file name="bad6963f-47a9-eff2-7f66-a34242f9cff3" />
    </api>
    <api id="Events.T:Windows.Storage.ApplicationData">
      <topicdata name="ApplicationData" group="list" subgroup="Events" typeTopicId="T:Windows.Storage.ApplicationData" />
      <apidata name="ApplicationData" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:Windows.Storage.ApplicationData.DataChanged" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" />
      </containers>
      <file name="56e8dbc5-cef9-210f-9764-c6e83f60db3d" />
    </api>
    <api id="Overload:Windows.Storage.ApplicationData.ClearAsync">
      <topicdata name="ClearAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.ApplicationData" />
      <apidata name="ClearAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.ApplicationData.ClearAsync" />
        <element api="M:Windows.Storage.ApplicationData.ClearAsync(Windows.Storage.ApplicationDataLocality)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="9309f827-bd09-5f5c-4987-b8a9205b389b" />
    </api>
    <api id="M:Windows.Storage.ApplicationData.ClearAsync">
      <topicdata group="api" />
      <apidata name="ClearAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.ApplicationData.ClearAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClearAllAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c23884eb-ac09-9e68-5f14-4bd1d1380e28" />
    </api>
    <api id="M:Windows.Storage.ApplicationData.ClearAsync(Windows.Storage.ApplicationDataLocality)">
      <topicdata group="api" />
      <apidata name="ClearAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.ApplicationData.ClearAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="locality" in="true">
          <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ClearAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2cb452e8-0448-30ee-032e-f9b3d14f6107" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="891e782a-5c82-776e-b5b7-95d6abacda8d" />
    </api>
    <api id="E:Windows.Storage.ApplicationData.DataChanged">
      <topicdata group="api" />
      <apidata name="DataChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_DataChanged" />
      <remover name="remove_DataChanged" />
      <eventhandler>
        <type api="T:Windows.Foundation.TypedEventHandler`2" ref="true">
          <specialization>
            <type api="T:Windows.Storage.ApplicationData" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="477fdc00-b7dc-f3fc-7604-e2fefc086351" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.LocalCacheFolder">
      <topicdata group="api" />
      <apidata name="LocalCacheFolder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LocalCacheFolder" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="e670f586-1f7b-805e-1db6-5f9cab69f319" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.LocalFolder">
      <topicdata group="api" />
      <apidata name="LocalFolder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LocalFolder" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="abf342b0-356d-117c-2b47-c882235cb969" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.LocalSettings">
      <topicdata group="api" />
      <apidata name="LocalSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LocalSettings" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="5d42a4b9-c245-23f8-4b9f-10da466d039f" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.RoamingFolder">
      <topicdata group="api" />
      <apidata name="RoamingFolder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RoamingFolder" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="317b85f1-c0b8-926e-3ef7-57385705da6e" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.RoamingSettings">
      <topicdata group="api" />
      <apidata name="RoamingSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RoamingSettings" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="5ae72926-ed2a-7f9f-dff4-78b3d9613097" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.RoamingStorageQuota">
      <topicdata group="api" />
      <apidata name="RoamingStorageQuota" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RoamingStorageQuota" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="32a54e87-0a7e-7e4d-8e4a-b0de03c42e3c" />
    </api>
    <api id="M:Windows.Storage.ApplicationData.SetVersionAsync(System.UInt32,Windows.Storage.ApplicationDataSetVersionHandler)">
      <topicdata group="api" />
      <apidata name="SetVersionAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredVersion" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="handler" in="true">
          <type api="T:Windows.Storage.ApplicationDataSetVersionHandler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="ee202a6b-54fb-5d4b-604e-cb0f1489ea56" />
    </api>
    <api id="M:Windows.Storage.ApplicationData.SignalDataChanged">
      <topicdata group="api" />
      <apidata name="SignalDataChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="5820da3f-a634-4d08-c888-cd5f98fec2d3" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.TemporaryFolder">
      <topicdata group="api" />
      <apidata name="TemporaryFolder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TemporaryFolder" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="6d42cfcd-1c77-bb94-afb7-d3e276d3ef46" />
    </api>
    <api id="P:Windows.Storage.ApplicationData.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationData" ref="true" />
      </containers>
      <file name="55cb0910-a2db-24bb-9bde-2e1f76ea601f" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataCompositeValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.ApplicationDataCompositeValue" />
      <apidata name="ApplicationDataCompositeValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Foundation.Collections.IPropertySet" ref="true" />
        <type api="T:Windows.Foundation.Collections.IObservableMap`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.ActivatableAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.ThreadingAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.ThreadingModel" ref="false" />
            <enumValue>
              <field name="MTA" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a11a8953-d881-74c8-d3b6-3c10ce9001f0" />
    </api>
    <api id="AllMembers.T:Windows.Storage.ApplicationDataCompositeValue">
      <topicdata name="ApplicationDataCompositeValue" group="list" subgroup="members" typeTopicId="T:Windows.Storage.ApplicationDataCompositeValue" />
      <apidata name="ApplicationDataCompositeValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Clear" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.First" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.GetView" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.HasKey(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Insert(System.String,System.Object)" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Lookup(System.String)" />
        <element api="E:Windows.Storage.ApplicationDataCompositeValue.MapChanged" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Remove(System.String)" />
        <element api="P:Windows.Storage.ApplicationDataCompositeValue.Size" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" />
      </containers>
      <file name="51f7796b-ec76-f311-127e-0caeec4cac63" />
    </api>
    <api id="Methods.T:Windows.Storage.ApplicationDataCompositeValue">
      <topicdata name="ApplicationDataCompositeValue" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.ApplicationDataCompositeValue" />
      <apidata name="ApplicationDataCompositeValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Clear" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.First" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.GetView" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.HasKey(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Insert(System.String,System.Object)" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Lookup(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataCompositeValue.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" />
      </containers>
      <file name="332ab351-930e-8ff7-49dd-a9346dc85be9" />
    </api>
    <api id="Properties.T:Windows.Storage.ApplicationDataCompositeValue">
      <topicdata name="ApplicationDataCompositeValue" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.ApplicationDataCompositeValue" />
      <apidata name="ApplicationDataCompositeValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
      <elements>
        <element api="P:Windows.Storage.ApplicationDataCompositeValue.Size" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" />
      </containers>
      <file name="183d98a0-8270-5fbf-b0bc-29010d644ab2" />
    </api>
    <api id="Events.T:Windows.Storage.ApplicationDataCompositeValue">
      <topicdata name="ApplicationDataCompositeValue" group="list" subgroup="Events" typeTopicId="T:Windows.Storage.ApplicationDataCompositeValue" />
      <apidata name="ApplicationDataCompositeValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:Windows.Storage.ApplicationDataCompositeValue.#ctor" />
      <elements>
        <element api="E:Windows.Storage.ApplicationDataCompositeValue.MapChanged" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" />
      </containers>
      <file name="703ee3f8-7195-45e6-4149-9847ddc9cae0" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="eae6dfa6-4f79-13cd-1842-5769f70d3d6f" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Clear">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="7d2a509c-4769-e65d-a736-8a0758700816" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.First">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.Collections.IIterator`1" ref="true">
          <specialization>
            <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IIterable`1.First">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="228ddd34-af23-77a5-abe0-0477bf54406e" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.GetView">
      <topicdata group="api" />
      <apidata name="GetView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.GetView">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="819ac2b4-78ed-a528-505c-1fe5836da468" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.HasKey(System.String)">
      <topicdata group="api" />
      <apidata name="HasKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.HasKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="5b9a912e-8b82-64e2-c6c3-f44ea3d535df" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.Insert(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" in="true">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Insert(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="c5a58d69-4f79-203d-012d-f8863e205c05" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.Lookup(System.String)">
      <topicdata group="api" />
      <apidata name="Lookup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Lookup(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="0c349dc7-57ff-70e0-5ef8-c18f5a27171a" />
    </api>
    <api id="E:Windows.Storage.ApplicationDataCompositeValue.MapChanged">
      <topicdata group="api" />
      <apidata name="MapChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_MapChanged" />
      <remover name="remove_MapChanged" />
      <eventhandler>
        <type api="T:Windows.Foundation.Collections.MapChangedEventHandler`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <implements>
        <member api="E:Windows.Foundation.Collections.IObservableMap`2.MapChanged">
          <type api="T:Windows.Foundation.Collections.IObservableMap`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="7646f389-be51-521a-4572-0404bc7a9c1c" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataCompositeValue.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="a23d5bb6-024c-14da-d132-05d8d3ed75ef" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataCompositeValue.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Foundation.Collections.IMap`2.Size">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCompositeValue" ref="true" />
      </containers>
      <file name="3763f1ac-0e05-7716-191e-6e26f8afadc1" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataContainer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.ApplicationDataContainer" />
      <apidata name="ApplicationDataContainer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.IApplicationDataContainer" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="95012e1d-b2f0-5219-68da-fa3641964369" />
    </api>
    <api id="AllMembers.T:Windows.Storage.ApplicationDataContainer">
      <topicdata name="ApplicationDataContainer" group="list" subgroup="members" typeTopicId="T:Windows.Storage.ApplicationDataContainer" />
      <apidata name="ApplicationDataContainer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Containers" />
        <element api="M:Windows.Storage.ApplicationDataContainer.CreateContainer(System.String,Windows.Storage.ApplicationDataCreateDisposition)" />
        <element api="M:Windows.Storage.ApplicationDataContainer.DeleteContainer(System.String)" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Locality" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Name" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Values" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" />
      </containers>
      <file name="3013907c-3e16-1430-c996-c2b7a4439809" />
    </api>
    <api id="Methods.T:Windows.Storage.ApplicationDataContainer">
      <topicdata name="ApplicationDataContainer" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.ApplicationDataContainer" />
      <apidata name="ApplicationDataContainer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.ApplicationDataContainer.CreateContainer(System.String,Windows.Storage.ApplicationDataCreateDisposition)" />
        <element api="M:Windows.Storage.ApplicationDataContainer.DeleteContainer(System.String)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" />
      </containers>
      <file name="cfefd65e-1cab-a600-64a4-3c54c000fd02" />
    </api>
    <api id="Properties.T:Windows.Storage.ApplicationDataContainer">
      <topicdata name="ApplicationDataContainer" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.ApplicationDataContainer" />
      <apidata name="ApplicationDataContainer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.ApplicationDataContainer.Containers" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Locality" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Name" />
        <element api="P:Windows.Storage.ApplicationDataContainer.Values" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" />
      </containers>
      <file name="3491af13-c87c-0d75-d276-54c0f4c306db" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataContainer.Containers">
      <topicdata group="api" />
      <apidata name="Containers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Containers" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="6e6a4441-31b5-c3f1-4ee2-0f43c3663120" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainer.CreateContainer(System.String,Windows.Storage.ApplicationDataCreateDisposition)">
      <topicdata group="api" />
      <apidata name="CreateContainer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="disposition" in="true">
          <type api="T:Windows.Storage.ApplicationDataCreateDisposition" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="c935b107-d18a-7186-f87c-9957ec631db4" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainer.DeleteContainer(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteContainer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="30f4a93b-09a6-a6d1-c5a8-56fa06cf5d9f" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataContainer.Locality">
      <topicdata group="api" />
      <apidata name="Locality" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Locality" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="3346367c-9f62-77f5-090d-04f9ed16b540" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataContainer.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="4b2fe175-89ce-9b8e-be70-957dba72c217" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataContainer.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:Windows.Foundation.Collections.IPropertySet" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainer" ref="true" />
      </containers>
      <file name="5594325b-8c22-d927-90b5-c716079a2902" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataContainerSettings">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.ApplicationDataContainerSettings" />
      <apidata name="ApplicationDataContainerSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Foundation.Collections.IPropertySet" ref="true" />
        <type api="T:Windows.Foundation.Collections.IObservableMap`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="613540f8-8a6f-d486-8516-e1a4d895d107" />
    </api>
    <api id="AllMembers.T:Windows.Storage.ApplicationDataContainerSettings">
      <topicdata name="ApplicationDataContainerSettings" group="list" subgroup="members" typeTopicId="T:Windows.Storage.ApplicationDataContainerSettings" />
      <apidata name="ApplicationDataContainerSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Clear" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.First" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.GetView" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.HasKey(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Insert(System.String,System.Object)" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Lookup(System.String)" />
        <element api="E:Windows.Storage.ApplicationDataContainerSettings.MapChanged" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Remove(System.String)" />
        <element api="P:Windows.Storage.ApplicationDataContainerSettings.Size" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" />
      </containers>
      <file name="9037ccd0-0543-5158-5b81-05f6a6a8738d" />
    </api>
    <api id="Methods.T:Windows.Storage.ApplicationDataContainerSettings">
      <topicdata name="ApplicationDataContainerSettings" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.ApplicationDataContainerSettings" />
      <apidata name="ApplicationDataContainerSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Clear" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.First" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.GetView" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.HasKey(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Insert(System.String,System.Object)" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Lookup(System.String)" />
        <element api="M:Windows.Storage.ApplicationDataContainerSettings.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" />
      </containers>
      <file name="0a165032-c8cd-0276-f22f-05d3b6a810cc" />
    </api>
    <api id="Properties.T:Windows.Storage.ApplicationDataContainerSettings">
      <topicdata name="ApplicationDataContainerSettings" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.ApplicationDataContainerSettings" />
      <apidata name="ApplicationDataContainerSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.ApplicationDataContainerSettings.Size" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" />
      </containers>
      <file name="decd0ad0-b034-441b-9ad8-3a695303d40f" />
    </api>
    <api id="Events.T:Windows.Storage.ApplicationDataContainerSettings">
      <topicdata name="ApplicationDataContainerSettings" group="list" subgroup="Events" typeTopicId="T:Windows.Storage.ApplicationDataContainerSettings" />
      <apidata name="ApplicationDataContainerSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:Windows.Storage.ApplicationDataContainerSettings.MapChanged" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" />
      </containers>
      <file name="47147eba-2e4e-d58c-7222-ea8eed1cc88f" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Clear">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="750cb089-fb2c-d1ee-a34b-2a119d1093bb" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.First">
      <topicdata group="api" />
      <apidata name="First" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.Collections.IIterator`1" ref="true">
          <specialization>
            <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IIterable`1.First">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Windows.Foundation.Collections.IKeyValuePair`2" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="4a7d837d-5684-26f3-9cae-66fa3639132f" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.GetView">
      <topicdata group="api" />
      <apidata name="GetView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.GetView">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="7ae34d06-41d4-686e-15e1-dc3e0be78712" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.HasKey(System.String)">
      <topicdata group="api" />
      <apidata name="HasKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.HasKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="5accc367-a0e0-0bf7-9517-0f44aa85988e" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.Insert(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" in="true">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Insert(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="3410353a-95c4-a3ec-907a-59f525602096" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.Lookup(System.String)">
      <topicdata group="api" />
      <apidata name="Lookup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Lookup(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="b1f98a04-eec4-76d5-98c8-120201e8ab33" />
    </api>
    <api id="E:Windows.Storage.ApplicationDataContainerSettings.MapChanged">
      <topicdata group="api" />
      <apidata name="MapChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_MapChanged" />
      <remover name="remove_MapChanged" />
      <eventhandler>
        <type api="T:Windows.Foundation.Collections.MapChangedEventHandler`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <implements>
        <member api="E:Windows.Foundation.Collections.IObservableMap`2.MapChanged">
          <type api="T:Windows.Foundation.Collections.IObservableMap`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="e44a1810-4478-7402-6363-a92ffa84c848" />
    </api>
    <api id="M:Windows.Storage.ApplicationDataContainerSettings.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.Foundation.Collections.IMap`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="7e0b6b01-bd8b-43d6-6301-4cd29715ed0b" />
    </api>
    <api id="P:Windows.Storage.ApplicationDataContainerSettings.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Foundation.Collections.IMap`2.Size">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataContainerSettings" ref="true" />
      </containers>
      <file name="b4f97b75-1d0b-4ea3-e909-310b9b83f310" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataCreateDisposition">
      <topicdata group="api" />
      <apidata name="ApplicationDataCreateDisposition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.ApplicationDataCreateDisposition.Always" />
        <element api="F:Windows.Storage.ApplicationDataCreateDisposition.Existing" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="11a4de90-d889-b0c7-fd64-0e05783820fc" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataCreateDisposition.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataCreateDisposition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCreateDisposition" ref="false" />
      </containers>
      <file name="c5dfe2e4-4572-26f4-c4ef-e4fb51697c48" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataCreateDisposition.Existing">
      <topicdata group="api" notopic="" />
      <apidata name="Existing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataCreateDisposition" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataCreateDisposition" ref="false" />
      </containers>
      <file name="3243147c-ac8d-4c1d-b4fc-c30348a979b1" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataLocality">
      <topicdata group="api" />
      <apidata name="ApplicationDataLocality" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.ApplicationDataLocality.Local" />
        <element api="F:Windows.Storage.ApplicationDataLocality.Roaming" />
        <element api="F:Windows.Storage.ApplicationDataLocality.Temporary" />
        <element api="F:Windows.Storage.ApplicationDataLocality.LocalCache" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ac7e6493-4002-7c57-81ea-d2da7899bb01" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataLocality.Local">
      <topicdata group="api" notopic="" />
      <apidata name="Local" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </containers>
      <file name="ab6d354f-c096-5725-9019-2a25978da8ec" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataLocality.LocalCache">
      <topicdata group="api" notopic="" />
      <apidata name="LocalCache" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </containers>
      <file name="8f8fdc4d-2bc7-0688-307b-06dc4c24d28b" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataLocality.Roaming">
      <topicdata group="api" notopic="" />
      <apidata name="Roaming" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </containers>
      <file name="55bf8814-b89d-3444-95a3-8ae8bd78fcd7" />
    </api>
    <api id="F:Windows.Storage.ApplicationDataLocality.Temporary">
      <topicdata group="api" notopic="" />
      <apidata name="Temporary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.ApplicationDataLocality" ref="false" />
      </containers>
      <file name="d8def116-f786-9742-4606-cd26bc9f6fb9" />
    </api>
    <api id="T:Windows.Storage.ApplicationDataSetVersionHandler">
      <topicdata group="api" />
      <apidata name="ApplicationDataSetVersionHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="setVersionRequest" in="true">
          <type api="T:Windows.Storage.SetVersionRequest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>2690093542</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>52383</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>18055</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>172</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>171</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>163</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>100</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>253</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>120</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>84</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>99</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fe8c961c-a278-62ab-6218-0b72e590d2ee" />
    </api>
    <api id="T:Windows.Storage.CachedFileManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.CachedFileManager" />
      <apidata name="CachedFileManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="54cda7e1-3a64-ec9f-8fe7-9e9a5541e994" />
    </api>
    <api id="AllMembers.T:Windows.Storage.CachedFileManager">
      <topicdata name="CachedFileManager" group="list" subgroup="members" typeTopicId="T:Windows.Storage.CachedFileManager" />
      <apidata name="CachedFileManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Windows.Storage.CachedFileManager.CompleteUpdatesAsync(Windows.Storage.IStorageFile)" />
        <element api="M:Windows.Storage.CachedFileManager.DeferUpdates(Windows.Storage.IStorageFile)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CachedFileManager" />
      </containers>
      <file name="4c057220-e55a-39ef-d68e-5e4759ae77d9" />
    </api>
    <api id="Methods.T:Windows.Storage.CachedFileManager">
      <topicdata name="CachedFileManager" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.CachedFileManager" />
      <apidata name="CachedFileManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Windows.Storage.CachedFileManager.CompleteUpdatesAsync(Windows.Storage.IStorageFile)" />
        <element api="M:Windows.Storage.CachedFileManager.DeferUpdates(Windows.Storage.IStorageFile)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CachedFileManager" />
      </containers>
      <file name="1223837a-50cb-a8b0-8a6a-ad2e3e704c13" />
    </api>
    <api id="M:Windows.Storage.CachedFileManager.CompleteUpdatesAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="CompleteUpdatesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Provider.FileUpdateStatus" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CachedFileManager" ref="true" />
      </containers>
      <file name="b15b36e4-1c50-3195-29da-769b5c2d48e6" />
    </api>
    <api id="M:Windows.Storage.CachedFileManager.DeferUpdates(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="DeferUpdates" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CachedFileManager" ref="true" />
      </containers>
      <file name="cbef7018-f584-2c54-39f0-12e4460a2545" />
    </api>
    <api id="T:Windows.Storage.CreationCollisionOption">
      <topicdata group="api" />
      <apidata name="CreationCollisionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.CreationCollisionOption.GenerateUniqueName" />
        <element api="F:Windows.Storage.CreationCollisionOption.ReplaceExisting" />
        <element api="F:Windows.Storage.CreationCollisionOption.FailIfExists" />
        <element api="F:Windows.Storage.CreationCollisionOption.OpenIfExists" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f701774c-3e43-e7e4-7404-93e48b712871" />
    </api>
    <api id="F:Windows.Storage.CreationCollisionOption.FailIfExists">
      <topicdata group="api" notopic="" />
      <apidata name="FailIfExists" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </containers>
      <file name="7f52e636-1976-4be8-685a-7fd405b9176b" />
    </api>
    <api id="F:Windows.Storage.CreationCollisionOption.GenerateUniqueName">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateUniqueName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </containers>
      <file name="f8a10ed4-41a9-fdc9-ab96-f2e6d81ea6de" />
    </api>
    <api id="F:Windows.Storage.CreationCollisionOption.OpenIfExists">
      <topicdata group="api" notopic="" />
      <apidata name="OpenIfExists" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </containers>
      <file name="25e33199-b590-503d-13e9-8c8c8aad51bf" />
    </api>
    <api id="F:Windows.Storage.CreationCollisionOption.ReplaceExisting">
      <topicdata group="api" notopic="" />
      <apidata name="ReplaceExisting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
      </containers>
      <file name="5d370a3a-73cb-2824-188d-1d343b9b53e5" />
    </api>
    <api id="T:Windows.Storage.FileAccessMode">
      <topicdata group="api" />
      <apidata name="FileAccessMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.FileAccessMode.Read" />
        <element api="F:Windows.Storage.FileAccessMode.ReadWrite" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2da780e3-8ca9-aaa9-1191-b5bed1fc741d" />
    </api>
    <api id="F:Windows.Storage.FileAccessMode.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAccessMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAccessMode" ref="false" />
      </containers>
      <file name="d2a9c556-ac6f-4d23-e56a-35a772e42043" />
    </api>
    <api id="F:Windows.Storage.FileAccessMode.ReadWrite">
      <topicdata group="api" notopic="" />
      <apidata name="ReadWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAccessMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAccessMode" ref="false" />
      </containers>
      <file name="ec2a2d1a-753d-96b3-9a56-d210444f8132" />
    </api>
    <api id="T:Windows.Storage.FileAttributes">
      <topicdata group="api" />
      <apidata name="FileAttributes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.UInt32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Windows.Storage.FileAttributes.Normal" />
        <element api="F:Windows.Storage.FileAttributes.ReadOnly" />
        <element api="F:Windows.Storage.FileAttributes.Directory" />
        <element api="F:Windows.Storage.FileAttributes.Archive" />
        <element api="F:Windows.Storage.FileAttributes.Temporary" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="195ab68c-f549-6f68-2ed8-9a34d79ac944" />
    </api>
    <api id="F:Windows.Storage.FileAttributes.Archive">
      <topicdata group="api" notopic="" />
      <apidata name="Archive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </containers>
      <file name="41d8bc2e-b7d4-82e9-b0c5-3a1e1c66f04f" />
    </api>
    <api id="F:Windows.Storage.FileAttributes.Directory">
      <topicdata group="api" notopic="" />
      <apidata name="Directory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </containers>
      <file name="d3946a7d-5446-eecd-7cc6-45065511d9e0" />
    </api>
    <api id="F:Windows.Storage.FileAttributes.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </containers>
      <file name="3c659ca1-23fc-7974-da5f-3d255fd8c957" />
    </api>
    <api id="F:Windows.Storage.FileAttributes.ReadOnly">
      <topicdata group="api" notopic="" />
      <apidata name="ReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </containers>
      <file name="89e6c527-e3ab-2602-1751-8d38a95f2de5" />
    </api>
    <api id="F:Windows.Storage.FileAttributes.Temporary">
      <topicdata group="api" notopic="" />
      <apidata name="Temporary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </containers>
      <file name="8c6f8668-d8f8-637e-07a1-53e1828747ba" />
    </api>
    <api id="T:Windows.Storage.FileIO">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="FileIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.ThreadingAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.ThreadingModel" ref="false" />
            <enumValue>
              <field name="Both" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="491f5f18-3ccf-74c8-0f08-9d2825085359" />
    </api>
    <api id="AllMembers.T:Windows.Storage.FileIO">
      <topicdata name="FileIO" group="list" subgroup="members" typeTopicId="T:Windows.Storage.FileIO" />
      <apidata name="FileIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.FileIO.AppendLinesAsync">
          <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.AppendTextAsync">
          <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String)" />
          <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.FileIO.ReadBufferAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.FileIO.ReadLinesAsync">
          <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile)" />
          <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.ReadTextAsync">
          <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile)" />
          <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.FileIO.WriteBufferAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.IBuffer)" />
        <element api="M:Windows.Storage.FileIO.WriteBytesAsync(Windows.Storage.IStorageFile,System.Byte[])" />
        <element api="Overload:Windows.Storage.FileIO.WriteLinesAsync">
          <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.WriteTextAsync">
          <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String)" />
          <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" />
      </containers>
      <file name="eaae657b-26f8-e5ce-dde9-cf622b08eb8f" />
    </api>
    <api id="Methods.T:Windows.Storage.FileIO">
      <topicdata name="FileIO" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.FileIO" />
      <apidata name="FileIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.FileIO.AppendLinesAsync">
          <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.AppendTextAsync">
          <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String)" />
          <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.FileIO.ReadBufferAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.FileIO.ReadLinesAsync">
          <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile)" />
          <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.ReadTextAsync">
          <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile)" />
          <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.FileIO.WriteBufferAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.IBuffer)" />
        <element api="M:Windows.Storage.FileIO.WriteBytesAsync(Windows.Storage.IStorageFile,System.Byte[])" />
        <element api="Overload:Windows.Storage.FileIO.WriteLinesAsync">
          <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.FileIO.WriteTextAsync">
          <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String)" />
          <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" />
      </containers>
      <file name="b2028407-981d-eaf7-53f3-f5437d3c0573" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.AppendLinesAsync">
      <topicdata name="AppendLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
        <element api="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="0febc2c8-e8af-1ee2-a6ed-7376cd2623e3" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.AppendTextAsync">
      <topicdata name="AppendTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String)" />
        <element api="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="5b253598-292f-3f73-9aad-61cebad67dc5" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.ReadLinesAsync">
      <topicdata name="ReadLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile)" />
        <element api="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="be53dad1-8063-fcaf-98a5-91b025dd752a" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.ReadTextAsync">
      <topicdata name="ReadTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile)" />
        <element api="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="fc9ff323-31b4-fff8-114f-c638b3add81b" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.WriteLinesAsync">
      <topicdata name="WriteLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})" />
        <element api="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="7096c21e-9f36-39eb-09ad-fb34c7ce37ad" />
    </api>
    <api id="Overload:Windows.Storage.FileIO.WriteTextAsync">
      <topicdata name="WriteTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.FileIO" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String)" />
        <element api="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="1bb75609-92d9-68d3-03cc-aac3257cf68b" />
    </api>
    <api id="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})">
      <topicdata group="api" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.AppendLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="37492fd9-e0c5-be93-73d3-99865b8b12f7" />
    </api>
    <api id="M:Windows.Storage.FileIO.AppendLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.AppendLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="08cb6ae1-5948-24c7-f084-8dc593ac1ac8" />
    </api>
    <api id="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.AppendTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d8d511af-38eb-d165-7327-1a2dd779c556" />
    </api>
    <api id="M:Windows.Storage.FileIO.AppendTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.AppendTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b6062a10-ba1f-4ccd-5ba4-ac9988debf96" />
    </api>
    <api id="M:Windows.Storage.FileIO.ReadBufferAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="ReadBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IBuffer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="a742c431-ac3a-acd0-e07d-58019a45d9a6" />
    </api>
    <api id="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.ReadLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5cf5247-be87-e95a-99cf-07421dc40509" />
    </api>
    <api id="M:Windows.Storage.FileIO.ReadLinesAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.ReadLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7752e6e4-6bd6-ffa0-39b0-fc479cebf1e1" />
    </api>
    <api id="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.ReadTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="93124908-0fd8-5d26-de6a-cfb500e26e8a" />
    </api>
    <api id="M:Windows.Storage.FileIO.ReadTextAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.ReadTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7029f45a-6c8b-fe4d-54f3-f5ebf9efa708" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteBufferAsync(Windows.Storage.IStorageFile,Windows.Storage.Streams.IBuffer)">
      <topicdata group="api" />
      <apidata name="WriteBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="buffer" in="true">
          <type api="T:Windows.Storage.Streams.IBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="f58c5417-d4c2-68a6-43e7-4dbb5e891797" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteBytesAsync(Windows.Storage.IStorageFile,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteBytesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="buffer" in="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <file name="a3c62a8e-5ffd-bd86-52d6-5639d6accb55" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String})">
      <topicdata group="api" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.WriteLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0667bccd-67f2-1a59-6347-408b24659aad" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteLinesAsync(Windows.Storage.IStorageFile,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.WriteLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="262beae0-5240-b220-7c6c-b77369aac78f" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String)">
      <topicdata group="api" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.WriteTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="762c9ea5-6020-14ff-06bf-e8f060832ce1" />
    </api>
    <api id="M:Windows.Storage.FileIO.WriteTextAsync(Windows.Storage.IStorageFile,System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.FileIO.WriteTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.FileIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f4b4d6d3-f3d7-b1f5-ff6f-c3c0e0c0b65c" />
    </api>
    <api id="T:Windows.Storage.IStorageFile">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFile" />
      <apidata name="IStorageFile" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
        <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        <type api="T:Windows.Storage.Streams.IInputStreamReference" ref="true" />
      </implements>
      <implementors>
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>4198457734</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>16916</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>17036</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>166</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>76</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>20</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>201</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>172</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>115</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>21</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>234</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cd65ab28-fbd0-a237-6c97-1e5fa16544c4" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStorageFile">
      <topicdata name="IStorageFile" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStorageFile" />
      <apidata name="IStorageFile" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.Storage.IStorageFile.ContentType" />
        <element api="M:Windows.Storage.IStorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.IStorageFile.CopyAsync">
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="P:Windows.Storage.IStorageFile.FileType" />
        <element api="M:Windows.Storage.IStorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.IStorageFile.MoveAsync">
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageFile.OpenAsync(Windows.Storage.FileAccessMode)" />
        <element api="M:Windows.Storage.IStorageFile.OpenTransactedWriteAsync" />
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="Overload:Windows.Storage.IStorageFile.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
        <element api="Overload:Windows.Storage.IStorageFile.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.Streams.IInputStreamReference.OpenSequentialReadAsync" />
        <element api="M:Windows.Storage.Streams.IRandomAccessStreamReference.OpenReadAsync" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" />
      </containers>
      <file name="f1497a7c-cd3a-e067-c484-efbf7c820db2" />
    </api>
    <api id="Methods.T:Windows.Storage.IStorageFile">
      <topicdata name="IStorageFile" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStorageFile" />
      <apidata name="IStorageFile" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.IStorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.IStorageFile.CopyAsync">
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.IStorageFile.MoveAsync">
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageFile.OpenAsync(Windows.Storage.FileAccessMode)" />
        <element api="M:Windows.Storage.IStorageFile.OpenTransactedWriteAsync" />
        <element api="Overload:Windows.Storage.IStorageFile.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="Overload:Windows.Storage.IStorageFile.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.Streams.IInputStreamReference.OpenSequentialReadAsync" />
        <element api="M:Windows.Storage.Streams.IRandomAccessStreamReference.OpenReadAsync" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" />
      </containers>
      <file name="1d88a810-d195-d26a-7ebd-e58caf7ce58b" />
    </api>
    <api id="Properties.T:Windows.Storage.IStorageFile">
      <topicdata name="IStorageFile" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.IStorageFile" />
      <apidata name="IStorageFile" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageFile.ContentType" />
        <element api="P:Windows.Storage.IStorageFile.FileType" />
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" />
      </containers>
      <file name="3b80a397-ca03-ab76-bb0f-7905950cc679" />
    </api>
    <api id="Overload:Windows.Storage.IStorageFile.CopyAsync">
      <topicdata name="CopyAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFile" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
        <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
        <element api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="85de6fcb-2c9b-a457-0f1c-fd307b75bef3" />
    </api>
    <api id="Overload:Windows.Storage.IStorageFile.MoveAsync">
      <topicdata name="MoveAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFile" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
        <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
        <element api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="1377aadb-df34-9e03-3296-5d36c0aecb3b" />
    </api>
    <api id="P:Windows.Storage.IStorageFile.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="20c1009c-2bd5-294b-9b8c-9980453b9588" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="CopyAndReplaceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="ff6512b5-edc6-d29a-893c-c5697b6821f4" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.CopyAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverloadDefaultNameAndOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c1cb53c4-31c2-ca35-1b4c-2ecbce8d9858" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.CopyAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="67ef7ddf-c132-667a-2de0-920b74c3fa2f" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.CopyAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverload</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c92e822c-542f-6e21-f56f-0b0211c877ec" />
    </api>
    <api id="P:Windows.Storage.IStorageFile.FileType">
      <topicdata group="api" />
      <apidata name="FileType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FileType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="c2c730a2-543c-573a-fc88-ec4f4291d130" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="MoveAndReplaceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="4243d1ac-dc42-e2b8-4f15-d257295358fb" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.MoveAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverloadDefaultNameAndOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4ef0bbd4-94c7-52af-0835-0884cbfc532b" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.MoveAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c804bed1-53bd-81a1-143e-a4a1b491f285" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFile.MoveAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverload</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d7cba387-9140-7721-960c-8f9a33e1b251" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.OpenAsync(Windows.Storage.FileAccessMode)">
      <topicdata group="api" />
      <apidata name="OpenAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="accessMode" in="true">
          <type api="T:Windows.Storage.FileAccessMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IRandomAccessStream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="43e97edd-5c06-c0b7-4c9f-a83ddeec1920" />
    </api>
    <api id="M:Windows.Storage.IStorageFile.OpenTransactedWriteAsync">
      <topicdata group="api" />
      <apidata name="OpenTransactedWriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageStreamTransaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </containers>
      <file name="4dfa5f3d-e6dc-cfa4-8fb8-7448d9e30627" />
    </api>
    <api id="T:Windows.Storage.IStorageFolder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFolder" />
      <apidata name="IStorageFolder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </implements>
      <implementors>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>1926351736</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>46063</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>20341</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>168</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>11</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>111</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>217</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>218</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>226</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>148</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>75</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="30ffd163-773a-14e7-5e77-d6f915eae24a" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStorageFolder">
      <topicdata name="IStorageFolder" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStorageFolder" />
      <apidata name="IStorageFolder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="creationCollisionOption">
              <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Windows.Storage.IStorageFolder.CreateFileAsync">
          <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.IStorageFolder.CreateFolderAsync">
          <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageFolder.GetFileAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetFilesAsync" />
        <element api="M:Windows.Storage.IStorageFolder.GetFolderAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetFoldersAsync" />
        <element api="M:Windows.Storage.IStorageFolder.GetItemAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetItemsAsync" />
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="Overload:Windows.Storage.IStorageFolder.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
        <element api="Overload:Windows.Storage.IStorageFolder.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" />
      </containers>
      <file name="6d4205a9-d17c-d7a3-8235-4b54680236e8" />
    </api>
    <api id="Methods.T:Windows.Storage.IStorageFolder">
      <topicdata name="IStorageFolder" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStorageFolder" />
      <apidata name="IStorageFolder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="creationCollisionOption">
              <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:Windows.Storage.IStorageFolder.CreateFileAsync">
          <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.IStorageFolder.CreateFolderAsync">
          <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageFolder.GetFileAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetFilesAsync" />
        <element api="M:Windows.Storage.IStorageFolder.GetFolderAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetFoldersAsync" />
        <element api="M:Windows.Storage.IStorageFolder.GetItemAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.GetItemsAsync" />
        <element api="Overload:Windows.Storage.IStorageFolder.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="Overload:Windows.Storage.IStorageFolder.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" />
      </containers>
      <file name="58ebda3a-d44d-ed3a-721b-965d9fe33f36" />
    </api>
    <api id="Properties.T:Windows.Storage.IStorageFolder">
      <topicdata name="IStorageFolder" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.IStorageFolder" />
      <apidata name="IStorageFolder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" />
      </containers>
      <file name="25e59119-1fd8-7e72-65da-64b05bdc0000" />
    </api>
    <api id="Overload:Windows.Storage.IStorageFolder.CreateFileAsync">
      <topicdata name="CreateFileAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFolder" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <file name="0e59f7fb-5009-211e-db87-55dd46406ce1" />
    </api>
    <api id="Overload:Windows.Storage.IStorageFolder.CreateFolderAsync">
      <topicdata name="CreateFolderAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageFolder" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <file name="69c0c93f-2a49-ba27-5a1e-7571b2006007" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFolder.CreateFileAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="71bc4299-9d07-1e87-dc62-c80a313aeaa8" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)">
      <topicdata group="api" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFolder.CreateFileAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4b8cfd2d-b2b6-c48d-87c1-19191137ee37" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFolder.CreateFolderAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="84ee62f0-573b-895b-1059-bc54e2c4eefc" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)">
      <topicdata group="api" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageFolder.CreateFolderAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="aa458b14-9dcf-1344-8c2b-1a3f794eba5b" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetFileAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <file name="41db6249-1564-0c77-408f-47a62e65adc6" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetFilesAsync">
      <topicdata group="api" />
      <apidata name="GetFilesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFile" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFilesAsyncOverloadDefaultOptionsStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c9a7e67f-ec4b-3d36-1630-1a9dd123be3c" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetFolderAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <file name="41ef7ac9-555f-ea15-97c7-9ba0cf2a7393" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetFoldersAsync">
      <topicdata group="api" />
      <apidata name="GetFoldersAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFolder" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFoldersAsyncOverloadDefaultOptionsStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f06c9d05-d726-bb80-dc63-41d9895f0e21" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetItemAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetItemAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.IStorageItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <file name="a0a8cf08-8def-b6d8-b941-762721b4539e" />
    </api>
    <api id="M:Windows.Storage.IStorageFolder.GetItemsAsync">
      <topicdata group="api" />
      <apidata name="GetItemsAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.IStorageItem" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetItemsAsyncOverloadDefaultStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bf7c09d6-0163-188b-fe05-6b6e08ab983d" />
    </api>
    <api id="T:Windows.Storage.IStorageItem">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItem" />
      <apidata name="IStorageItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>1107798422</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>51759</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>17143</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>189</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>232</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>139</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>16</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>69</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>122</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>127</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>48</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b773826b-e523-8e83-cfd5-71989bc1565d" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStorageItem">
      <topicdata name="IStorageItem" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStorageItem" />
      <apidata name="IStorageItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="Overload:Windows.Storage.IStorageItem.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
        <element api="Overload:Windows.Storage.IStorageItem.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" />
      </containers>
      <file name="fa4e7788-00b2-987b-3d76-0f9930c0eca3" />
    </api>
    <api id="Methods.T:Windows.Storage.IStorageItem">
      <topicdata name="IStorageItem" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStorageItem" />
      <apidata name="IStorageItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.IStorageItem.DeleteAsync">
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
          <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="Overload:Windows.Storage.IStorageItem.RenameAsync">
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" />
      </containers>
      <file name="10dc6c0f-8334-2792-89d8-e20cf7ead66d" />
    </api>
    <api id="Properties.T:Windows.Storage.IStorageItem">
      <topicdata name="IStorageItem" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.IStorageItem" />
      <apidata name="IStorageItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItem.Attributes" />
        <element api="P:Windows.Storage.IStorageItem.DateCreated" />
        <element api="P:Windows.Storage.IStorageItem.Name" />
        <element api="P:Windows.Storage.IStorageItem.Path" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" />
      </containers>
      <file name="60fa5b5a-a941-a557-cb61-8134f1fe4eb1" />
    </api>
    <api id="Overload:Windows.Storage.IStorageItem.DeleteAsync">
      <topicdata name="DeleteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItem" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageItem.DeleteAsync" />
        <element api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="8d93bcc5-7541-b533-bb09-83649eecbf4c" />
    </api>
    <api id="Overload:Windows.Storage.IStorageItem.RenameAsync">
      <topicdata name="RenameAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItem" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)" />
        <element api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="bf8fb782-2812-c6a3-11fe-b3a768b2b09a" />
    </api>
    <api id="P:Windows.Storage.IStorageItem.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="c6b15580-e3d3-67d7-75f8-938d610c30fa" />
    </api>
    <api id="P:Windows.Storage.IStorageItem.DateCreated">
      <topicdata group="api" />
      <apidata name="DateCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DateCreated" />
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="0e4b84a2-1366-83ac-ab6d-f5394ae3d2fb" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.DeleteAsync">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItem.DeleteAsync" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="51873b8f-6b21-8509-2552-ffef813b2de4" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItem.DeleteAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="85c733ec-fe58-5732-c17d-08dda195cb15" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync">
      <topicdata group="api" />
      <apidata name="GetBasicPropertiesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.BasicProperties" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="48578193-f336-3fc4-aaa3-30f3fff9cebf" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)">
      <topicdata group="api" />
      <apidata name="IsOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type" in="true">
          <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="de282cd8-1af9-b79f-32cc-4e2d97558d45" />
    </api>
    <api id="P:Windows.Storage.IStorageItem.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="0ce27e59-9bde-aa35-7937-07d7ee511a0f" />
    </api>
    <api id="P:Windows.Storage.IStorageItem.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <file name="3d2c2009-fa37-924b-eb2f-030a73e55bb3" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.RenameAsync(System.String)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItem.RenameAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dc344590-46eb-48f3-f663-f43f7e9108c6" />
    </api>
    <api id="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItem.RenameAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="91f510f6-9ea2-e62d-5ee6-21b9542efbe8" />
    </api>
    <api id="T:Windows.Storage.IStorageItemProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItemProperties" />
      <apidata name="IStorageItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>2254849144</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>32809</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>18174</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>167</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>137</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>28</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>47</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>62</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>47</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>251</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>92</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b38883d8-7d9e-81ca-715c-0fd26e78d136" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStorageItemProperties">
      <topicdata name="IStorageItemProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStorageItemProperties" />
      <apidata name="IStorageItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayName" />
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayType" />
        <element api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId" />
        <element api="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="P:Windows.Storage.IStorageItemProperties.Properties" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" />
      </containers>
      <file name="6dc1354d-c149-1ba3-9468-737997cdf65f" />
    </api>
    <api id="Methods.T:Windows.Storage.IStorageItemProperties">
      <topicdata name="IStorageItemProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStorageItemProperties" />
      <apidata name="IStorageItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" />
      </containers>
      <file name="ea40ed0e-73a9-9c73-94be-d0f0069958ac" />
    </api>
    <api id="Properties.T:Windows.Storage.IStorageItemProperties">
      <topicdata name="IStorageItemProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.IStorageItemProperties" />
      <apidata name="IStorageItemProperties" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayName" />
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayType" />
        <element api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId" />
        <element api="P:Windows.Storage.IStorageItemProperties.Properties" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" />
      </containers>
      <file name="11f84223-8071-38b1-75b9-31d7b3b482f5" />
    </api>
    <api id="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync">
      <topicdata name="GetThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItemProperties" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <file name="9230703c-327c-6663-0b7c-fb010dd776bf" />
    </api>
    <api id="P:Windows.Storage.IStorageItemProperties.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <file name="06816cf9-0133-17a1-daac-7971f7c35edf" />
    </api>
    <api id="P:Windows.Storage.IStorageItemProperties.DisplayType">
      <topicdata group="api" />
      <apidata name="DisplayType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DisplayType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <file name="92dfa766-cd7f-05bc-e248-5d66f20cf742" />
    </api>
    <api id="P:Windows.Storage.IStorageItemProperties.FolderRelativeId">
      <topicdata group="api" />
      <apidata name="FolderRelativeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FolderRelativeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <file name="ec45b5b9-7eee-4661-f4f8-8947bf1e0703" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ee30535e-1073-dc91-c381-77c4b4bf5386" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9da7552e-1a5e-a061-591a-5e2f6e828fb7" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties.GetThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9290eb3f-a060-8762-0a4f-df8285d4540a" />
    </api>
    <api id="P:Windows.Storage.IStorageItemProperties.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:Windows.Storage.FileProperties.StorageItemContentProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </containers>
      <file name="c91a4aed-f5a4-dfcc-aca5-67422cb10ff9" />
    </api>
    <api id="T:Windows.Storage.IStorageItemProperties2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItemProperties2" />
      <apidata name="IStorageItemProperties2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
      </implements>
      <implementors>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>2391189841</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>1209</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>19410</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>146</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>157</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>254</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>243</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>247</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>22</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>33</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>208</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0b205f84-339b-14f7-db06-4ca8de2b47dd" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStorageItemProperties2">
      <topicdata name="IStorageItemProperties2" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStorageItemProperties2" />
      <apidata name="IStorageItemProperties2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayName" />
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayType" />
        <element api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId" />
        <element api="Overload:Windows.Storage.IStorageItemProperties2.GetThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="P:Windows.Storage.IStorageItemProperties.Properties" />
        <element api="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" />
      </containers>
      <file name="1f681894-d331-a90b-f182-f6c8e1890f28" />
    </api>
    <api id="Methods.T:Windows.Storage.IStorageItemProperties2">
      <topicdata name="IStorageItemProperties2" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStorageItemProperties2" />
      <apidata name="IStorageItemProperties2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.IStorageItemProperties2.GetThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" />
      </containers>
      <file name="868d9066-fea0-c8c1-69be-bf5f33f6709d" />
    </api>
    <api id="Properties.T:Windows.Storage.IStorageItemProperties2">
      <topicdata name="IStorageItemProperties2" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.IStorageItemProperties2" />
      <apidata name="IStorageItemProperties2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayName" />
        <element api="P:Windows.Storage.IStorageItemProperties.DisplayType" />
        <element api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId" />
        <element api="P:Windows.Storage.IStorageItemProperties.Properties" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" />
      </containers>
      <file name="77f8f023-50a1-8b24-35e8-678def4d1f84" />
    </api>
    <api id="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync">
      <topicdata name="GetScaledImageAsThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.IStorageItemProperties2" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </containers>
      <file name="385e8d08-5a2d-2cba-5a99-57de942d04d6" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8afb9d36-2acd-b3cd-5c6c-eedccadc8aa7" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="15eeb78b-8879-faa4-d0ae-c482fbe88385" />
    </api>
    <api id="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="09940c6f-ce87-b0ca-fe69-b47d43472460" />
    </api>
    <api id="T:Windows.Storage.IStreamedFileDataRequest">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.IStreamedFileDataRequest" />
      <apidata name="IStreamedFileDataRequest" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
      </implementors>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>376700110</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>55997</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>19792</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>190</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>238</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>24</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>11</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>138</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>129</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>145</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>182</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6ba8ea83-5fe0-a5a6-72ee-1850cf6651f4" />
    </api>
    <api id="AllMembers.T:Windows.Storage.IStreamedFileDataRequest">
      <topicdata name="IStreamedFileDataRequest" group="list" subgroup="members" typeTopicId="T:Windows.Storage.IStreamedFileDataRequest" />
      <apidata name="IStreamedFileDataRequest" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Windows.Storage.IStreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStreamedFileDataRequest" />
      </containers>
      <file name="9515316e-2b57-ebac-dca6-7b2e7ec098ff" />
    </api>
    <api id="Methods.T:Windows.Storage.IStreamedFileDataRequest">
      <topicdata name="IStreamedFileDataRequest" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.IStreamedFileDataRequest" />
      <apidata name="IStreamedFileDataRequest" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Windows.Storage.IStreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStreamedFileDataRequest" />
      </containers>
      <file name="030cf7cc-ef59-7ba0-324c-7e4090d73372" />
    </api>
    <api id="M:Windows.Storage.IStreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)">
      <topicdata group="api" />
      <apidata name="FailAndClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="failureMode" in="true">
          <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.IStreamedFileDataRequest" ref="true" />
      </containers>
      <file name="7797f691-485e-bd65-dc47-d92293917489" />
    </api>
    <api id="T:Windows.Storage.KnownFolders">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.KnownFolders" />
      <apidata name="KnownFolders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4fecacd5-eba1-b04b-d2cb-b4cef5b4ee77" />
    </api>
    <api id="AllMembers.T:Windows.Storage.KnownFolders">
      <topicdata name="KnownFolders" group="list" subgroup="members" typeTopicId="T:Windows.Storage.KnownFolders" />
      <apidata name="KnownFolders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.KnownFolders.CameraRoll" />
        <element api="P:Windows.Storage.KnownFolders.DocumentsLibrary" />
        <element api="P:Windows.Storage.KnownFolders.HomeGroup" />
        <element api="P:Windows.Storage.KnownFolders.MediaServerDevices" />
        <element api="P:Windows.Storage.KnownFolders.MusicLibrary" />
        <element api="P:Windows.Storage.KnownFolders.PicturesLibrary" />
        <element api="P:Windows.Storage.KnownFolders.RemovableDevices" />
        <element api="P:Windows.Storage.KnownFolders.SavedPictures" />
        <element api="P:Windows.Storage.KnownFolders.VideosLibrary" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" />
      </containers>
      <file name="0752d92b-e32f-dd18-9843-1d791a632188" />
    </api>
    <api id="Properties.T:Windows.Storage.KnownFolders">
      <topicdata name="KnownFolders" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.KnownFolders" />
      <apidata name="KnownFolders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.KnownFolders.CameraRoll" />
        <element api="P:Windows.Storage.KnownFolders.DocumentsLibrary" />
        <element api="P:Windows.Storage.KnownFolders.HomeGroup" />
        <element api="P:Windows.Storage.KnownFolders.MediaServerDevices" />
        <element api="P:Windows.Storage.KnownFolders.MusicLibrary" />
        <element api="P:Windows.Storage.KnownFolders.PicturesLibrary" />
        <element api="P:Windows.Storage.KnownFolders.RemovableDevices" />
        <element api="P:Windows.Storage.KnownFolders.SavedPictures" />
        <element api="P:Windows.Storage.KnownFolders.VideosLibrary" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" />
      </containers>
      <file name="1ad3c2bb-666f-bb20-dfe9-c06546abd932" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.CameraRoll">
      <topicdata group="api" />
      <apidata name="CameraRoll" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CameraRoll" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="cc2ce27f-a120-3f5e-2441-623d63c4891c" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.DocumentsLibrary">
      <topicdata group="api" />
      <apidata name="DocumentsLibrary" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DocumentsLibrary" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="04b13767-f982-c660-438a-de2df0f4f88e" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.HomeGroup">
      <topicdata group="api" />
      <apidata name="HomeGroup" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HomeGroup" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="3b7b847f-e024-63fa-aa26-76ea195f5d41" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.MediaServerDevices">
      <topicdata group="api" />
      <apidata name="MediaServerDevices" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MediaServerDevices" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="0bc11228-a912-9e55-2f78-58bc366f2841" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.MusicLibrary">
      <topicdata group="api" />
      <apidata name="MusicLibrary" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MusicLibrary" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="f5caa251-63af-2cb8-c697-0bda9700d280" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.PicturesLibrary">
      <topicdata group="api" />
      <apidata name="PicturesLibrary" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PicturesLibrary" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="d93d05e6-2f2d-a254-b7bf-24f8a00dcabd" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.RemovableDevices">
      <topicdata group="api" />
      <apidata name="RemovableDevices" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovableDevices" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="b8a62837-a9bf-3ced-5c0f-57bf8fc6d0b9" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.SavedPictures">
      <topicdata group="api" />
      <apidata name="SavedPictures" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SavedPictures" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="bef90dcf-ca8a-f74b-da69-59d38aeb4c97" />
    </api>
    <api id="P:Windows.Storage.KnownFolders.VideosLibrary">
      <topicdata group="api" />
      <apidata name="VideosLibrary" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VideosLibrary" />
      <returns>
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.KnownFolders" ref="true" />
      </containers>
      <file name="586aeef4-d429-11df-d95d-e4ee63ab7c45" />
    </api>
    <api id="T:Windows.Storage.NameCollisionOption">
      <topicdata group="api" />
      <apidata name="NameCollisionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.NameCollisionOption.GenerateUniqueName" />
        <element api="F:Windows.Storage.NameCollisionOption.ReplaceExisting" />
        <element api="F:Windows.Storage.NameCollisionOption.FailIfExists" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d3b21673-adb9-8a7a-9c16-a8f0bcea2a92" />
    </api>
    <api id="F:Windows.Storage.NameCollisionOption.FailIfExists">
      <topicdata group="api" notopic="" />
      <apidata name="FailIfExists" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </containers>
      <file name="03806fce-de0d-a12e-466c-f0dd62d4545a" />
    </api>
    <api id="F:Windows.Storage.NameCollisionOption.GenerateUniqueName">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateUniqueName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </containers>
      <file name="8c8d7a03-b9b8-da3d-97ec-58474178d42f" />
    </api>
    <api id="F:Windows.Storage.NameCollisionOption.ReplaceExisting">
      <topicdata group="api" notopic="" />
      <apidata name="ReplaceExisting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
      </containers>
      <file name="032a9af7-acdf-138a-4c47-bf5aa29282be" />
    </api>
    <api id="T:Windows.Storage.PathIO">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="PathIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.ThreadingAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.ThreadingModel" ref="false" />
            <enumValue>
              <field name="Both" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6842fcc5-7a1f-87dc-0824-c7cb47eda7de" />
    </api>
    <api id="AllMembers.T:Windows.Storage.PathIO">
      <topicdata name="PathIO" group="list" subgroup="members" typeTopicId="T:Windows.Storage.PathIO" />
      <apidata name="PathIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.PathIO.AppendLinesAsync">
          <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.AppendTextAsync">
          <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String)" />
          <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.PathIO.ReadBufferAsync(System.String)" />
        <element api="Overload:Windows.Storage.PathIO.ReadLinesAsync">
          <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String)" />
          <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.ReadTextAsync">
          <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String)" />
          <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.PathIO.WriteBufferAsync(System.String,Windows.Storage.Streams.IBuffer)" />
        <element api="M:Windows.Storage.PathIO.WriteBytesAsync(System.String,System.Byte[])" />
        <element api="Overload:Windows.Storage.PathIO.WriteLinesAsync">
          <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.WriteTextAsync">
          <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String)" />
          <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" />
      </containers>
      <file name="624dff0a-72eb-07ac-f4a8-c03340f72ec0" />
    </api>
    <api id="Methods.T:Windows.Storage.PathIO">
      <topicdata name="PathIO" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.PathIO" />
      <apidata name="PathIO" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Windows.Storage.PathIO.AppendLinesAsync">
          <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.AppendTextAsync">
          <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String)" />
          <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.PathIO.ReadBufferAsync(System.String)" />
        <element api="Overload:Windows.Storage.PathIO.ReadLinesAsync">
          <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String)" />
          <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.ReadTextAsync">
          <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String)" />
          <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="M:Windows.Storage.PathIO.WriteBufferAsync(System.String,Windows.Storage.Streams.IBuffer)" />
        <element api="M:Windows.Storage.PathIO.WriteBytesAsync(System.String,System.Byte[])" />
        <element api="Overload:Windows.Storage.PathIO.WriteLinesAsync">
          <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
          <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
        <element api="Overload:Windows.Storage.PathIO.WriteTextAsync">
          <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String)" />
          <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" />
      </containers>
      <file name="7f2865f1-9a65-4867-7e87-712edaafdd69" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.AppendLinesAsync">
      <topicdata name="AppendLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
        <element api="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="4b85081f-c0b5-2a10-e5b0-ea8bf824a34b" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.AppendTextAsync">
      <topicdata name="AppendTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String)" />
        <element api="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="852bd461-3304-16c9-cb63-b46df34d03b6" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.ReadLinesAsync">
      <topicdata name="ReadLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String)" />
        <element api="M:Windows.Storage.PathIO.ReadLinesAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="2a79cc29-144a-7b3d-ba21-f29e2e25778a" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.ReadTextAsync">
      <topicdata name="ReadTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String)" />
        <element api="M:Windows.Storage.PathIO.ReadTextAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="c1874c08-213c-633d-1468-da79647319db" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.WriteLinesAsync">
      <topicdata name="WriteLinesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})" />
        <element api="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="3fe012d8-b3a1-2403-94cf-d276ecdb64df" />
    </api>
    <api id="Overload:Windows.Storage.PathIO.WriteTextAsync">
      <topicdata name="WriteTextAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.PathIO" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String)" />
        <element api="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="1f6e3601-a4fc-67aa-d70e-6b7950167fb7" />
    </api>
    <api id="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})">
      <topicdata group="api" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.AppendLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="49d4e2e5-5012-93a3-eaef-88b3e053a876" />
    </api>
    <api id="M:Windows.Storage.PathIO.AppendLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="AppendLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.AppendLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4786b391-f51a-a704-0d00-673ff2d89f9e" />
    </api>
    <api id="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.AppendTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1253ad62-e656-32e5-d93a-aba7e8297d05" />
    </api>
    <api id="M:Windows.Storage.PathIO.AppendTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="AppendTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.AppendTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppendTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ceecd78d-e79f-7987-94e7-07ba7e8a6fcf" />
    </api>
    <api id="M:Windows.Storage.PathIO.ReadBufferAsync(System.String)">
      <topicdata group="api" />
      <apidata name="ReadBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IBuffer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="d92ca407-87ab-7e4d-b6ea-6df0d2df0592" />
    </api>
    <api id="M:Windows.Storage.PathIO.ReadLinesAsync(System.String)">
      <topicdata group="api" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.ReadLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7369bbd4-b86d-98b0-6a64-342b518a8e09" />
    </api>
    <api id="M:Windows.Storage.PathIO.ReadLinesAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="ReadLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.ReadLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e7a1fbf-89cc-51bb-5ede-d4f78fef79ff" />
    </api>
    <api id="M:Windows.Storage.PathIO.ReadTextAsync(System.String)">
      <topicdata group="api" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.ReadTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ab61f061-445a-1c1f-5d91-8e150e470277" />
    </api>
    <api id="M:Windows.Storage.PathIO.ReadTextAsync(System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="ReadTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.ReadTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ReadTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9315341a-afb8-b413-afed-29b099601192" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteBufferAsync(System.String,Windows.Storage.Streams.IBuffer)">
      <topicdata group="api" />
      <apidata name="WriteBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buffer" in="true">
          <type api="T:Windows.Storage.Streams.IBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="99dabd36-6cfc-adbc-96e2-76bdad13cff4" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteBytesAsync(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteBytesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="buffer" in="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <file name="e38462f3-af41-1f81-fc2e-ae5489450bb9" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String})">
      <topicdata group="api" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.WriteLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteLinesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dc2a246d-3fa8-6434-20e9-a3f7936d7439" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteLinesAsync(System.String,Windows.Foundation.Collections.IIterable{System.String},Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="WriteLinesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.WriteLinesAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lines" in="true">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteLinesWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7ef7e265-f215-cef4-2f99-7ccb5decad68" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.WriteTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteTextAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e6302d7c-d217-97e6-e278-cc5e07cd790b" />
    </api>
    <api id="M:Windows.Storage.PathIO.WriteTextAsync(System.String,System.String,Windows.Storage.Streams.UnicodeEncoding)">
      <topicdata group="api" />
      <apidata name="WriteTextAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Windows.Storage.PathIO.WriteTextAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="absolutePath" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding" in="true">
          <type api="T:Windows.Storage.Streams.UnicodeEncoding" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.PathIO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WriteTextWithEncodingAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e48f21b9-0f96-5ec6-931d-379a4a408e2a" />
    </api>
    <api id="T:Windows.Storage.SetVersionDeferral">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SetVersionDeferral" />
      <apidata name="SetVersionDeferral" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISetVersionDeferral" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="85edc9f8-e1fd-cdd9-bf3a-6aee5e2f101e" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SetVersionDeferral">
      <topicdata name="SetVersionDeferral" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SetVersionDeferral" />
      <apidata name="SetVersionDeferral" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.SetVersionDeferral.Complete" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionDeferral" />
      </containers>
      <file name="b89f50ec-5779-c1e4-75c5-4424ee10dcc0" />
    </api>
    <api id="Methods.T:Windows.Storage.SetVersionDeferral">
      <topicdata name="SetVersionDeferral" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SetVersionDeferral" />
      <apidata name="SetVersionDeferral" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.SetVersionDeferral.Complete" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionDeferral" />
      </containers>
      <file name="05b9c010-1ac0-9603-ab53-e3c793d98679" />
    </api>
    <api id="M:Windows.Storage.SetVersionDeferral.Complete">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionDeferral" ref="true" />
      </containers>
      <file name="42b3aa1a-388e-2f75-acef-bc84cafd6fa1" />
    </api>
    <api id="T:Windows.Storage.SetVersionRequest">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SetVersionRequest" />
      <apidata name="SetVersionRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISetVersionRequest" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.DualApiPartitionAttribute" ref="true" />
          <assignment name="version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="07b85b71-8719-b172-1a16-131e2e078ea5" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SetVersionRequest">
      <topicdata name="SetVersionRequest" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SetVersionRequest" />
      <apidata name="SetVersionRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SetVersionRequest.CurrentVersion" />
        <element api="P:Windows.Storage.SetVersionRequest.DesiredVersion" />
        <element api="M:Windows.Storage.SetVersionRequest.GetDeferral" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" />
      </containers>
      <file name="dc5fde2a-85b5-3eda-b597-bfbc84504227" />
    </api>
    <api id="Methods.T:Windows.Storage.SetVersionRequest">
      <topicdata name="SetVersionRequest" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SetVersionRequest" />
      <apidata name="SetVersionRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.SetVersionRequest.GetDeferral" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" />
      </containers>
      <file name="51bbed0f-3b69-aeb5-b8b4-374aebf6767b" />
    </api>
    <api id="Properties.T:Windows.Storage.SetVersionRequest">
      <topicdata name="SetVersionRequest" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SetVersionRequest" />
      <apidata name="SetVersionRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SetVersionRequest.CurrentVersion" />
        <element api="P:Windows.Storage.SetVersionRequest.DesiredVersion" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" />
      </containers>
      <file name="dca2fc13-1318-4ae2-93cc-b0da459ed237" />
    </api>
    <api id="P:Windows.Storage.SetVersionRequest.CurrentVersion">
      <topicdata group="api" />
      <apidata name="CurrentVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentVersion" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" ref="true" />
      </containers>
      <file name="1b39ce5f-bd03-e17a-2221-8adce38d2f2f" />
    </api>
    <api id="P:Windows.Storage.SetVersionRequest.DesiredVersion">
      <topicdata group="api" />
      <apidata name="DesiredVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DesiredVersion" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" ref="true" />
      </containers>
      <file name="34b7fe4a-77f0-61e3-81be-be844bcfbd31" />
    </api>
    <api id="M:Windows.Storage.SetVersionRequest.GetDeferral">
      <topicdata group="api" />
      <apidata name="GetDeferral" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Storage.SetVersionDeferral" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SetVersionRequest" ref="true" />
      </containers>
      <file name="2dce7c8f-c06c-5f09-c352-e5e5e2181f60" />
    </api>
    <api id="T:Windows.Storage.StorageDeleteOption">
      <topicdata group="api" />
      <apidata name="StorageDeleteOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.StorageDeleteOption.Default" />
        <element api="F:Windows.Storage.StorageDeleteOption.PermanentDelete" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fa5e1582-3c9d-4a7d-991b-e4d09a0898ef" />
    </api>
    <api id="F:Windows.Storage.StorageDeleteOption.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
      </containers>
      <file name="8dd6741c-c5db-8e00-2f7b-b9a2898d01c0" />
    </api>
    <api id="F:Windows.Storage.StorageDeleteOption.PermanentDelete">
      <topicdata group="api" notopic="" />
      <apidata name="PermanentDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
      </containers>
      <file name="6f6b0913-3291-61d8-09db-d4dc97fffae9" />
    </api>
    <api id="T:Windows.Storage.StorageFile">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="StorageFile" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.IStorageFile" ref="true" />
        <type api="T:Windows.Storage.Streams.IInputStreamReference" ref="true" />
        <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MuseAttribute" ref="true" />
          <assignment name="Version">
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="735f31db-b8ee-9d35-a842-e9eecb14a77e" />
    </api>
    <api id="AllMembers.T:Windows.Storage.StorageFile">
      <topicdata name="StorageFile" group="list" subgroup="members" typeTopicId="T:Windows.Storage.StorageFile" />
      <apidata name="StorageFile" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="P:Windows.Storage.StorageFile.Attributes" />
        <element api="P:Windows.Storage.StorageFile.ContentType" />
        <element api="M:Windows.Storage.StorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.StorageFile.CopyAsync">
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.CreateStreamedFileAsync(System.String,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="M:Windows.Storage.StorageFile.CreateStreamedFileFromUriAsync(System.String,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="P:Windows.Storage.StorageFile.DateCreated" />
        <element api="Overload:Windows.Storage.StorageFile.DeleteAsync">
          <element api="M:Windows.Storage.StorageFile.DeleteAsync" />
          <element api="M:Windows.Storage.StorageFile.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="P:Windows.Storage.StorageFile.DisplayName" />
        <element api="P:Windows.Storage.StorageFile.DisplayType" />
        <element api="P:Windows.Storage.StorageFile.FileType" />
        <element api="P:Windows.Storage.StorageFile.FolderRelativeId" />
        <element api="M:Windows.Storage.StorageFile.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(Windows.Foundation.Uri)" />
        <element api="M:Windows.Storage.StorageFile.GetFileFromPathAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFile.GetThumbnailAsync">
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="M:Windows.Storage.StorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.StorageFile.MoveAsync">
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="P:Windows.Storage.StorageFile.Name" />
        <element api="M:Windows.Storage.StorageFile.OpenAsync(Windows.Storage.FileAccessMode)" />
        <element api="M:Windows.Storage.StorageFile.OpenReadAsync" />
        <element api="M:Windows.Storage.StorageFile.OpenSequentialReadAsync" />
        <element api="M:Windows.Storage.StorageFile.OpenTransactedWriteAsync" />
        <element api="P:Windows.Storage.StorageFile.Path" />
        <element api="P:Windows.Storage.StorageFile.Properties" />
        <element api="Overload:Windows.Storage.StorageFile.RenameAsync">
          <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileAsync(Windows.Storage.IStorageFile,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileFromUriAsync(Windows.Storage.IStorageFile,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" />
      </containers>
      <file name="ed27692e-2415-e4fd-bef6-2db9ba03562d" />
    </api>
    <api id="Methods.T:Windows.Storage.StorageFile">
      <topicdata name="StorageFile" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.StorageFile" />
      <apidata name="StorageFile" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.StorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.StorageFile.CopyAsync">
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.CreateStreamedFileAsync(System.String,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="M:Windows.Storage.StorageFile.CreateStreamedFileFromUriAsync(System.String,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="Overload:Windows.Storage.StorageFile.DeleteAsync">
          <element api="M:Windows.Storage.StorageFile.DeleteAsync" />
          <element api="M:Windows.Storage.StorageFile.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(Windows.Foundation.Uri)" />
        <element api="M:Windows.Storage.StorageFile.GetFileFromPathAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFile.GetThumbnailAsync">
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="M:Windows.Storage.StorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)" />
        <element api="Overload:Windows.Storage.StorageFile.MoveAsync">
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
          <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.OpenAsync(Windows.Storage.FileAccessMode)" />
        <element api="M:Windows.Storage.StorageFile.OpenReadAsync" />
        <element api="M:Windows.Storage.StorageFile.OpenSequentialReadAsync" />
        <element api="M:Windows.Storage.StorageFile.OpenTransactedWriteAsync" />
        <element api="Overload:Windows.Storage.StorageFile.RenameAsync">
          <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileAsync(Windows.Storage.IStorageFile,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)" />
        <element api="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileFromUriAsync(Windows.Storage.IStorageFile,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" />
      </containers>
      <file name="3171ee45-0767-a79c-4b0a-c2b1d013d562" />
    </api>
    <api id="Properties.T:Windows.Storage.StorageFile">
      <topicdata name="StorageFile" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.StorageFile" />
      <apidata name="StorageFile" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.StorageFile.Attributes" />
        <element api="P:Windows.Storage.StorageFile.ContentType" />
        <element api="P:Windows.Storage.StorageFile.DateCreated" />
        <element api="P:Windows.Storage.StorageFile.DisplayName" />
        <element api="P:Windows.Storage.StorageFile.DisplayType" />
        <element api="P:Windows.Storage.StorageFile.FileType" />
        <element api="P:Windows.Storage.StorageFile.FolderRelativeId" />
        <element api="P:Windows.Storage.StorageFile.Name" />
        <element api="P:Windows.Storage.StorageFile.Path" />
        <element api="P:Windows.Storage.StorageFile.Properties" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" />
      </containers>
      <file name="f0ca0588-4845-3730-fe1b-2db9f3aed7ea" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.CopyAsync">
      <topicdata name="CopyAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder)" />
        <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)" />
        <element api="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="483e10ea-5bb7-8268-6ef0-a9fe74139404" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.DeleteAsync">
      <topicdata name="DeleteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.DeleteAsync" />
        <element api="M:Windows.Storage.StorageFile.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="5babdfd7-1af5-f2db-702a-8f96d1ef8e34" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync">
      <topicdata name="GetScaledImageAsThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="476df162-5a01-59e2-411e-a0808f0498e4" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.GetThumbnailAsync">
      <topicdata name="GetThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="48adc946-c491-5054-2c13-7df3a3b5f0f1" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.MoveAsync">
      <topicdata name="MoveAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder)" />
        <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)" />
        <element api="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="df9148e8-e7fb-8b45-98fc-0d35cfa3b781" />
    </api>
    <api id="Overload:Windows.Storage.StorageFile.RenameAsync">
      <topicdata name="RenameAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFile" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFile.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="ee3bcdba-8659-e268-616c-9eb9807a0e69" />
    </api>
    <api id="P:Windows.Storage.StorageFile.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Attributes">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="42ac0095-57e9-5b1e-67a7-f5f18e957577" />
    </api>
    <api id="P:Windows.Storage.StorageFile.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageFile.ContentType">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="72f84940-abff-fdbe-3dc1-e0f3ea7622ff" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="CopyAndReplaceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.CopyAndReplaceAsync(Windows.Storage.IStorageFile)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="72d98638-060b-860d-58dd-d2567c143106" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.CopyAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverloadDefaultNameAndOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f1b345c9-2582-5ad8-44fb-15036e7b8958" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.CopyAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="185ac133-184a-a68e-33ed-d5af2c980bb0" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="CopyAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.CopyAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.CopyAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CopyOverload</value>
          </argument>
        </attribute>
      </attributes>
      <file name="37a7223c-4961-6b26-efa5-9861f56dbb51" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CreateStreamedFileAsync(System.String,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)">
      <topicdata group="api" />
      <apidata name="CreateStreamedFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="displayNameWithExtension" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataRequested" in="true">
          <type api="T:Windows.Storage.StreamedFileDataRequestedHandler" ref="true" />
        </parameter>
        <parameter name="thumbnail" in="true">
          <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="4ae06d59-4aa9-1f7e-32e5-f58fc20b9066" />
    </api>
    <api id="M:Windows.Storage.StorageFile.CreateStreamedFileFromUriAsync(System.String,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)">
      <topicdata group="api" />
      <apidata name="CreateStreamedFileFromUriAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="displayNameWithExtension" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="uri" in="true">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="thumbnail" in="true">
          <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="751c5612-a33c-5142-fffe-004a7ca8fb44" />
    </api>
    <api id="P:Windows.Storage.StorageFile.DateCreated">
      <topicdata group="api" />
      <apidata name="DateCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DateCreated" />
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.DateCreated">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="2661c01f-eb83-9295-93f4-3c0afce07fac" />
    </api>
    <api id="M:Windows.Storage.StorageFile.DeleteAsync">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.DeleteAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.DeleteAsync">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3d32c462-6b4b-4c6d-055d-34ad79eecd0a" />
    </api>
    <api id="M:Windows.Storage.StorageFile.DeleteAsync(Windows.Storage.StorageDeleteOption)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.DeleteAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1ee6b351-e8e6-a045-00d8-8c5f64e5f0ae" />
    </api>
    <api id="P:Windows.Storage.StorageFile.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.DisplayName">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="d0deed76-bca5-465a-150d-d4b956db2005" />
    </api>
    <api id="P:Windows.Storage.StorageFile.DisplayType">
      <topicdata group="api" />
      <apidata name="DisplayType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DisplayType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.DisplayType">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="985eff0e-8441-6b70-6116-beeb6a421aeb" />
    </api>
    <api id="P:Windows.Storage.StorageFile.FileType">
      <topicdata group="api" />
      <apidata name="FileType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FileType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageFile.FileType">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="95a8678d-09b7-110a-8268-580520b80354" />
    </api>
    <api id="P:Windows.Storage.StorageFile.FolderRelativeId">
      <topicdata group="api" />
      <apidata name="FolderRelativeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FolderRelativeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="35a640d0-2536-af6b-e9d5-9494b059a1a4" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetBasicPropertiesAsync">
      <topicdata group="api" />
      <apidata name="GetBasicPropertiesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.BasicProperties" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="d7cd42f0-e5c2-fc32-2bc6-c8526331e63c" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(Windows.Foundation.Uri)">
      <topicdata group="api" />
      <apidata name="GetFileFromApplicationUriAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri" in="true">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="6d634b56-71bf-8de0-8b7c-1859dd9ff052" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetFileFromPathAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFileFromPathAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="53eec1c2-3f7a-3848-79b4-8817a76acc3d" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6ef852a5-cb0b-7599-b5b7-82b0eb936139" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="57e3c12e-46ed-35d8-efd6-4a2d47091197" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="52740dfa-650a-4ba4-8843-692ab256a04c" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6554445b-9fae-4f2d-eacb-88efdf9c8997" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="934406dd-c036-28c1-c5b1-38dccd4b5b8a" />
    </api>
    <api id="M:Windows.Storage.StorageFile.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d852f8b6-1924-a2ef-4ff2-c3883ae0a445" />
    </api>
    <api id="M:Windows.Storage.StorageFile.IsOfType(Windows.Storage.StorageItemTypes)">
      <topicdata group="api" />
      <apidata name="IsOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type" in="true">
          <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="1e3b2f37-d0e6-ad26-f604-76527ed8f105" />
    </api>
    <api id="M:Windows.Storage.StorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)">
      <topicdata group="api" />
      <apidata name="MoveAndReplaceAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.MoveAndReplaceAsync(Windows.Storage.IStorageFile)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="d7f014f5-c638-18b3-0518-56c396997dc5" />
    </api>
    <api id="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.MoveAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverloadDefaultNameAndOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1eb35308-310e-a6f3-42af-71bffa4db464" />
    </api>
    <api id="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.MoveAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d97c4604-db8e-1405-1cbd-850f2006588f" />
    </api>
    <api id="M:Windows.Storage.StorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="MoveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.MoveAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="destinationFolder" in="true">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </parameter>
        <parameter name="desiredNewName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.MoveAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.NameCollisionOption)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MoveOverload</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0d2fc1ff-f2dd-41fa-df57-ea71d0eeaa62" />
    </api>
    <api id="P:Windows.Storage.StorageFile.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Name">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="8a444a35-156d-487e-2e8c-db54fa3cd699" />
    </api>
    <api id="M:Windows.Storage.StorageFile.OpenAsync(Windows.Storage.FileAccessMode)">
      <topicdata group="api" />
      <apidata name="OpenAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="accessMode" in="true">
          <type api="T:Windows.Storage.FileAccessMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IRandomAccessStream" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.OpenAsync(Windows.Storage.FileAccessMode)">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="8cb142e4-7383-414c-3a0f-befe15eddd97" />
    </api>
    <api id="M:Windows.Storage.StorageFile.OpenReadAsync">
      <topicdata group="api" />
      <apidata name="OpenReadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IRandomAccessStreamWithContentType" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Streams.IRandomAccessStreamReference.OpenReadAsync">
          <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="739c13e4-1f2b-f807-ed5f-61ff763c8bd1" />
    </api>
    <api id="M:Windows.Storage.StorageFile.OpenSequentialReadAsync">
      <topicdata group="api" />
      <apidata name="OpenSequentialReadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Streams.IInputStream" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Streams.IInputStreamReference.OpenSequentialReadAsync">
          <type api="T:Windows.Storage.Streams.IInputStreamReference" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="7c13af1f-395b-42c8-4bc5-aaa5cffb3638" />
    </api>
    <api id="M:Windows.Storage.StorageFile.OpenTransactedWriteAsync">
      <topicdata group="api" />
      <apidata name="OpenTransactedWriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageStreamTransaction" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFile.OpenTransactedWriteAsync">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="be7ee744-9d24-53ed-a849-f14cb4c7cfe6" />
    </api>
    <api id="P:Windows.Storage.StorageFile.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Path">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="ac0a2778-05fd-1a22-2575-a1bcf2ba1645" />
    </api>
    <api id="P:Windows.Storage.StorageFile.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:Windows.Storage.FileProperties.StorageItemContentProperties" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.Properties">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="b5b94815-6bf0-d3fa-9dd3-23abf9f99af0" />
    </api>
    <api id="M:Windows.Storage.StorageFile.RenameAsync(System.String)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.RenameAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3ca50aac-817b-3fed-cf46-21db8479ca16" />
    </api>
    <api id="M:Windows.Storage.StorageFile.RenameAsync(System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFile.RenameAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0b3024f2-5516-c3f9-a6a4-b138e6ee6a0c" />
    </api>
    <api id="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileAsync(Windows.Storage.IStorageFile,Windows.Storage.StreamedFileDataRequestedHandler,Windows.Storage.Streams.IRandomAccessStreamReference)">
      <topicdata group="api" />
      <apidata name="ReplaceWithStreamedFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="dataRequested" in="true">
          <type api="T:Windows.Storage.StreamedFileDataRequestedHandler" ref="true" />
        </parameter>
        <parameter name="thumbnail" in="true">
          <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="feb31c6a-8816-b1bc-d57e-26ef14692af7" />
    </api>
    <api id="M:Windows.Storage.StorageFile.ReplaceWithStreamedFileFromUriAsync(Windows.Storage.IStorageFile,Windows.Foundation.Uri,Windows.Storage.Streams.IRandomAccessStreamReference)">
      <topicdata group="api" />
      <apidata name="ReplaceWithStreamedFileFromUriAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileToReplace" in="true">
          <type api="T:Windows.Storage.IStorageFile" ref="true" />
        </parameter>
        <parameter name="uri" in="true">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="thumbnail" in="true">
          <type api="T:Windows.Storage.Streams.IRandomAccessStreamReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFile" ref="true" />
      </containers>
      <file name="e4d16632-9b2b-1a58-fa5f-0b0a3e3fc4f9" />
    </api>
    <api id="T:Windows.Storage.StorageFolder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="StorageFolder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        <type api="T:Windows.Storage.IStorageItem" ref="true" />
        <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="53bda6ec-c747-4fa7-0109-e6f74d96974a" />
    </api>
    <api id="AllMembers.T:Windows.Storage.StorageFolder">
      <topicdata name="StorageFolder" group="list" subgroup="members" typeTopicId="T:Windows.Storage.StorageFolder" />
      <apidata name="StorageFolder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="creationCollisionOption">
              <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.StorageFolder.AreQueryOptionsSupported(Windows.Storage.Search.QueryOptions)" />
        <element api="P:Windows.Storage.StorageFolder.Attributes" />
        <element api="Overload:Windows.Storage.StorageFolder.CreateFileAsync">
          <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.CreateFileQuery">
          <element api="M:Windows.Storage.StorageFolder.CreateFileQuery" />
          <element api="M:Windows.Storage.StorageFolder.CreateFileQuery(Windows.Storage.Search.CommonFileQuery)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.CreateFileQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="Overload:Windows.Storage.StorageFolder.CreateFolderAsync">
          <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.CreateFolderQuery">
          <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery" />
          <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.CreateFolderQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="M:Windows.Storage.StorageFolder.CreateItemQuery" />
        <element api="M:Windows.Storage.StorageFolder.CreateItemQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="P:Windows.Storage.StorageFolder.DateCreated" />
        <element api="Overload:Windows.Storage.StorageFolder.DeleteAsync">
          <element api="M:Windows.Storage.StorageFolder.DeleteAsync" />
          <element api="M:Windows.Storage.StorageFolder.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="P:Windows.Storage.StorageFolder.DisplayName" />
        <element api="P:Windows.Storage.StorageFolder.DisplayType" />
        <element api="P:Windows.Storage.StorageFolder.FolderRelativeId" />
        <element api="M:Windows.Storage.StorageFolder.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetFileAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetFilesAsync">
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery)" />
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.GetFolderAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFolder.GetFolderFromPathAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetFoldersAsync">
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)" />
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.GetIndexedStateAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetItemAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetItemsAsync">
          <element api="M:Windows.Storage.StorageFolder.GetItemsAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetItemsAsync(System.UInt32,System.UInt32)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync">
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.IsCommonFileQuerySupported(Windows.Storage.Search.CommonFileQuery)" />
        <element api="M:Windows.Storage.StorageFolder.IsCommonFolderQuerySupported(Windows.Storage.Search.CommonFolderQuery)" />
        <element api="M:Windows.Storage.StorageFolder.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="P:Windows.Storage.StorageFolder.Name" />
        <element api="P:Windows.Storage.StorageFolder.Path" />
        <element api="P:Windows.Storage.StorageFolder.Properties" />
        <element api="Overload:Windows.Storage.StorageFolder.RenameAsync">
          <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" />
      </containers>
      <file name="4f097161-14c5-48ac-4887-84eac25b9fd0" />
    </api>
    <api id="Methods.T:Windows.Storage.StorageFolder">
      <topicdata name="StorageFolder" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.StorageFolder" />
      <apidata name="StorageFolder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" source="extension">
          <apidata name="OpenStreamForReadAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" source="extension">
          <apidata name="OpenStreamForWriteAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="relativePath">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="creationCollisionOption">
              <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.IO.Stream" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStorageExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.StorageFolder.AreQueryOptionsSupported(Windows.Storage.Search.QueryOptions)" />
        <element api="Overload:Windows.Storage.StorageFolder.CreateFileAsync">
          <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.CreateFileQuery">
          <element api="M:Windows.Storage.StorageFolder.CreateFileQuery" />
          <element api="M:Windows.Storage.StorageFolder.CreateFileQuery(Windows.Storage.Search.CommonFileQuery)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.CreateFileQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="Overload:Windows.Storage.StorageFolder.CreateFolderAsync">
          <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.CreateFolderQuery">
          <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery" />
          <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.CreateFolderQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="M:Windows.Storage.StorageFolder.CreateItemQuery" />
        <element api="M:Windows.Storage.StorageFolder.CreateItemQueryWithOptions(Windows.Storage.Search.QueryOptions)" />
        <element api="Overload:Windows.Storage.StorageFolder.DeleteAsync">
          <element api="M:Windows.Storage.StorageFolder.DeleteAsync" />
          <element api="M:Windows.Storage.StorageFolder.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.GetBasicPropertiesAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetFileAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetFilesAsync">
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery)" />
          <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.GetFolderAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFolder.GetFolderFromPathAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetFoldersAsync">
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)" />
          <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.GetIndexedStateAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetItemAsync(System.String)" />
        <element api="Overload:Windows.Storage.StorageFolder.GetItemsAsync">
          <element api="M:Windows.Storage.StorageFolder.GetItemsAsync" />
          <element api="M:Windows.Storage.StorageFolder.GetItemsAsync(System.UInt32,System.UInt32)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync">
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync">
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
          <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
        </element>
        <element api="M:Windows.Storage.StorageFolder.IsCommonFileQuerySupported(Windows.Storage.Search.CommonFileQuery)" />
        <element api="M:Windows.Storage.StorageFolder.IsCommonFolderQuerySupported(Windows.Storage.Search.CommonFolderQuery)" />
        <element api="M:Windows.Storage.StorageFolder.IsOfType(Windows.Storage.StorageItemTypes)" />
        <element api="Overload:Windows.Storage.StorageFolder.RenameAsync">
          <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String)" />
          <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
        </element>
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" />
      </containers>
      <file name="162b9a62-ac14-8daf-fc04-8a2e9a61e119" />
    </api>
    <api id="Properties.T:Windows.Storage.StorageFolder">
      <topicdata name="StorageFolder" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.StorageFolder" />
      <apidata name="StorageFolder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.StorageFolder.Attributes" />
        <element api="P:Windows.Storage.StorageFolder.DateCreated" />
        <element api="P:Windows.Storage.StorageFolder.DisplayName" />
        <element api="P:Windows.Storage.StorageFolder.DisplayType" />
        <element api="P:Windows.Storage.StorageFolder.FolderRelativeId" />
        <element api="P:Windows.Storage.StorageFolder.Name" />
        <element api="P:Windows.Storage.StorageFolder.Path" />
        <element api="P:Windows.Storage.StorageFolder.Properties" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" />
      </containers>
      <file name="a9ee41a7-2ab5-0991-641c-119534153414" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.CreateFileAsync">
      <topicdata name="CreateFileAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="d5deb21e-98a7-99cc-9793-9e0d0c610a6e" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.CreateFileQuery">
      <topicdata name="CreateFileQuery" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="CreateFileQuery" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.CreateFileQuery" />
        <element api="M:Windows.Storage.StorageFolder.CreateFileQuery(Windows.Storage.Search.CommonFileQuery)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="5c084322-aeca-abaf-1487-15a252f22b66" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.CreateFolderAsync">
      <topicdata name="CreateFolderAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="a0ff1cbd-ad85-d841-ec6a-97de3727ead6" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.CreateFolderQuery">
      <topicdata name="CreateFolderQuery" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="CreateFolderQuery" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery" />
        <element api="M:Windows.Storage.StorageFolder.CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="0a233d65-6ef1-1b7e-868b-014e8ee66076" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.DeleteAsync">
      <topicdata name="DeleteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.DeleteAsync" />
        <element api="M:Windows.Storage.StorageFolder.DeleteAsync(Windows.Storage.StorageDeleteOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="a1c63f51-093f-a06c-b08a-3ffec248167c" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.GetFilesAsync">
      <topicdata name="GetFilesAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="GetFilesAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.GetFilesAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery)" />
        <element api="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="911a105e-a1dd-9382-7d1c-5b731489f551" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.GetFoldersAsync">
      <topicdata name="GetFoldersAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="GetFoldersAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)" />
        <element api="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="7ddc6f4b-cffc-460f-17ca-e7671cdb059a" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.GetItemsAsync">
      <topicdata name="GetItemsAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="GetItemsAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.GetItemsAsync" />
        <element api="M:Windows.Storage.StorageFolder.GetItemsAsync(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="0bff0a07-b4b5-73b3-1bd6-d79a3e8f95c5" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync">
      <topicdata name="GetScaledImageAsThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="fb70e436-6e30-1db1-3ba7-e737223dbc0b" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync">
      <topicdata name="GetThumbnailAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)" />
        <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)" />
        <element api="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="8c875dfd-719d-c2e3-661e-2170e8adfa36" />
    </api>
    <api id="Overload:Windows.Storage.StorageFolder.RenameAsync">
      <topicdata name="RenameAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Windows.Storage.StorageFolder" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String)" />
        <element api="M:Windows.Storage.StorageFolder.RenameAsync(System.String,Windows.Storage.NameCollisionOption)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="9220dd08-c3d7-404b-db14-eaf169af0712" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.AreQueryOptionsSupported(Windows.Storage.Search.QueryOptions)">
      <topicdata group="api" />
      <apidata name="AreQueryOptionsSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="queryOptions" in="true">
          <type api="T:Windows.Storage.Search.QueryOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.AreQueryOptionsSupported(Windows.Storage.Search.QueryOptions)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="302eb6ea-ea33-c05e-d0ed-010ba164ec5e" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:Windows.Storage.FileAttributes" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Attributes">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="ae8d2be0-42ee-b635-b479-e383c78915e9" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFileAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8e8f18a1-16b3-0b7d-97d2-d9c343f3aac5" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)">
      <topicdata group="api" />
      <apidata name="CreateFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFileAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.CreateFileAsync(System.String,Windows.Storage.CreationCollisionOption)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5314055a-9a69-1154-1544-9bca08b9b67f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFileQuery">
      <topicdata group="api" />
      <apidata name="CreateFileQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFileQuery" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Storage.Search.StorageFileQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFileQuery">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileQueryOverloadDefault</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7711a7b0-bb36-63dc-d38b-c8ca6b1e2e06" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFileQuery(Windows.Storage.Search.CommonFileQuery)">
      <topicdata group="api" />
      <apidata name="CreateFileQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFileQuery" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFileQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.Search.StorageFileQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFileQuery(Windows.Storage.Search.CommonFileQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFileQuery</value>
          </argument>
        </attribute>
      </attributes>
      <file name="95647f95-ebf9-3852-6270-d83ce36c4386" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFileQueryWithOptions(Windows.Storage.Search.QueryOptions)">
      <topicdata group="api" />
      <apidata name="CreateFileQueryWithOptions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="queryOptions" in="true">
          <type api="T:Windows.Storage.Search.QueryOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.Search.StorageFileQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFileQueryWithOptions(Windows.Storage.Search.QueryOptions)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="2542b562-475f-b737-1708-c1372332e72f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFolderAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="422ed647-eeba-72c8-af12-5d5d9a983f48" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)">
      <topicdata group="api" />
      <apidata name="CreateFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFolderAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.CreationCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.CreateFolderAsync(System.String,Windows.Storage.CreationCollisionOption)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c3c0bd98-bdd3-0b10-432d-f799be2084c9" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFolderQuery">
      <topicdata group="api" />
      <apidata name="CreateFolderQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFolderQuery" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Storage.Search.StorageFolderQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFolderQuery">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderQueryOverloadDefault</value>
          </argument>
        </attribute>
      </attributes>
      <file name="aed096a4-cd3e-d0e5-cc1f-c390c5a480be" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)">
      <topicdata group="api" />
      <apidata name="CreateFolderQuery" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.CreateFolderQuery" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFolderQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.Search.StorageFolderQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFolderQuery(Windows.Storage.Search.CommonFolderQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateFolderQuery</value>
          </argument>
        </attribute>
      </attributes>
      <file name="76552e82-0a84-e49d-738c-20e8303d553d" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateFolderQueryWithOptions(Windows.Storage.Search.QueryOptions)">
      <topicdata group="api" />
      <apidata name="CreateFolderQueryWithOptions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="queryOptions" in="true">
          <type api="T:Windows.Storage.Search.QueryOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.Search.StorageFolderQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateFolderQueryWithOptions(Windows.Storage.Search.QueryOptions)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="0917789e-b88d-7833-49bb-b7856c95ee2c" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateItemQuery">
      <topicdata group="api" />
      <apidata name="CreateItemQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Storage.Search.StorageItemQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateItemQuery">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="09dedb50-8d76-0140-07a0-4bff214b053d" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.CreateItemQueryWithOptions(Windows.Storage.Search.QueryOptions)">
      <topicdata group="api" />
      <apidata name="CreateItemQueryWithOptions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="queryOptions" in="true">
          <type api="T:Windows.Storage.Search.QueryOptions" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Storage.Search.StorageItemQueryResult" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.CreateItemQueryWithOptions(Windows.Storage.Search.QueryOptions)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="b85cf3a8-6f5f-0c91-425e-3bd319fd36b6" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.DateCreated">
      <topicdata group="api" />
      <apidata name="DateCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DateCreated" />
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.DateCreated">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="5efbaeb2-4afa-15d1-0671-e3784d3b5e3f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.DeleteAsync">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.DeleteAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.DeleteAsync">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d1fff460-91ce-0333-0027-4ffc6739e14e" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.DeleteAsync(Windows.Storage.StorageDeleteOption)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.DeleteAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.StorageDeleteOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.DeleteAsync(Windows.Storage.StorageDeleteOption)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DeleteAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="86f59f47-169f-0d38-49f2-edff809c9f97" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.DisplayName">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="51bf54fd-92b3-9dcf-049d-e7c36259d9e8" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.DisplayType">
      <topicdata group="api" />
      <apidata name="DisplayType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DisplayType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.DisplayType">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="c1e4a30e-ba2a-b940-1ab3-17fde75467bc" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.FolderRelativeId">
      <topicdata group="api" />
      <apidata name="FolderRelativeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FolderRelativeId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.FolderRelativeId">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="e93e44ba-da94-1fc4-b543-f79bec659ac4" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetBasicPropertiesAsync">
      <topicdata group="api" />
      <apidata name="GetBasicPropertiesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.BasicProperties" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.GetBasicPropertiesAsync">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="ab04e681-d3d9-ab65-7867-8e04dec1d95b" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFileAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFileAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetFileAsync(System.String)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="92e7199c-94ce-0a11-a8ab-eb21cdbe59a5" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFilesAsync">
      <topicdata group="api" />
      <apidata name="GetFilesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFilesAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFile" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetFilesAsync">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFilesAsyncOverloadDefaultOptionsStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cef14a13-f41a-80ef-53cc-b7c5a8f13fd6" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery)">
      <topicdata group="api" />
      <apidata name="GetFilesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFilesAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFileQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFile" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetFilesAsync(Windows.Storage.Search.CommonFileQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFilesAsyncOverloadDefaultStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fe174ccc-56bd-eb72-aead-2020f1184a89" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetFilesAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFilesAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFileQuery" ref="false" />
        </parameter>
        <parameter name="startIndex" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="maxItemsToRetrieve" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFile" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetFilesAsync(Windows.Storage.Search.CommonFileQuery,System.UInt32,System.UInt32)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFilesAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="181c3581-937a-badc-f438-2849f9a2b2d0" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFolderAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFolderAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetFolderAsync(System.String)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="764c7e0c-843b-7894-ce74-d1d68c8303da" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFolderFromPathAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetFolderFromPathAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.StorageFolder" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="a76cc9e3-ecb4-c391-39ad-ee5e49460216" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFoldersAsync">
      <topicdata group="api" />
      <apidata name="GetFoldersAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFoldersAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFolder" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetFoldersAsync">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFoldersAsyncOverloadDefaultOptionsStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5b5992b0-25aa-1ae0-df67-1f490ccfc2ea" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)">
      <topicdata group="api" />
      <apidata name="GetFoldersAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFoldersAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFolderQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFolder" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFoldersAsyncOverloadDefaultStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="faed8905-098c-9c8c-5c17-bfa979d33b36" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetFoldersAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetFoldersAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFolderQuery" ref="false" />
        </parameter>
        <parameter name="startIndex" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="maxItemsToRetrieve" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.StorageFolder" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetFoldersAsync(Windows.Storage.Search.CommonFolderQuery,System.UInt32,System.UInt32)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetFoldersAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5d6a4f55-a180-022b-9c38-3ecb4580812f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetIndexedStateAsync">
      <topicdata group="api" />
      <apidata name="GetIndexedStateAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.Search.IndexedState" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetIndexedStateAsync">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="b62e1cf4-3373-f6e0-9f59-02fb68d006c1" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetItemAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetItemAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.IStorageItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetItemAsync(System.String)">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="0754cadd-98bb-a2f3-6acf-e3c046c0a7a0" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetItemsAsync">
      <topicdata group="api" />
      <apidata name="GetItemsAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetItemsAsync" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.IStorageItem" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageFolder.GetItemsAsync">
          <type api="T:Windows.Storage.IStorageFolder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetItemsAsyncOverloadDefaultStartAndCount</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4c08fd65-0e8b-2b8f-1850-cc552c489e12" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetItemsAsync(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetItemsAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetItemsAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="startIndex" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="maxItemsToRetrieve" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
              <specialization>
                <type api="T:Windows.Storage.IStorageItem" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.GetItemsAsync(System.UInt32,System.UInt32)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetItemsAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6bccab4b-2c0b-f6ac-9970-e7c9b73aaad1" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e5b116d-5b6a-76d0-a59b-cae9b642a519" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cb2f41b7-c4c6-de1b-fb8b-29ef8876b65f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetScaledImageAsThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetScaledImageAsThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties2.GetScaledImageAsThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
          <type api="T:Windows.Storage.IStorageItemProperties2" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetScaledImageAsThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="46ce828f-56cb-5013-2364-aa9ad4e6c0a1" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultSizeDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0b67d6c9-0ab1-6757-c8c6-6f6513ca8e1f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b553ec75-90df-f95a-c7a9-c0a1b71d9210" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
      <topicdata group="api" />
      <apidata name="GetThumbnailAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.GetThumbnailAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mode" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailMode" ref="false" />
        </parameter>
        <parameter name="requestedSize" in="true">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="options" in="true">
          <type api="T:Windows.Storage.FileProperties.ThumbnailOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:Windows.Storage.FileProperties.StorageItemThumbnail" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItemProperties.GetThumbnailAsync(Windows.Storage.FileProperties.ThumbnailMode,System.UInt32,Windows.Storage.FileProperties.ThumbnailOptions)">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetThumbnailAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="abdc8802-716f-eecf-07f4-294761aa7a24" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.IsCommonFileQuerySupported(Windows.Storage.Search.CommonFileQuery)">
      <topicdata group="api" />
      <apidata name="IsCommonFileQuerySupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFileQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.IsCommonFileQuerySupported(Windows.Storage.Search.CommonFileQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="2601ee28-28f7-0df3-eae1-22a772e0fdc0" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.IsCommonFolderQuerySupported(Windows.Storage.Search.CommonFolderQuery)">
      <topicdata group="api" />
      <apidata name="IsCommonFolderQuerySupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="query" in="true">
          <type api="T:Windows.Storage.Search.CommonFolderQuery" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.Search.IStorageFolderQueryOperations.IsCommonFolderQuerySupported(Windows.Storage.Search.CommonFolderQuery)">
          <type api="T:Windows.Storage.Search.IStorageFolderQueryOperations" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="bb718f9b-d561-af33-de3c-796f5e9413c7" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.IsOfType(Windows.Storage.StorageItemTypes)">
      <topicdata group="api" />
      <apidata name="IsOfType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type" in="true">
          <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.IsOfType(Windows.Storage.StorageItemTypes)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="bea4bfac-29f9-1808-b000-17082a5bcbbd" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Name">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="30d3a422-f866-8859-5cfd-e3bce89452be" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItem.Path">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="a190a72c-6cec-0cb7-95ba-22f9c0b8ec4e" />
    </api>
    <api id="P:Windows.Storage.StorageFolder.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:Windows.Storage.FileProperties.StorageItemContentProperties" ref="true" />
      </returns>
      <implements>
        <member api="P:Windows.Storage.IStorageItemProperties.Properties">
          <type api="T:Windows.Storage.IStorageItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <file name="e3cd6ebc-7696-de92-3fa8-7bc62876702f" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.RenameAsync(System.String)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.RenameAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.RenameAsync(System.String)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsyncOverloadDefaultOptions</value>
          </argument>
        </attribute>
      </attributes>
      <file name="65d420bb-bd72-a2c6-f2b4-5ad92b8861e5" />
    </api>
    <api id="M:Windows.Storage.StorageFolder.RenameAsync(System.String,Windows.Storage.NameCollisionOption)">
      <topicdata group="api" />
      <apidata name="RenameAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Windows.Storage.StorageFolder.RenameAsync" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="desiredName" in="true">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="option" in="true">
          <type api="T:Windows.Storage.NameCollisionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <implements>
        <member api="M:Windows.Storage.IStorageItem.RenameAsync(System.String,Windows.Storage.NameCollisionOption)">
          <type api="T:Windows.Storage.IStorageItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageFolder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.OverloadAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RenameAsync</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bd34c387-0a05-e581-ee48-8d7be93e2d73" />
    </api>
    <api id="T:Windows.Storage.StorageItemTypes">
      <topicdata group="api" />
      <apidata name="StorageItemTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.UInt32" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Windows.Storage.StorageItemTypes.None" />
        <element api="F:Windows.Storage.StorageItemTypes.File" />
        <element api="F:Windows.Storage.StorageItemTypes.Folder" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="0c03cf1b-28b1-1532-21f7-53d0157193e6" />
    </api>
    <api id="F:Windows.Storage.StorageItemTypes.File">
      <topicdata group="api" notopic="" />
      <apidata name="File" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </containers>
      <file name="7324ee99-05ac-6108-39ee-e8a0b4645fbd" />
    </api>
    <api id="F:Windows.Storage.StorageItemTypes.Folder">
      <topicdata group="api" notopic="" />
      <apidata name="Folder" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </containers>
      <file name="af7e6994-abff-dfe6-bcde-e54b0a720c8e" />
    </api>
    <api id="F:Windows.Storage.StorageItemTypes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageItemTypes" ref="false" />
      </containers>
      <file name="384c0a59-9d56-a39b-f8c7-3aca2f4a1eea" />
    </api>
    <api id="T:Windows.Storage.StorageStreamTransaction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.StorageStreamTransaction" />
      <apidata name="StorageStreamTransaction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.IStorageStreamTransaction" ref="true" />
        <type api="T:Windows.Foundation.IClosable" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43c0b454-2d8f-32b4-5e1d-8dd9c34dfd38" />
    </api>
    <api id="AllMembers.T:Windows.Storage.StorageStreamTransaction">
      <topicdata name="StorageStreamTransaction" group="list" subgroup="members" typeTopicId="T:Windows.Storage.StorageStreamTransaction" />
      <apidata name="StorageStreamTransaction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.StorageStreamTransaction.Close" />
        <element api="M:Windows.Storage.StorageStreamTransaction.CommitAsync" />
        <element api="P:Windows.Storage.StorageStreamTransaction.Stream" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" />
      </containers>
      <file name="a38633d0-0cd0-2538-008a-1b1fcff2b819" />
    </api>
    <api id="Methods.T:Windows.Storage.StorageStreamTransaction">
      <topicdata name="StorageStreamTransaction" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.StorageStreamTransaction" />
      <apidata name="StorageStreamTransaction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:Windows.Storage.StorageStreamTransaction.Close" />
        <element api="M:Windows.Storage.StorageStreamTransaction.CommitAsync" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" />
      </containers>
      <file name="929ac045-3057-cbd5-af9f-82f80b4dfbbf" />
    </api>
    <api id="Properties.T:Windows.Storage.StorageStreamTransaction">
      <topicdata name="StorageStreamTransaction" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.StorageStreamTransaction" />
      <apidata name="StorageStreamTransaction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.StorageStreamTransaction.Stream" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" />
      </containers>
      <file name="ac2ea748-b50a-53fe-806d-a65ac7fd960d" />
    </api>
    <api id="M:Windows.Storage.StorageStreamTransaction.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Windows.Foundation.IClosable.Close">
          <type api="T:Windows.Foundation.IClosable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" ref="true" />
      </containers>
      <file name="0d3096bd-574d-f05a-33fc-479f66af35cf" />
    </api>
    <api id="M:Windows.Storage.StorageStreamTransaction.CommitAsync">
      <topicdata group="api" />
      <apidata name="CommitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncAction" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" ref="true" />
      </containers>
      <file name="ac643a71-a7fe-361a-bc28-dfca75dcb221" />
    </api>
    <api id="P:Windows.Storage.StorageStreamTransaction.Stream">
      <topicdata group="api" />
      <apidata name="Stream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Stream" />
      <returns>
        <type api="T:Windows.Storage.Streams.IRandomAccessStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StorageStreamTransaction" ref="true" />
      </containers>
      <file name="fc95c6cd-9b04-7263-677d-38d0814378f7" />
    </api>
    <api id="T:Windows.Storage.StreamedFileDataRequest">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.StreamedFileDataRequest" />
      <apidata name="StreamedFileDataRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.Streams.IOutputStream" ref="true" />
        <type api="T:Windows.Foundation.IClosable" ref="true" />
        <type api="T:Windows.Storage.IStreamedFileDataRequest" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="55d601c7-d59f-511e-e6b0-4e0f045c4c8d" />
    </api>
    <api id="AllMembers.T:Windows.Storage.StreamedFileDataRequest">
      <topicdata name="StreamedFileDataRequest" group="list" subgroup="members" typeTopicId="T:Windows.Storage.StreamedFileDataRequest" />
      <apidata name="StreamedFileDataRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)" source="extension" overload="true">
          <apidata name="AsStreamForWrite" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.IO.Stream" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)" source="extension" overload="true">
          <apidata name="AsStreamForWrite" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IO.Stream" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.StreamedFileDataRequest.Close" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.FlushAsync" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.WriteAsync(Windows.Storage.Streams.IBuffer)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" />
      </containers>
      <file name="c0a2f37c-a4c5-4dac-787a-7d1b6d435481" />
    </api>
    <api id="Methods.T:Windows.Storage.StreamedFileDataRequest">
      <topicdata name="StreamedFileDataRequest" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.StreamedFileDataRequest" />
      <apidata name="StreamedFileDataRequest" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)" source="extension" overload="true">
          <apidata name="AsStreamForWrite" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.IO.Stream" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)" source="extension" overload="true">
          <apidata name="AsStreamForWrite" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IO.Stream" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Runtime.WindowsRuntime" module="System.Runtime.WindowsRuntime" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.WindowsRuntimeStreamExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:Windows.Storage.StreamedFileDataRequest.Close" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.FlushAsync" />
        <element api="M:Windows.Storage.StreamedFileDataRequest.WriteAsync(Windows.Storage.Streams.IBuffer)" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" />
      </containers>
      <file name="91a7c6ac-5f5e-df46-6003-0e25846cdd1d" />
    </api>
    <api id="M:Windows.Storage.StreamedFileDataRequest.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Windows.Foundation.IClosable.Close">
          <type api="T:Windows.Foundation.IClosable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
      </containers>
      <file name="3e864753-f348-ed4a-6477-f1207c7e406c" />
    </api>
    <api id="M:Windows.Storage.StreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)">
      <topicdata group="api" />
      <apidata name="FailAndClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="failureMode" in="true">
          <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Windows.Storage.IStreamedFileDataRequest.FailAndClose(Windows.Storage.StreamedFileFailureMode)">
          <type api="T:Windows.Storage.IStreamedFileDataRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
      </containers>
      <file name="5336e565-c7d2-781c-0a53-6303a18cc5cb" />
    </api>
    <api id="M:Windows.Storage.StreamedFileDataRequest.FlushAsync">
      <topicdata group="api" />
      <apidata name="FlushAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperation`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Streams.IOutputStream.FlushAsync">
          <type api="T:Windows.Storage.Streams.IOutputStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
      </containers>
      <file name="038fa103-45bc-4c30-f9dc-0d0bd31ec326" />
    </api>
    <api id="M:Windows.Storage.StreamedFileDataRequest.WriteAsync(Windows.Storage.Streams.IBuffer)">
      <topicdata group="api" />
      <apidata name="WriteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer" in="true">
          <type api="T:Windows.Storage.Streams.IBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Windows.Foundation.IAsyncOperationWithProgress`2" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Windows.Storage.Streams.IOutputStream.WriteAsync(Windows.Storage.Streams.IBuffer)">
          <type api="T:Windows.Storage.Streams.IOutputStream" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
      </containers>
      <file name="5da8c937-8102-7bb6-7746-46fddd4d6d5a" />
    </api>
    <api id="T:Windows.Storage.StreamedFileDataRequestedHandler">
      <topicdata group="api" />
      <apidata name="StreamedFileDataRequestedHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="stream" in="true">
          <type api="T:Windows.Storage.StreamedFileDataRequest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>4277577764</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>12257</value>
          </argument>
          <argument>
            <type api="T:System.UInt16" ref="false" />
            <value>19719</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>163</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>91</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>183</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>124</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>80</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>181</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>244</value>
          </argument>
          <argument>
            <type api="T:System.Byte" ref="false" />
            <value>204</value>
          </argument>
        </attribute>
      </attributes>
      <file name="04631d32-9599-a2df-889d-c3fe4811a57a" />
    </api>
    <api id="T:Windows.Storage.StreamedFileFailureMode">
      <topicdata group="api" />
      <apidata name="StreamedFileFailureMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Windows.Storage.StreamedFileFailureMode.Failed" />
        <element api="F:Windows.Storage.StreamedFileFailureMode.CurrentlyUnavailable" />
        <element api="F:Windows.Storage.StreamedFileFailureMode.Incomplete" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100794368</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9285a974-f626-d83a-03ce-bc9131d2a95e" />
    </api>
    <api id="F:Windows.Storage.StreamedFileFailureMode.CurrentlyUnavailable">
      <topicdata group="api" notopic="" />
      <apidata name="CurrentlyUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </containers>
      <file name="ecfeefc3-fff7-8d3d-59ce-fdd582c46219" />
    </api>
    <api id="F:Windows.Storage.StreamedFileFailureMode.Failed">
      <topicdata group="api" notopic="" />
      <apidata name="Failed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </containers>
      <file name="5c17e0e1-57c1-7a64-a33a-c8b84b3a9e8d" />
    </api>
    <api id="F:Windows.Storage.StreamedFileFailureMode.Incomplete">
      <topicdata group="api" notopic="" />
      <apidata name="Incomplete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.StreamedFileFailureMode" ref="false" />
      </containers>
      <file name="559d6e7c-bb14-47a9-7bab-b6fedf2b7756" />
    </api>
    <api id="T:Windows.Storage.SystemAudioProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemAudioProperties" />
      <apidata name="SystemAudioProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemAudioProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a774e2ee-6981-2ab3-9351-d3494edd22a5" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemAudioProperties">
      <topicdata name="SystemAudioProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemAudioProperties" />
      <apidata name="SystemAudioProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemAudioProperties.EncodingBitrate" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemAudioProperties" />
      </containers>
      <file name="13850f1a-39e4-a113-c83f-e6cff11ffadf" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemAudioProperties">
      <topicdata name="SystemAudioProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemAudioProperties" />
      <apidata name="SystemAudioProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemAudioProperties" />
      </containers>
      <file name="46c1b5f4-734e-03f3-d4e6-79435253ac79" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemAudioProperties">
      <topicdata name="SystemAudioProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemAudioProperties" />
      <apidata name="SystemAudioProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemAudioProperties.EncodingBitrate" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemAudioProperties" />
      </containers>
      <file name="c43d6527-8e20-436f-da92-22d813112a90" />
    </api>
    <api id="P:Windows.Storage.SystemAudioProperties.EncodingBitrate">
      <topicdata group="api" />
      <apidata name="EncodingBitrate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_EncodingBitrate" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemAudioProperties" ref="true" />
      </containers>
      <file name="d03d8328-4f13-8967-5e60-89893c0861d4" />
    </api>
    <api id="T:Windows.Storage.SystemGPSProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemGPSProperties" />
      <apidata name="SystemGPSProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemGPSProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1c193ca9-bf21-0308-80a7-8d302df715b9" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemGPSProperties">
      <topicdata name="SystemGPSProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemGPSProperties" />
      <apidata name="SystemGPSProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemGPSProperties.LatitudeDecimal" />
        <element api="P:Windows.Storage.SystemGPSProperties.LongitudeDecimal" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemGPSProperties" />
      </containers>
      <file name="0752c0ed-2405-e3eb-66df-3410a0b642d4" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemGPSProperties">
      <topicdata name="SystemGPSProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemGPSProperties" />
      <apidata name="SystemGPSProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemGPSProperties" />
      </containers>
      <file name="fdcc216a-6cc2-5289-30a9-4214b1d6e711" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemGPSProperties">
      <topicdata name="SystemGPSProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemGPSProperties" />
      <apidata name="SystemGPSProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemGPSProperties.LatitudeDecimal" />
        <element api="P:Windows.Storage.SystemGPSProperties.LongitudeDecimal" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemGPSProperties" />
      </containers>
      <file name="7e4c2e4f-e706-01ac-cef5-5de703a2f907" />
    </api>
    <api id="P:Windows.Storage.SystemGPSProperties.LatitudeDecimal">
      <topicdata group="api" />
      <apidata name="LatitudeDecimal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LatitudeDecimal" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemGPSProperties" ref="true" />
      </containers>
      <file name="9a7d386c-9a34-4f7b-2028-50fc711b2ee6" />
    </api>
    <api id="P:Windows.Storage.SystemGPSProperties.LongitudeDecimal">
      <topicdata group="api" />
      <apidata name="LongitudeDecimal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LongitudeDecimal" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemGPSProperties" ref="true" />
      </containers>
      <file name="a75a3eb3-075b-e7b2-36b4-1874a1b7a92a" />
    </api>
    <api id="T:Windows.Storage.SystemImageProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemImageProperties" />
      <apidata name="SystemImageProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemImageProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="29d51773-195a-33ed-3d44-a664024257e4" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemImageProperties">
      <topicdata name="SystemImageProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemImageProperties" />
      <apidata name="SystemImageProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemImageProperties.HorizontalSize" />
        <element api="P:Windows.Storage.SystemImageProperties.VerticalSize" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemImageProperties" />
      </containers>
      <file name="63b78212-7d55-b740-c44e-5b937abf6017" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemImageProperties">
      <topicdata name="SystemImageProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemImageProperties" />
      <apidata name="SystemImageProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemImageProperties" />
      </containers>
      <file name="38031c7d-075f-d230-6d00-ccb3ccc12044" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemImageProperties">
      <topicdata name="SystemImageProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemImageProperties" />
      <apidata name="SystemImageProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemImageProperties.HorizontalSize" />
        <element api="P:Windows.Storage.SystemImageProperties.VerticalSize" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemImageProperties" />
      </containers>
      <file name="00b26a3e-ed06-af1c-62b5-7aa15feb6fe4" />
    </api>
    <api id="P:Windows.Storage.SystemImageProperties.HorizontalSize">
      <topicdata group="api" />
      <apidata name="HorizontalSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_HorizontalSize" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemImageProperties" ref="true" />
      </containers>
      <file name="ef2bc38b-b6a4-0670-8e21-51e709b463c7" />
    </api>
    <api id="P:Windows.Storage.SystemImageProperties.VerticalSize">
      <topicdata group="api" />
      <apidata name="VerticalSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_VerticalSize" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemImageProperties" ref="true" />
      </containers>
      <file name="af58b5e2-82fb-884c-bb2d-f47ac313fd9a" />
    </api>
    <api id="T:Windows.Storage.SystemMediaProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemMediaProperties" />
      <apidata name="SystemMediaProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemMediaProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="76d7fe47-b462-d60b-924a-1e6ff2d2d30a" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemMediaProperties">
      <topicdata name="SystemMediaProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemMediaProperties" />
      <apidata name="SystemMediaProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemMediaProperties.Duration" />
        <element api="P:Windows.Storage.SystemMediaProperties.Producer" />
        <element api="P:Windows.Storage.SystemMediaProperties.Publisher" />
        <element api="P:Windows.Storage.SystemMediaProperties.SubTitle" />
        <element api="P:Windows.Storage.SystemMediaProperties.Writer" />
        <element api="P:Windows.Storage.SystemMediaProperties.Year" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" />
      </containers>
      <file name="62448d82-436a-4a78-dfd7-37b85345aae4" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemMediaProperties">
      <topicdata name="SystemMediaProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemMediaProperties" />
      <apidata name="SystemMediaProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" />
      </containers>
      <file name="d7d8efea-d9bd-06ca-8408-cee032c955ff" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemMediaProperties">
      <topicdata name="SystemMediaProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemMediaProperties" />
      <apidata name="SystemMediaProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemMediaProperties.Duration" />
        <element api="P:Windows.Storage.SystemMediaProperties.Producer" />
        <element api="P:Windows.Storage.SystemMediaProperties.Publisher" />
        <element api="P:Windows.Storage.SystemMediaProperties.SubTitle" />
        <element api="P:Windows.Storage.SystemMediaProperties.Writer" />
        <element api="P:Windows.Storage.SystemMediaProperties.Year" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" />
      </containers>
      <file name="617275ea-f0e4-507f-9fd2-dc4b9249d283" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Duration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="d3d53d36-57f5-2db2-1279-88b147fc5a96" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.Producer">
      <topicdata group="api" />
      <apidata name="Producer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Producer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="01b52f38-f857-7ef1-4dc8-c347a20d3c12" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.Publisher">
      <topicdata group="api" />
      <apidata name="Publisher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Publisher" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="55de7032-882b-ff74-1274-fff1c3efb6b8" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.SubTitle">
      <topicdata group="api" />
      <apidata name="SubTitle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SubTitle" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="bed49ff2-47f3-9869-bbe0-95431aafcbbc" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Writer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="28c54355-0a63-afad-2d45-4c90725da2dd" />
    </api>
    <api id="P:Windows.Storage.SystemMediaProperties.Year">
      <topicdata group="api" />
      <apidata name="Year" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Year" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </containers>
      <file name="1a306a3f-f97b-712a-c625-550a793f8a75" />
    </api>
    <api id="T:Windows.Storage.SystemMusicProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemMusicProperties" />
      <apidata name="SystemMusicProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemMusicProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5c46c004-4dc7-af2f-d9ae-4a36a60e9858" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemMusicProperties">
      <topicdata name="SystemMusicProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemMusicProperties" />
      <apidata name="SystemMusicProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemMusicProperties.AlbumArtist" />
        <element api="P:Windows.Storage.SystemMusicProperties.AlbumTitle" />
        <element api="P:Windows.Storage.SystemMusicProperties.Artist" />
        <element api="P:Windows.Storage.SystemMusicProperties.Composer" />
        <element api="P:Windows.Storage.SystemMusicProperties.Conductor" />
        <element api="P:Windows.Storage.SystemMusicProperties.DisplayArtist" />
        <element api="P:Windows.Storage.SystemMusicProperties.Genre" />
        <element api="P:Windows.Storage.SystemMusicProperties.TrackNumber" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" />
      </containers>
      <file name="f9f80804-a2c0-32e7-26b3-49b3644947a5" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemMusicProperties">
      <topicdata name="SystemMusicProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemMusicProperties" />
      <apidata name="SystemMusicProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" />
      </containers>
      <file name="c4d899f2-3e70-9301-cbf3-596a89660f0e" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemMusicProperties">
      <topicdata name="SystemMusicProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemMusicProperties" />
      <apidata name="SystemMusicProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemMusicProperties.AlbumArtist" />
        <element api="P:Windows.Storage.SystemMusicProperties.AlbumTitle" />
        <element api="P:Windows.Storage.SystemMusicProperties.Artist" />
        <element api="P:Windows.Storage.SystemMusicProperties.Composer" />
        <element api="P:Windows.Storage.SystemMusicProperties.Conductor" />
        <element api="P:Windows.Storage.SystemMusicProperties.DisplayArtist" />
        <element api="P:Windows.Storage.SystemMusicProperties.Genre" />
        <element api="P:Windows.Storage.SystemMusicProperties.TrackNumber" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" />
      </containers>
      <file name="d7c65918-33e3-3fac-d8e3-11259a61549d" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.AlbumArtist">
      <topicdata group="api" />
      <apidata name="AlbumArtist" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AlbumArtist" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="6f4e539e-a89b-21a8-11e3-eb89e2eab265" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.AlbumTitle">
      <topicdata group="api" />
      <apidata name="AlbumTitle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AlbumTitle" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="a8fc2d64-e130-dfd4-ec2c-46693758f6b7" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.Artist">
      <topicdata group="api" />
      <apidata name="Artist" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Artist" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="31225e23-0cdd-609e-66eb-f8f2902acf60" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.Composer">
      <topicdata group="api" />
      <apidata name="Composer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Composer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="4810474e-67cd-a84d-3ca0-c1713ed8d2e2" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.Conductor">
      <topicdata group="api" />
      <apidata name="Conductor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Conductor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="ccbbf24f-e708-65aa-a4de-18f8e5683305" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.DisplayArtist">
      <topicdata group="api" />
      <apidata name="DisplayArtist" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DisplayArtist" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="af66480c-aa36-5b5b-3168-a7cb104cba6a" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.Genre">
      <topicdata group="api" />
      <apidata name="Genre" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Genre" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="cc4ab360-9410-3e06-8144-9122e676485e" />
    </api>
    <api id="P:Windows.Storage.SystemMusicProperties.TrackNumber">
      <topicdata group="api" />
      <apidata name="TrackNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TrackNumber" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </containers>
      <file name="e170b514-877b-fddf-a781-d38e3d4b6da5" />
    </api>
    <api id="T:Windows.Storage.SystemPhotoProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemPhotoProperties" />
      <apidata name="SystemPhotoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemPhotoProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4be5ee94-daa0-4857-e8aa-b2a8f34b5e93" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemPhotoProperties">
      <topicdata name="SystemPhotoProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemPhotoProperties" />
      <apidata name="SystemPhotoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemPhotoProperties.CameraManufacturer" />
        <element api="P:Windows.Storage.SystemPhotoProperties.CameraModel" />
        <element api="P:Windows.Storage.SystemPhotoProperties.DateTaken" />
        <element api="P:Windows.Storage.SystemPhotoProperties.Orientation" />
        <element api="P:Windows.Storage.SystemPhotoProperties.PeopleNames" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" />
      </containers>
      <file name="d3937f95-bab6-3c4b-742e-d6912f9e7502" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemPhotoProperties">
      <topicdata name="SystemPhotoProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemPhotoProperties" />
      <apidata name="SystemPhotoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" />
      </containers>
      <file name="c7f94177-35e3-0e0e-5815-2776cb8ee817" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemPhotoProperties">
      <topicdata name="SystemPhotoProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemPhotoProperties" />
      <apidata name="SystemPhotoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemPhotoProperties.CameraManufacturer" />
        <element api="P:Windows.Storage.SystemPhotoProperties.CameraModel" />
        <element api="P:Windows.Storage.SystemPhotoProperties.DateTaken" />
        <element api="P:Windows.Storage.SystemPhotoProperties.Orientation" />
        <element api="P:Windows.Storage.SystemPhotoProperties.PeopleNames" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" />
      </containers>
      <file name="73946e9e-f85c-d9a6-efa2-9915559d3aee" />
    </api>
    <api id="P:Windows.Storage.SystemPhotoProperties.CameraManufacturer">
      <topicdata group="api" />
      <apidata name="CameraManufacturer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CameraManufacturer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </containers>
      <file name="c9a023c5-ad3d-ab91-e1e7-1eb3f1d5696e" />
    </api>
    <api id="P:Windows.Storage.SystemPhotoProperties.CameraModel">
      <topicdata group="api" />
      <apidata name="CameraModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CameraModel" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </containers>
      <file name="2baeedf6-b9cd-9151-09fb-0981422ea3ea" />
    </api>
    <api id="P:Windows.Storage.SystemPhotoProperties.DateTaken">
      <topicdata group="api" />
      <apidata name="DateTaken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_DateTaken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </containers>
      <file name="5219e0c0-67c9-a86b-bede-b815fdd7fe35" />
    </api>
    <api id="P:Windows.Storage.SystemPhotoProperties.Orientation">
      <topicdata group="api" />
      <apidata name="Orientation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Orientation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </containers>
      <file name="f642a286-4d4b-593c-4e47-6fad80cb65ac" />
    </api>
    <api id="P:Windows.Storage.SystemPhotoProperties.PeopleNames">
      <topicdata group="api" />
      <apidata name="PeopleNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_PeopleNames" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </containers>
      <file name="0bfd0770-5748-4879-7f6e-679102fd3959" />
    </api>
    <api id="T:Windows.Storage.SystemProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemProperties" />
      <apidata name="SystemProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dc983180-2e5b-ccca-f6fc-21aa514ae31f" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemProperties">
      <topicdata name="SystemProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemProperties" />
      <apidata name="SystemProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemProperties.Audio" />
        <element api="P:Windows.Storage.SystemProperties.Author" />
        <element api="P:Windows.Storage.SystemProperties.Comment" />
        <element api="P:Windows.Storage.SystemProperties.GPS" />
        <element api="P:Windows.Storage.SystemProperties.Image" />
        <element api="P:Windows.Storage.SystemProperties.ItemNameDisplay" />
        <element api="P:Windows.Storage.SystemProperties.Keywords" />
        <element api="P:Windows.Storage.SystemProperties.Media" />
        <element api="P:Windows.Storage.SystemProperties.Music" />
        <element api="P:Windows.Storage.SystemProperties.Photo" />
        <element api="P:Windows.Storage.SystemProperties.Rating" />
        <element api="P:Windows.Storage.SystemProperties.Title" />
        <element api="P:Windows.Storage.SystemProperties.Video" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" />
      </containers>
      <file name="053ff044-e3d9-22f1-ec06-cca951b01c8d" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemProperties">
      <topicdata name="SystemProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemProperties" />
      <apidata name="SystemProperties" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemProperties.Audio" />
        <element api="P:Windows.Storage.SystemProperties.Author" />
        <element api="P:Windows.Storage.SystemProperties.Comment" />
        <element api="P:Windows.Storage.SystemProperties.GPS" />
        <element api="P:Windows.Storage.SystemProperties.Image" />
        <element api="P:Windows.Storage.SystemProperties.ItemNameDisplay" />
        <element api="P:Windows.Storage.SystemProperties.Keywords" />
        <element api="P:Windows.Storage.SystemProperties.Media" />
        <element api="P:Windows.Storage.SystemProperties.Music" />
        <element api="P:Windows.Storage.SystemProperties.Photo" />
        <element api="P:Windows.Storage.SystemProperties.Rating" />
        <element api="P:Windows.Storage.SystemProperties.Title" />
        <element api="P:Windows.Storage.SystemProperties.Video" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" />
      </containers>
      <file name="a3918e8f-26a0-9351-d75b-f36fbb87d5c6" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Audio">
      <topicdata group="api" />
      <apidata name="Audio" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audio" />
      <returns>
        <type api="T:Windows.Storage.SystemAudioProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="7cd54d46-af53-afc1-8ae2-bd00faa748a2" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Author">
      <topicdata group="api" />
      <apidata name="Author" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Author" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="b925f97b-0a6e-cbfe-4742-2851afa5180d" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="c97a3edf-a492-fddb-150c-b384c47c1952" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.GPS">
      <topicdata group="api" />
      <apidata name="GPS" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GPS" />
      <returns>
        <type api="T:Windows.Storage.SystemGPSProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="27139f0d-5e6f-2af8-fcb0-8a4518ef1d70" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Image">
      <topicdata group="api" />
      <apidata name="Image" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Image" />
      <returns>
        <type api="T:Windows.Storage.SystemImageProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="644ca7b4-6095-0e58-95a8-5e7fff4c583c" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.ItemNameDisplay">
      <topicdata group="api" />
      <apidata name="ItemNameDisplay" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemNameDisplay" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="700393aa-7112-8054-dcb2-18a01396e51a" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Keywords">
      <topicdata group="api" />
      <apidata name="Keywords" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keywords" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="ca989993-5f65-fcf4-c70c-8b68a4b4aa7a" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Media">
      <topicdata group="api" />
      <apidata name="Media" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Media" />
      <returns>
        <type api="T:Windows.Storage.SystemMediaProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="171991a4-a888-538d-ca7f-7c8e4540c1f8" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Music">
      <topicdata group="api" />
      <apidata name="Music" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Music" />
      <returns>
        <type api="T:Windows.Storage.SystemMusicProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="09d591de-8bb4-c9a9-aa17-c50cd07cc7e9" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Photo">
      <topicdata group="api" />
      <apidata name="Photo" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Photo" />
      <returns>
        <type api="T:Windows.Storage.SystemPhotoProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="7bdd6186-1cd4-0c76-0236-cfc6a7da335c" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Rating">
      <topicdata group="api" />
      <apidata name="Rating" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rating" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="fef23b5b-4fce-4bf4-cc93-e1278b62843f" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Title">
      <topicdata group="api" />
      <apidata name="Title" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Title" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="94cb4254-e27b-6ac1-6a85-483d0b27159c" />
    </api>
    <api id="P:Windows.Storage.SystemProperties.Video">
      <topicdata group="api" />
      <apidata name="Video" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Video" />
      <returns>
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemProperties" ref="true" />
      </containers>
      <file name="f4fc7d38-24b2-0e0a-1320-dd05b463f056" />
    </api>
    <api id="T:Windows.Storage.SystemVideoProperties">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Windows.Storage.SystemVideoProperties" />
      <apidata name="SystemVideoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Windows.Storage.ISystemVideoProperties" ref="true" />
      </implements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.MarshalingBehaviorAttribute" ref="true" />
          <argument>
            <type api="T:Windows.Foundation.Metadata.MarshalingType" ref="false" />
            <enumValue>
              <field name="Agile" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Windows.Foundation.Metadata.VersionAttribute" ref="true" />
          <argument>
            <type api="T:System.UInt32" ref="false" />
            <value>100859904</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9fa50df2-5558-8419-a73f-c373411e11d7" />
    </api>
    <api id="AllMembers.T:Windows.Storage.SystemVideoProperties">
      <topicdata name="SystemVideoProperties" group="list" subgroup="members" typeTopicId="T:Windows.Storage.SystemVideoProperties" />
      <apidata name="SystemVideoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:Windows.Storage.SystemVideoProperties.Director" />
        <element api="P:Windows.Storage.SystemVideoProperties.FrameHeight" />
        <element api="P:Windows.Storage.SystemVideoProperties.FrameWidth" />
        <element api="P:Windows.Storage.SystemVideoProperties.Orientation" />
        <element api="P:Windows.Storage.SystemVideoProperties.TotalBitrate" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" />
      </containers>
      <file name="4301d038-0cef-5022-c37a-c29306b4448f" />
    </api>
    <api id="Methods.T:Windows.Storage.SystemVideoProperties">
      <topicdata name="SystemVideoProperties" group="list" subgroup="Methods" typeTopicId="T:Windows.Storage.SystemVideoProperties" />
      <apidata name="SystemVideoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" />
      </containers>
      <file name="84acf3c2-1f8e-f71c-678e-de5cc3e52734" />
    </api>
    <api id="Properties.T:Windows.Storage.SystemVideoProperties">
      <topicdata name="SystemVideoProperties" group="list" subgroup="Properties" typeTopicId="T:Windows.Storage.SystemVideoProperties" />
      <apidata name="SystemVideoProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:Windows.Storage.SystemVideoProperties.Director" />
        <element api="P:Windows.Storage.SystemVideoProperties.FrameHeight" />
        <element api="P:Windows.Storage.SystemVideoProperties.FrameWidth" />
        <element api="P:Windows.Storage.SystemVideoProperties.Orientation" />
        <element api="P:Windows.Storage.SystemVideoProperties.TotalBitrate" />
      </elements>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" />
      </containers>
      <file name="3aaa1591-a4e6-efbf-4ea8-f93c6d0fdf08" />
    </api>
    <api id="P:Windows.Storage.SystemVideoProperties.Director">
      <topicdata group="api" />
      <apidata name="Director" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Director" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </containers>
      <file name="0e8fae88-1663-6429-b9c3-aa5bd5ff3404" />
    </api>
    <api id="P:Windows.Storage.SystemVideoProperties.FrameHeight">
      <topicdata group="api" />
      <apidata name="FrameHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FrameHeight" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </containers>
      <file name="6dfff5a2-8691-b6b8-aea3-78551775ef94" />
    </api>
    <api id="P:Windows.Storage.SystemVideoProperties.FrameWidth">
      <topicdata group="api" />
      <apidata name="FrameWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_FrameWidth" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </containers>
      <file name="d70229f4-9c96-2120-1ca2-ceba950ac2ad" />
    </api>
    <api id="P:Windows.Storage.SystemVideoProperties.Orientation">
      <topicdata group="api" />
      <apidata name="Orientation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Orientation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </containers>
      <file name="24b04691-ed0c-9d7a-8e9c-b30490108ab0" />
    </api>
    <api id="P:Windows.Storage.SystemVideoProperties.TotalBitrate">
      <topicdata group="api" />
      <apidata name="TotalBitrate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TotalBitrate" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Windows" module="Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="255.255.255.255" />
          <noAptca />
        </library>
        <namespace api="N:Windows.Storage" />
        <type api="T:Windows.Storage.SystemVideoProperties" ref="true" />
      </containers>
      <file name="d76df742-82dc-f0ba-88f9-868648768fe5" />
    </api>
  </apis>
</reflection>