<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Windows">
      <assemblydata version="2.0.6.0" culture="" key="00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.7.50915.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.6.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Windows">
      <topicdata group="api" />
      <apidata name="System.Windows" group="namespace" />
      <elements>
        <element api="T:System.Windows.Expression" />
        <element api="T:System.Windows.DependencyObject" />
        <element api="T:System.Windows.PresentationFrameworkCollection`1" />
        <element api="T:System.Windows.CornerRadius" />
        <element api="T:System.Windows.DependencyPropertyChangedEventHandler" />
        <element api="T:System.Windows.PropertyChangedCallback" />
        <element api="T:System.Windows.DependencyPropertyChangedEventArgs" />
        <element api="T:System.Windows.FrameworkTemplate" />
        <element api="T:System.Windows.DataTemplate" />
        <element api="T:System.Windows.Duration" />
        <element api="T:System.Windows.GridLength" />
        <element api="T:System.Windows.Point" />
        <element api="T:System.Windows.PropertyPath" />
        <element api="T:System.Windows.PropertyPathConverter" />
        <element api="T:System.Windows.Rect" />
        <element api="T:System.Windows.Size" />
        <element api="T:System.Windows.TemplateBindingExpression" />
        <element api="T:System.Windows.Thickness" />
        <element api="T:System.Windows.Application" />
        <element api="T:System.Windows.StartupEventArgs" />
        <element api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
        <element api="T:System.Windows.UIElement" />
        <element api="T:System.Windows.FrameworkElement" />
        <element api="T:System.Windows.TemplatePartAttribute" />
        <element api="T:System.Windows.DependencyProperty" />
        <element api="T:System.Windows.Deployment" />
        <element api="T:System.Windows.RoutedEventArgs" />
        <element api="T:System.Windows.ApplicationServiceContext" />
        <element api="T:System.Windows.IApplicationService" />
        <element api="T:System.Windows.IApplicationLifetimeAware" />
        <element api="T:System.Windows.DependencyObjectCollection`1" />
        <element api="T:System.Windows.IDataObject" />
        <element api="T:System.Windows.DragEventArgs" />
        <element api="T:System.Windows.DurationConverter" />
        <element api="T:System.Windows.TriggerBase" />
        <element api="T:System.Windows.EventTrigger" />
        <element api="T:System.Windows.ExceptionRoutedEventArgs" />
        <element api="T:System.Windows.ExternalPart" />
        <element api="T:System.Windows.ExtensionPart" />
        <element api="T:System.Windows.ExternalPartCollection" />
        <element api="T:System.Windows.FontStretch" />
        <element api="T:System.Windows.FontStretches" />
        <element api="T:System.Windows.FontStyle" />
        <element api="T:System.Windows.FontStyles" />
        <element api="T:System.Windows.FontWeight" />
        <element api="T:System.Windows.FontWeights" />
        <element api="T:System.Windows.LayoutCycleException" />
        <element api="T:System.Windows.VisualState" />
        <element api="T:System.Windows.TemplateVisualStateAttribute" />
        <element api="T:System.Windows.VisualStateGroup" />
        <element api="T:System.Windows.VisualStateChangedEventArgs" />
        <element api="T:System.Windows.VisualStateManager" />
        <element api="T:System.Windows.VisualTransition" />
        <element api="T:System.Windows.MessageBox" />
        <element api="T:System.Windows.MessageBoxResult" />
        <element api="T:System.Windows.MessageBoxButton" />
        <element api="T:System.Windows.Clipboard" />
        <element api="T:System.Windows.NullableBoolConverter" />
        <element api="T:System.Windows.PropertyMetadata" />
        <element api="T:System.Windows.ResourceDictionary" />
        <element api="T:System.Windows.RoutedEvent" />
        <element api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
        <element api="T:System.Windows.RoutedPropertyChangedEventHandler`1" />
        <element api="T:System.Windows.SetterBase" />
        <element api="T:System.Windows.Setter" />
        <element api="T:System.Windows.SetterBaseCollection" />
        <element api="T:System.Windows.Style" />
        <element api="T:System.Windows.StyleTypedPropertyAttribute" />
        <element api="T:System.Windows.SystemColors" />
        <element api="T:System.Windows.SystemParameters" />
        <element api="T:System.Windows.TextDecorationCollection" />
        <element api="T:System.Windows.TextDecorations" />
        <element api="T:System.Windows.RoutedEventHandler" />
        <element api="T:System.Windows.ExceptionRoutedEventHandler" />
        <element api="T:System.Windows.MediaFailedRoutedEventHandler" />
        <element api="T:System.Windows.StartupEventHandler" />
        <element api="T:System.Windows.SizeChangedEventHandler" />
        <element api="T:System.Windows.TextWrapping" />
        <element api="T:System.Windows.TextTrimming" />
        <element api="T:System.Windows.Visibility" />
        <element api="T:System.Windows.LineStackingStrategy" />
        <element api="T:System.Windows.TextAlignment" />
        <element api="T:System.Windows.FontCapitals" />
        <element api="T:System.Windows.FontFraction" />
        <element api="T:System.Windows.FontNumeralStyle" />
        <element api="T:System.Windows.FontNumeralAlignment" />
        <element api="T:System.Windows.FontVariants" />
        <element api="T:System.Windows.FontEastAsianLanguage" />
        <element api="T:System.Windows.FontEastAsianWidths" />
        <element api="T:System.Windows.HorizontalAlignment" />
        <element api="T:System.Windows.VerticalAlignment" />
        <element api="T:System.Windows.GridUnitType" />
        <element api="T:System.Windows.ElevatedPermissions" />
        <element api="T:System.Windows.FlowDirection" />
        <element api="T:System.Windows.TriggerCollection" />
        <element api="T:System.Windows.TriggerActionCollection" />
        <element api="T:System.Windows.TriggerAction" />
        <element api="T:System.Windows.AssemblyPart" />
        <element api="T:System.Windows.AssemblyPartCollection" />
        <element api="T:System.Windows.SizeChangedEventArgs" />
        <element api="T:System.Windows.IconCollection" />
        <element api="T:System.Windows.Icon" />
        <element api="T:System.Windows.MediaFailedRoutedEventArgs" />
      </elements>
      <file name="6fe01f63-722d-4244-4293-42f7c54365e1" />
    </api>
    <api id="T:System.Windows.Application">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Application" />
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Application.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="e4519ccf-f902-057b-70ce-dca64b3a8c17" />
    </api>
    <api id="AllMembers.T:System.Windows.Application">
      <topicdata name="Application" group="list" subgroup="members" typeTopicId="T:System.Windows.Application" />
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Application.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Application.#ctor" />
        <element api="P:System.Windows.Application.ApplicationLifetimeObjects" />
        <element api="P:System.Windows.Application.Current" />
        <element api="E:System.Windows.Application.Exit" />
        <element api="Overload:System.Windows.Application.GetResourceStream">
          <element api="M:System.Windows.Application.GetResourceStream(System.Uri)" />
          <element api="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)" />
        </element>
        <element api="P:System.Windows.Application.Host" />
        <element api="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)" />
        <element api="P:System.Windows.Application.Resources" />
        <element api="P:System.Windows.Application.RootVisual" />
        <element api="E:System.Windows.Application.Startup" />
        <element api="M:System.Windows.Application.Terminate" />
        <element api="E:System.Windows.Application.UnhandledException" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" />
      </containers>
      <file name="3ead7493-5753-a022-38f9-0d6ebe8be395" />
    </api>
    <api id="Methods.T:System.Windows.Application">
      <topicdata name="Application" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Application" />
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Application.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Application.GetResourceStream">
          <element api="M:System.Windows.Application.GetResourceStream(System.Uri)" />
          <element api="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)" />
        </element>
        <element api="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)" />
        <element api="M:System.Windows.Application.Terminate" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" />
      </containers>
      <file name="39e48961-36cf-b5cd-560e-86a84a8ca611" />
    </api>
    <api id="Properties.T:System.Windows.Application">
      <topicdata name="Application" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Application" />
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Application.#ctor" />
      <elements>
        <element api="P:System.Windows.Application.ApplicationLifetimeObjects" />
        <element api="P:System.Windows.Application.Current" />
        <element api="P:System.Windows.Application.Host" />
        <element api="P:System.Windows.Application.Resources" />
        <element api="P:System.Windows.Application.RootVisual" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" />
      </containers>
      <file name="0cf10e38-3bd3-8869-c431-a0ba22ac392d" />
    </api>
    <api id="Events.T:System.Windows.Application">
      <topicdata name="Application" group="list" subgroup="Events" typeTopicId="T:System.Windows.Application" />
      <apidata name="Application" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Application.#ctor" />
      <elements>
        <element api="E:System.Windows.Application.Exit" />
        <element api="E:System.Windows.Application.Startup" />
        <element api="E:System.Windows.Application.UnhandledException" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" />
      </containers>
      <file name="00739134-ca2e-faf6-bd67-509b4228e09e" />
    </api>
    <api id="Overload:System.Windows.Application.GetResourceStream">
      <topicdata name="GetResourceStream" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Application" />
      <apidata name="GetResourceStream" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Application.GetResourceStream(System.Uri)" />
        <element api="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="66c093a6-9c43-8430-45e3-5b50bd5f9c34" />
    </api>
    <api id="M:System.Windows.Application.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="0f2bf913-8ab2-27f5-aafd-2a6109b091ce" />
    </api>
    <api id="P:System.Windows.Application.ApplicationLifetimeObjects">
      <topicdata group="api" />
      <apidata name="ApplicationLifetimeObjects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationLifetimeObjects" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="d5e75766-a16e-6893-8cda-c6726bc3dfbd" />
    </api>
    <api id="P:System.Windows.Application.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Windows.Application" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="8408eee6-b76c-5431-50f8-138c85e7932e" />
    </api>
    <api id="E:System.Windows.Application.Exit">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Exit" />
      <remover name="remove_Exit" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="37c9ac6f-22d7-c847-43cc-941330936d9f" />
    </api>
    <api id="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetResourceStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.Application.GetResourceStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uriResource">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Resources.StreamResourceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="ccb7385a-3b26-1836-0fba-5c40482a8baf" />
    </api>
    <api id="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)">
      <topicdata group="api" />
      <apidata name="GetResourceStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.Application.GetResourceStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="zipPackageStreamResourceInfo">
          <type api="T:System.Windows.Resources.StreamResourceInfo" ref="true" />
        </parameter>
        <parameter name="uriResource">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Resources.StreamResourceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="c28003b1-671e-0085-5b88-3fe89bca41ec" />
    </api>
    <api id="P:System.Windows.Application.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.Windows.Interop.SilverlightHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="5abefb36-6c7a-bc39-e314-918926082842" />
    </api>
    <api id="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <topicdata group="api" />
      <apidata name="LoadComponent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="resourceLocator">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="8b797453-5291-8431-08a8-45df2b9b3e4a" />
    </api>
    <api id="P:System.Windows.Application.Resources">
      <topicdata group="api" />
      <apidata name="Resources" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resources" />
      <setter name="set_Resources" />
      <returns>
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="7e5390ef-800e-9756-c309-156295cf628b" />
    </api>
    <api id="P:System.Windows.Application.RootVisual">
      <topicdata group="api" />
      <apidata name="RootVisual" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RootVisual" />
      <setter name="set_RootVisual" />
      <returns>
        <type api="T:System.Windows.UIElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="3029c345-7104-ef26-9b83-b87ac23ad0ac" />
    </api>
    <api id="E:System.Windows.Application.Startup">
      <topicdata group="api" />
      <apidata name="Startup" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Startup" />
      <remover name="remove_Startup" />
      <eventhandler>
        <type api="T:System.Windows.StartupEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.StartupEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="0df378f5-e649-8beb-47a8-ece59814e130" />
    </api>
    <api id="M:System.Windows.Application.Terminate">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="0d1839a4-8c66-1a78-ceb4-163304efbb1f" />
    </api>
    <api id="E:System.Windows.Application.UnhandledException">
      <topicdata group="api" />
      <apidata name="UnhandledException" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnhandledException" />
      <remover name="remove_UnhandledException" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Application" ref="true" />
      </containers>
      <file name="319105f5-ebd9-d92c-6b24-64d9b9fdd8ae" />
    </api>
    <api id="T:System.Windows.ApplicationServiceContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ApplicationServiceContext" />
      <apidata name="ApplicationServiceContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c4b591e1-12bf-2760-11c2-178722957a6f" />
    </api>
    <api id="AllMembers.T:System.Windows.ApplicationServiceContext">
      <topicdata name="ApplicationServiceContext" group="list" subgroup="members" typeTopicId="T:System.Windows.ApplicationServiceContext" />
      <apidata name="ApplicationServiceContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.ApplicationServiceContext.ApplicationInitParams" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationServiceContext" />
      </containers>
      <file name="afdadeba-815d-edb5-b777-8022f8cd611e" />
    </api>
    <api id="Methods.T:System.Windows.ApplicationServiceContext">
      <topicdata name="ApplicationServiceContext" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ApplicationServiceContext" />
      <apidata name="ApplicationServiceContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationServiceContext" />
      </containers>
      <file name="ed6dc55b-ea8f-f388-4d13-5807f19ede24" />
    </api>
    <api id="Properties.T:System.Windows.ApplicationServiceContext">
      <topicdata name="ApplicationServiceContext" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ApplicationServiceContext" />
      <apidata name="ApplicationServiceContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.ApplicationServiceContext.ApplicationInitParams" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationServiceContext" />
      </containers>
      <file name="8bf806e4-646d-0109-8ec9-76c866d0e795" />
    </api>
    <api id="P:System.Windows.ApplicationServiceContext.ApplicationInitParams">
      <topicdata group="api" />
      <apidata name="ApplicationInitParams" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationInitParams" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationServiceContext" ref="true" />
      </containers>
      <file name="74cdb87e-10e7-0942-1ee4-9b3106274ed1" />
    </api>
    <api id="T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      <apidata name="ApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="d6e19136-fff8-fdf1-b76d-439c6acd419f" />
    </api>
    <api id="AllMembers.T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <topicdata name="ApplicationUnhandledExceptionEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      <apidata name="ApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)" />
        <element api="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject" />
        <element api="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      </containers>
      <file name="7f8ef936-2b95-7187-258e-469611963a53" />
    </api>
    <api id="Methods.T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <topicdata name="ApplicationUnhandledExceptionEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      <apidata name="ApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      </containers>
      <file name="f4ac9545-ee46-80b1-6afe-e6e908825e0a" />
    </api>
    <api id="Properties.T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <topicdata name="ApplicationUnhandledExceptionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      <apidata name="ApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject" />
        <element api="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" />
      </containers>
      <file name="385c5c0b-79ab-c27d-c462-c5241910524d" />
    </api>
    <api id="M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="ex">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="handled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
      <file name="249338ce-0fc8-43db-44b4-2c65b9ccd719" />
    </api>
    <api id="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject">
      <topicdata group="api" />
      <apidata name="ExceptionObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExceptionObject" />
      <setter name="set_ExceptionObject" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
      <file name="001abeee-004c-6ca5-0126-016b58a68a2f" />
    </api>
    <api id="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled">
      <topicdata group="api" />
      <apidata name="Handled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Handled" />
      <setter name="set_Handled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
      <file name="54bdedfe-dda4-0493-3664-46d79d589469" />
    </api>
    <api id="T:System.Windows.AssemblyPart">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.AssemblyPart" />
      <apidata name="AssemblyPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPart.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="6d7f460f-5371-d825-832f-a664e30786bf" />
    </api>
    <api id="AllMembers.T:System.Windows.AssemblyPart">
      <topicdata name="AssemblyPart" group="list" subgroup="members" typeTopicId="T:System.Windows.AssemblyPart" />
      <apidata name="AssemblyPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.AssemblyPart.#ctor" />
        <element api="P:System.Windows.AssemblyPart.Source" />
        <element api="F:System.Windows.AssemblyPart.SourceProperty" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" />
      </containers>
      <file name="77217f40-05a4-138d-9d4a-095aa431bdab" />
    </api>
    <api id="Methods.T:System.Windows.AssemblyPart">
      <topicdata name="AssemblyPart" group="list" subgroup="Methods" typeTopicId="T:System.Windows.AssemblyPart" />
      <apidata name="AssemblyPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" />
      </containers>
      <file name="a9145418-55f5-84a2-f381-f07a3182ad1a" />
    </api>
    <api id="Properties.T:System.Windows.AssemblyPart">
      <topicdata name="AssemblyPart" group="list" subgroup="Properties" typeTopicId="T:System.Windows.AssemblyPart" />
      <apidata name="AssemblyPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPart.#ctor" />
      <elements>
        <element api="P:System.Windows.AssemblyPart.Source" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" />
      </containers>
      <file name="c1fc98d9-2c35-7ce6-099a-3ad69367f53d" />
    </api>
    <api id="Fields.T:System.Windows.AssemblyPart">
      <topicdata name="AssemblyPart" group="list" subgroup="Fields" typeTopicId="T:System.Windows.AssemblyPart" />
      <apidata name="AssemblyPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPart.#ctor" />
      <elements>
        <element api="F:System.Windows.AssemblyPart.SourceProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" />
      </containers>
      <file name="e73a1f86-2e7e-c69c-7a41-b4d2521fff43" />
    </api>
    <api id="M:System.Windows.AssemblyPart.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" ref="true" />
      </containers>
      <file name="63363f01-3efc-96b4-82de-12451a15fa7a" />
    </api>
    <api id="P:System.Windows.AssemblyPart.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" ref="true" />
      </containers>
      <file name="9c74155a-cc02-21ea-6e6d-89e89c811ff4" />
    </api>
    <api id="F:System.Windows.AssemblyPart.SourceProperty">
      <topicdata group="api" />
      <apidata name="SourceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPart" ref="true" />
      </containers>
      <file name="59aeec0e-9235-cb03-0a67-ea9c1283a9e7" />
    </api>
    <api id="T:System.Windows.AssemblyPartCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.AssemblyPartCollection" />
      <apidata name="AssemblyPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPartCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.AssemblyPart" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="aa300e67-649b-0dd5-986f-7eafbfb2294f" />
    </api>
    <api id="AllMembers.T:System.Windows.AssemblyPartCollection">
      <topicdata name="AssemblyPartCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.AssemblyPartCollection" />
      <apidata name="AssemblyPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPartCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.AssemblyPartCollection.#ctor" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.AssemblyPartCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPartCollection" />
      </containers>
      <file name="fa03a47a-fabd-0e7a-9502-b5eede2fc9b8" />
    </api>
    <api id="Methods.T:System.Windows.AssemblyPartCollection">
      <topicdata name="AssemblyPartCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.AssemblyPartCollection" />
      <apidata name="AssemblyPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPartCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.AssemblyPartCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPartCollection" />
      </containers>
      <file name="407ee6af-1369-1577-37f9-b3341c0c9537" />
    </api>
    <api id="Properties.T:System.Windows.AssemblyPartCollection">
      <topicdata name="AssemblyPartCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.AssemblyPartCollection" />
      <apidata name="AssemblyPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.AssemblyPartCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPartCollection" />
      </containers>
      <file name="95b4abb9-30e8-d87e-cfc9-f3927f1feaaa" />
    </api>
    <api id="M:System.Windows.AssemblyPartCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.AssemblyPartCollection" ref="true" />
      </containers>
      <file name="f6fe9bef-01be-9994-e1ec-dc0184bc87a9" />
    </api>
    <api id="T:System.Windows.Clipboard">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Clipboard" />
      <apidata name="Clipboard" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="99b514bb-7f50-fceb-51fe-c9a09e86bdee" />
    </api>
    <api id="AllMembers.T:System.Windows.Clipboard">
      <topicdata name="Clipboard" group="list" subgroup="members" typeTopicId="T:System.Windows.Clipboard" />
      <apidata name="Clipboard" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Clipboard.ContainsText" />
        <element api="M:System.Windows.Clipboard.GetText" />
        <element api="M:System.Windows.Clipboard.SetText(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Clipboard" />
      </containers>
      <file name="4502ddf8-a8c2-4f38-b954-7ec88e2ca920" />
    </api>
    <api id="Methods.T:System.Windows.Clipboard">
      <topicdata name="Clipboard" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Clipboard" />
      <apidata name="Clipboard" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Clipboard.ContainsText" />
        <element api="M:System.Windows.Clipboard.GetText" />
        <element api="M:System.Windows.Clipboard.SetText(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Clipboard" />
      </containers>
      <file name="966f75d4-789b-3512-eb16-aa712ce5e76c" />
    </api>
    <api id="M:System.Windows.Clipboard.ContainsText">
      <topicdata group="api" />
      <apidata name="ContainsText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Clipboard" ref="true" />
      </containers>
      <file name="e32b4b8f-73a2-1389-acad-c3d7c5f20ddc" />
    </api>
    <api id="M:System.Windows.Clipboard.GetText">
      <topicdata group="api" />
      <apidata name="GetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Clipboard" ref="true" />
      </containers>
      <file name="a781a61d-4408-beb4-6585-2355a516e369" />
    </api>
    <api id="M:System.Windows.Clipboard.SetText(System.String)">
      <topicdata group="api" />
      <apidata name="SetText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Clipboard" ref="true" />
      </containers>
      <file name="b6871bd3-2862-4825-bf96-6a97ca589082" />
    </api>
    <api id="T:System.Windows.CornerRadius">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.CornerRadius" />
      <apidata name="CornerRadius" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="7267d39f-28b2-d0e5-6e93-7161624b43c8" />
    </api>
    <api id="AllMembers.T:System.Windows.CornerRadius">
      <topicdata name="CornerRadius" group="list" subgroup="members" typeTopicId="T:System.Windows.CornerRadius" />
      <apidata name="CornerRadius" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.CornerRadius.#ctor">
          <element api="M:System.Windows.CornerRadius.#ctor(System.Double)" />
          <element api="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)" />
        </element>
        <element api="P:System.Windows.CornerRadius.BottomLeft" />
        <element api="P:System.Windows.CornerRadius.BottomRight" />
        <element api="Overload:System.Windows.CornerRadius.Equals">
          <element api="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)" />
          <element api="M:System.Windows.CornerRadius.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.CornerRadius.GetHashCode" />
        <element api="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
        <element api="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
        <element api="P:System.Windows.CornerRadius.TopLeft" />
        <element api="P:System.Windows.CornerRadius.TopRight" />
        <element api="M:System.Windows.CornerRadius.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" />
      </containers>
      <file name="acff8155-d0ab-6876-d7f6-03d01cd46e6a" />
    </api>
    <api id="Methods.T:System.Windows.CornerRadius">
      <topicdata name="CornerRadius" group="list" subgroup="Methods" typeTopicId="T:System.Windows.CornerRadius" />
      <apidata name="CornerRadius" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.CornerRadius.Equals">
          <element api="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)" />
          <element api="M:System.Windows.CornerRadius.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.CornerRadius.GetHashCode" />
        <element api="M:System.Windows.CornerRadius.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" />
      </containers>
      <file name="e1d7169c-07a9-5856-ce53-3415e9c53683" />
    </api>
    <api id="Operators.T:System.Windows.CornerRadius">
      <topicdata name="CornerRadius" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.CornerRadius" />
      <apidata name="CornerRadius" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
        <element api="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" />
      </containers>
      <file name="b86b45f1-1970-c51d-1120-cda3f3453bf0" />
    </api>
    <api id="Properties.T:System.Windows.CornerRadius">
      <topicdata name="CornerRadius" group="list" subgroup="Properties" typeTopicId="T:System.Windows.CornerRadius" />
      <apidata name="CornerRadius" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.CornerRadius.BottomLeft" />
        <element api="P:System.Windows.CornerRadius.BottomRight" />
        <element api="P:System.Windows.CornerRadius.TopLeft" />
        <element api="P:System.Windows.CornerRadius.TopRight" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" />
      </containers>
      <file name="81962d0f-7345-0bbf-b2be-37a8f37ce1e2" />
    </api>
    <api id="Overload:System.Windows.CornerRadius.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.CornerRadius" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.CornerRadius.#ctor(System.Double)" />
        <element api="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="b3923047-5993-a87f-0ec6-08fe664e3a72" />
    </api>
    <api id="Overload:System.Windows.CornerRadius.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.CornerRadius" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)" />
        <element api="M:System.Windows.CornerRadius.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="dda3fc94-81f3-da7a-fe8f-a03127761541" />
    </api>
    <api id="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.CornerRadius.#ctor" />
      <parameters>
        <parameter name="uniformRadius">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="5d172247-6274-863b-0e6d-683a24855579" />
    </api>
    <api id="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.CornerRadius.#ctor" />
      <parameters>
        <parameter name="topLeft">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="topRight">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="bottomRight">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="bottomLeft">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="2ca26ad4-5d8a-ed14-0652-7d70ac869024" />
    </api>
    <api id="P:System.Windows.CornerRadius.BottomLeft">
      <topicdata group="api" />
      <apidata name="BottomLeft" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BottomLeft" />
      <setter name="set_BottomLeft" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="4b28f746-7ee1-b2b5-b767-d00edecb8e5d" />
    </api>
    <api id="P:System.Windows.CornerRadius.BottomRight">
      <topicdata group="api" />
      <apidata name="BottomRight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BottomRight" />
      <setter name="set_BottomRight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="227a56ea-bdf5-c235-dde8-696b05f51cbd" />
    </api>
    <api id="M:System.Windows.CornerRadius.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.CornerRadius.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="cc9eeb9a-e19f-5e57-5160-7edb29e278bb" />
    </api>
    <api id="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.CornerRadius.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cornerRadius">
          <type api="T:System.Windows.CornerRadius" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="13f3277e-8a81-9485-c3b3-cb43b8e287e9" />
    </api>
    <api id="M:System.Windows.CornerRadius.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="c6bd385c-e6bc-1d27-d894-900fd3aeca3a" />
    </api>
    <api id="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cr1">
          <type api="T:System.Windows.CornerRadius" ref="false" />
        </parameter>
        <parameter name="cr2">
          <type api="T:System.Windows.CornerRadius" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="0759fb8a-819f-9daf-4d37-7ab927cf3b85" />
    </api>
    <api id="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cr1">
          <type api="T:System.Windows.CornerRadius" ref="false" />
        </parameter>
        <parameter name="cr2">
          <type api="T:System.Windows.CornerRadius" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="f2cb08d3-e221-ad7b-db49-d650671c4290" />
    </api>
    <api id="P:System.Windows.CornerRadius.TopLeft">
      <topicdata group="api" />
      <apidata name="TopLeft" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TopLeft" />
      <setter name="set_TopLeft" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="11e6e4c4-f111-5b30-7658-168195a35f55" />
    </api>
    <api id="P:System.Windows.CornerRadius.TopRight">
      <topicdata group="api" />
      <apidata name="TopRight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TopRight" />
      <setter name="set_TopRight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="9589102a-0413-7b72-db23-ca197e0dc54e" />
    </api>
    <api id="M:System.Windows.CornerRadius.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </containers>
      <file name="0e79834e-566d-afa2-8469-faae215a36f3" />
    </api>
    <api id="T:System.Windows.DataTemplate">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DataTemplate" />
      <apidata name="DataTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DataTemplate.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.FrameworkTemplate" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="71c03b62-c724-7aba-842b-399b8d4a3a2c" />
    </api>
    <api id="AllMembers.T:System.Windows.DataTemplate">
      <topicdata name="DataTemplate" group="list" subgroup="members" typeTopicId="T:System.Windows.DataTemplate" />
      <apidata name="DataTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DataTemplate.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DataTemplate.#ctor" />
        <element api="M:System.Windows.DataTemplate.LoadContent" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DataTemplate" />
      </containers>
      <file name="0ac0362b-bf52-238e-746e-8edacf5791eb" />
    </api>
    <api id="Methods.T:System.Windows.DataTemplate">
      <topicdata name="DataTemplate" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DataTemplate" />
      <apidata name="DataTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DataTemplate.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DataTemplate.LoadContent" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DataTemplate" />
      </containers>
      <file name="d01e64bb-3139-a7cb-d03c-c49f0594a71a" />
    </api>
    <api id="Properties.T:System.Windows.DataTemplate">
      <topicdata name="DataTemplate" group="list" subgroup="Properties" typeTopicId="T:System.Windows.DataTemplate" />
      <apidata name="DataTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DataTemplate.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DataTemplate" />
      </containers>
      <file name="1cc9c4d0-67c5-0906-658f-dd0600d74c58" />
    </api>
    <api id="M:System.Windows.DataTemplate.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DataTemplate" ref="true" />
      </containers>
      <file name="cf157f87-f08e-5b7d-7215-e56a16a20631" />
    </api>
    <api id="M:System.Windows.DataTemplate.LoadContent">
      <topicdata group="api" />
      <apidata name="LoadContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DataTemplate" ref="true" />
      </containers>
      <file name="090dcb80-70ce-ae9f-23c4-a7eecd142f73" />
    </api>
    <api id="T:System.Windows.DependencyObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.Phone.Shell.ProgressIndicator" ref="true" />
          <type api="T:Microsoft.Phone.Shell.SystemTray" ref="true" />
          <type api="T:System.Windows.Navigation.JournalEntry" ref="true" />
          <type api="T:System.Windows.Controls.MultiScaleSubImage" ref="true" />
          <type api="T:System.Windows.Controls.RowDefinition" ref="true" />
          <type api="T:System.Windows.Controls.ColumnDefinition" ref="true" />
          <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
          <type api="T:Microsoft.Phone.Maps.Controls.MapElement" ref="true" />
          <type api="T:Microsoft.Phone.Maps.Controls.MapOverlay" ref="true" />
          <type api="T:System.Windows.Input.InputMethod" ref="true" />
          <type api="T:System.Windows.Input.InputScope" ref="true" />
          <type api="T:System.Windows.Input.ManipulationDelta" ref="true" />
          <type api="T:System.Windows.Input.TouchDevice" ref="true" />
          <type api="T:System.Windows.Input.TouchPoint" ref="true" />
          <type api="T:System.Windows.Input.ManipulationVelocities" ref="true" />
          <type api="T:System.Windows.Input.InputScopeName" ref="true" />
          <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
          <type api="T:System.Windows.FrameworkTemplate" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Deployment" ref="true" />
          <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
          <type api="T:System.Windows.TriggerBase" ref="true" />
          <type api="T:System.Windows.ExternalPart" ref="true" />
          <type api="T:System.Windows.VisualState" ref="true" />
          <type api="T:System.Windows.VisualStateGroup" ref="true" />
          <type api="T:System.Windows.VisualStateManager" ref="true" />
          <type api="T:System.Windows.VisualTransition" ref="true" />
          <type api="T:System.Windows.ResourceDictionary" ref="true" />
          <type api="T:System.Windows.SetterBase" ref="true" />
          <type api="T:System.Windows.Style" ref="true" />
          <type api="T:System.Windows.TriggerAction" ref="true" />
          <type api="T:System.Windows.AssemblyPart" ref="true" />
          <type api="T:System.Windows.Icon" ref="true" />
          <type api="T:System.Windows.Media.Brush" ref="true" />
          <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
          <type api="T:System.Windows.Media.Geometry" ref="true" />
          <type api="T:System.Windows.Media.PathSegment" ref="true" />
          <type api="T:System.Windows.Media.ImageSource" ref="true" />
          <type api="T:System.Windows.Media.CaptureDevice" ref="true" />
          <type api="T:System.Windows.Media.CaptureSource" ref="true" />
          <type api="T:System.Windows.Media.MultiScaleTileSource" ref="true" />
          <type api="T:System.Windows.Media.PathFigure" ref="true" />
          <type api="T:System.Windows.Media.GradientStop" ref="true" />
          <type api="T:System.Windows.Media.TimelineMarker" ref="true" />
          <type api="T:System.Windows.Media.Projection" ref="true" />
          <type api="T:System.Windows.Media.CacheMode" ref="true" />
          <type api="T:System.Windows.Media.Animation.EasingFunctionBase" ref="true" />
          <type api="T:System.Windows.Media.Animation.ObjectKeyFrame" ref="true" />
          <type api="T:System.Windows.Media.Animation.Timeline" ref="true" />
          <type api="T:System.Windows.Media.Animation.DoubleKeyFrame" ref="true" />
          <type api="T:System.Windows.Media.Animation.PointKeyFrame" ref="true" />
          <type api="T:System.Windows.Media.Animation.ColorKeyFrame" ref="true" />
          <type api="T:System.Windows.Media.Animation.KeySpline" ref="true" />
          <type api="T:System.Windows.Documents.TextElement" ref="true" />
          <type api="T:System.Windows.Ink.Stroke" ref="true" />
          <type api="T:System.Windows.Ink.DrawingAttributes" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="f692e13c-3d63-c8ec-4b17-d83fe908f982" />
    </api>
    <api id="AllMembers.T:System.Windows.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="members" typeTopicId="T:System.Windows.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.#ctor" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" />
      </containers>
      <file name="6acbda99-f7a4-f6e8-1cb8-d99b1f228fce" />
    </api>
    <api id="Methods.T:System.Windows.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" />
      </containers>
      <file name="d04c4c14-a512-6ac9-9426-9b6262b46c91" />
    </api>
    <api id="Properties.T:System.Windows.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="Properties" typeTopicId="T:System.Windows.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" />
      </containers>
      <file name="de11c776-7566-ad12-f94a-c4fb8c6734e3" />
    </api>
    <api id="M:System.Windows.DependencyObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="dea656ba-de50-7697-b7b5-b0ca3e9ed258" />
    </api>
    <api id="M:System.Windows.DependencyObject.CheckAccess">
      <topicdata group="api" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8df38f6f-ffb5-cd6f-c7cd-777a6b6e5891" />
    </api>
    <api id="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="ClearValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="2285908d-9cbf-a7cb-61c8-131278637c09" />
    </api>
    <api id="P:System.Windows.DependencyObject.Dispatcher">
      <topicdata group="api" />
      <apidata name="Dispatcher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Dispatcher" />
      <returns>
        <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f5cb311f-2de9-1588-06ad-55ef6b7300ea" />
    </api>
    <api id="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetAnimationBaseValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="da2396f3-d65f-a9df-6041-82977f174a29" />
    </api>
    <api id="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="f312100e-2838-7a3c-0d06-17994bddee84" />
    </api>
    <api id="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="ReadLocalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="91412862-8b18-0fa4-21a9-733ac33c6324" />
    </api>
    <api id="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </containers>
      <file name="e19f80b1-a735-c52e-a0e4-ad77205f5f7b" />
    </api>
    <api id="T:System.Windows.DependencyObjectCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DependencyObjectCollection`1" />
      <apidata name="DependencyObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DependencyObjectCollection`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="6fd74ee4-be3c-c1c5-dd88-b2acc1e9c489" />
    </api>
    <api id="AllMembers.T:System.Windows.DependencyObjectCollection`1">
      <topicdata name="DependencyObjectCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.DependencyObjectCollection`1" />
      <apidata name="DependencyObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DependencyObjectCollection`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObjectCollection`1.#ctor" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Add(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Clear" />
        <element api="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Contains(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Windows.DependencyObjectCollection`1.Count" />
        <element api="M:System.Windows.DependencyObjectCollection`1.GetEnumerator" />
        <element api="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.DependencyObjectCollection`1.IsReadOnly" />
        <element api="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Remove(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" />
      </containers>
      <file name="2f0d85da-4082-d3b4-095b-ada76746dad6" />
    </api>
    <api id="Methods.T:System.Windows.DependencyObjectCollection`1">
      <topicdata name="DependencyObjectCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DependencyObjectCollection`1" />
      <apidata name="DependencyObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DependencyObjectCollection`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.DependencyObjectCollection`1.Add(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Clear" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Contains(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.GetEnumerator" />
        <element api="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.Remove(`0)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" />
      </containers>
      <file name="4fac1926-256e-ec2e-e92b-144528dd644d" />
    </api>
    <api id="Properties.T:System.Windows.DependencyObjectCollection`1">
      <topicdata name="DependencyObjectCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.DependencyObjectCollection`1" />
      <apidata name="DependencyObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DependencyObjectCollection`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.DependencyObjectCollection`1.Count" />
        <element api="P:System.Windows.DependencyObjectCollection`1.IsReadOnly" />
        <element api="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" />
      </containers>
      <file name="1cb31a8e-f6e6-e37d-888f-670125c2463a" />
    </api>
    <api id="Events.T:System.Windows.DependencyObjectCollection`1">
      <topicdata name="DependencyObjectCollection" group="list" subgroup="Events" typeTopicId="T:System.Windows.DependencyObjectCollection`1" />
      <apidata name="DependencyObjectCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DependencyObjectCollection`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" />
      </containers>
      <file name="5af851fb-cf1c-ae1b-f57e-be5e588755d4" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="6713ed68-41a4-ece5-e16c-c010943c84c7" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="b6d37e8f-8862-9dab-537c-e034c867cdd0" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="c8b6231f-7724-99d2-3dd0-1d5cc787ab81" />
    </api>
    <api id="E:System.Windows.DependencyObjectCollection`1.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="ac48f1b1-2925-95d9-6311-9e4221293cd1" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="d0d553b4-8b77-9798-9cd2-bfdcf2407209" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="63576d37-17a0-fa2d-83e9-3b22f5905b34" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="93ec8b97-fcce-53db-36a7-a1865805762d" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="c91f87c0-c448-a44d-0347-5fe8348faa1b" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="c3d2f2d7-34c2-2f61-8354-2a23503b882c" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="a3bae052-09fa-142d-8b41-feef4fb8ac72" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="4d224330-c9f7-169b-e030-21af1a4fdeef" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="4a14b927-7999-33d3-c62c-a805a2cbfc29" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="9ecf51d5-1eb9-ccfa-4eaf-daeeae6a28b0" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.DependencyObjectCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="e8870529-e40d-f9f3-ef82-f7e856a959e2" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="3aa21b00-9cd0-3071-80a5-43db69fca75b" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="82c2252b-1bc6-4643-555c-e62b7ef93181" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="1e60b823-720c-4637-cfc4-ed3a39f0fb0b" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="a8bf8ed8-c072-df67-0c11-93ac145e53c2" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="da02f623-b969-bf81-d33a-5ad698b744e8" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="9024e5e1-1d05-1507-291c-fb3fd88e3fe2" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="b2a26023-f08b-a924-8879-66edafe86ee7" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="2b695a5f-49ae-770d-535e-a09746efcdeb" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="1aca9abb-48c3-531e-56fc-f8636aa04e93" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="b8db02fc-67b0-e667-7cdd-4536aa5ccca1" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="d59623a1-8f06-55c6-2102-2079db29c23d" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="93e8148f-3b66-0ddc-88f8-2fc08d49bbc8" />
    </api>
    <api id="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="782330cb-a44d-a0cc-a976-a7b24c1e4793" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="09ac2e36-416d-07e7-d347-87a69127017e" />
    </api>
    <api id="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyObjectCollection`1" ref="true" />
      </containers>
      <file name="ac27f487-102d-4ef2-7185-0f14eb09fc25" />
    </api>
    <api id="T:System.Windows.DependencyProperty">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5d84204a-b8f0-dd6d-7e08-dd2b26b736da" />
    </api>
    <api id="AllMembers.T:System.Windows.DependencyProperty">
      <topicdata name="DependencyProperty" group="list" subgroup="members" typeTopicId="T:System.Windows.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />
        <element api="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)" />
        <element api="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)" />
        <element api="F:System.Windows.DependencyProperty.UnsetValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" />
      </containers>
      <file name="4a90feef-5432-c1ac-3d54-6e600df5ad23" />
    </api>
    <api id="Methods.T:System.Windows.DependencyProperty">
      <topicdata name="DependencyProperty" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />
        <element api="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)" />
        <element api="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" />
      </containers>
      <file name="9bd35db1-36f9-6444-27a3-d75cf9323352" />
    </api>
    <api id="Fields.T:System.Windows.DependencyProperty">
      <topicdata name="DependencyProperty" group="list" subgroup="Fields" typeTopicId="T:System.Windows.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.Windows.DependencyProperty.UnsetValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" />
      </containers>
      <file name="141c55c8-443d-cc09-afc8-d2a98cee8d38" />
    </api>
    <api id="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <topicdata group="api" />
      <apidata name="GetMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </containers>
      <file name="4b8d9e05-1510-2e2d-4f7e-2aeaf448c2f9" />
    </api>
    <api id="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="typeMetadata">
          <type api="T:System.Windows.PropertyMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </containers>
      <file name="229a503f-2d03-7170-c260-9f89d619185c" />
    </api>
    <api id="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <topicdata group="api" />
      <apidata name="RegisterAttached" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultMetadata">
          <type api="T:System.Windows.PropertyMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </containers>
      <file name="42f392d4-93ec-8034-f377-521221a8ce3f" />
    </api>
    <api id="F:System.Windows.DependencyProperty.UnsetValue">
      <topicdata group="api" />
      <apidata name="UnsetValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </containers>
      <file name="3d3b7fee-2858-abe7-4194-a62b9a856779" />
    </api>
    <api id="T:System.Windows.DependencyPropertyChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DependencyPropertyChangedEventArgs" />
      <apidata name="DependencyPropertyChangedEventArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="68a1a171-f723-8c0b-6f26-298845125697" />
    </api>
    <api id="AllMembers.T:System.Windows.DependencyPropertyChangedEventArgs">
      <topicdata name="DependencyPropertyChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.DependencyPropertyChangedEventArgs" />
      <apidata name="DependencyPropertyChangedEventArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" />
      </containers>
      <file name="338b4dac-beb5-9b94-898b-6e2c9a00af1f" />
    </api>
    <api id="Methods.T:System.Windows.DependencyPropertyChangedEventArgs">
      <topicdata name="DependencyPropertyChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DependencyPropertyChangedEventArgs" />
      <apidata name="DependencyPropertyChangedEventArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" />
      </containers>
      <file name="a86a62b3-4231-5bc6-8764-1c23efd31415" />
    </api>
    <api id="Properties.T:System.Windows.DependencyPropertyChangedEventArgs">
      <topicdata name="DependencyPropertyChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.DependencyPropertyChangedEventArgs" />
      <apidata name="DependencyPropertyChangedEventArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
        <element api="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" />
      </containers>
      <file name="e007f13d-895b-03ef-a4eb-caf3bd193646" />
    </api>
    <api id="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <topicdata group="api" />
      <apidata name="NewValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
      </containers>
      <file name="7e29cf0a-47a5-23e6-9bf6-9a3aa8e3b294" />
    </api>
    <api id="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <topicdata group="api" />
      <apidata name="OldValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
      </containers>
      <file name="6f52c6df-b6d2-ce58-c733-12e7759656bd" />
    </api>
    <api id="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Property" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
      </containers>
      <file name="9d56fbe1-f984-5aa4-4c11-0015357ee62b" />
    </api>
    <api id="T:System.Windows.DependencyPropertyChangedEventHandler">
      <topicdata group="api" />
      <apidata name="DependencyPropertyChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="2f7bf086-2456-b803-aac7-4cb674a97068" />
    </api>
    <api id="T:System.Windows.Deployment">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Deployment" />
      <apidata name="Deployment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Deployment.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="bcb568e3-df47-d5c2-6966-b184c212a4b8" />
    </api>
    <api id="AllMembers.T:System.Windows.Deployment">
      <topicdata name="Deployment" group="list" subgroup="members" typeTopicId="T:System.Windows.Deployment" />
      <apidata name="Deployment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Deployment.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.Deployment.#ctor" />
        <element api="P:System.Windows.Deployment.Current" />
        <element api="P:System.Windows.Deployment.EntryPointAssembly" />
        <element api="F:System.Windows.Deployment.EntryPointAssemblyProperty" />
        <element api="P:System.Windows.Deployment.EntryPointType" />
        <element api="F:System.Windows.Deployment.EntryPointTypeProperty" />
        <element api="P:System.Windows.Deployment.ExternalParts" />
        <element api="F:System.Windows.Deployment.ExternalPartsProperty" />
        <element api="P:System.Windows.Deployment.Parts" />
        <element api="F:System.Windows.Deployment.PartsProperty" />
        <element api="P:System.Windows.Deployment.RuntimeVersion" />
        <element api="F:System.Windows.Deployment.RuntimeVersionProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" />
      </containers>
      <file name="3933e07c-0c39-4b66-ec8b-288cb1d02a40" />
    </api>
    <api id="Methods.T:System.Windows.Deployment">
      <topicdata name="Deployment" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Deployment" />
      <apidata name="Deployment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Deployment.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" />
      </containers>
      <file name="afabe632-ddb3-0463-aa75-ce39445ff2f0" />
    </api>
    <api id="Properties.T:System.Windows.Deployment">
      <topicdata name="Deployment" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Deployment" />
      <apidata name="Deployment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Deployment.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.Deployment.Current" />
        <element api="P:System.Windows.Deployment.EntryPointAssembly" />
        <element api="P:System.Windows.Deployment.EntryPointType" />
        <element api="P:System.Windows.Deployment.ExternalParts" />
        <element api="P:System.Windows.Deployment.Parts" />
        <element api="P:System.Windows.Deployment.RuntimeVersion" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" />
      </containers>
      <file name="f137e352-6c04-267d-01aa-04f202c71ff1" />
    </api>
    <api id="Fields.T:System.Windows.Deployment">
      <topicdata name="Deployment" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Deployment" />
      <apidata name="Deployment" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Deployment.#ctor" />
      <elements>
        <element api="F:System.Windows.Deployment.EntryPointAssemblyProperty" />
        <element api="F:System.Windows.Deployment.EntryPointTypeProperty" />
        <element api="F:System.Windows.Deployment.ExternalPartsProperty" />
        <element api="F:System.Windows.Deployment.PartsProperty" />
        <element api="F:System.Windows.Deployment.RuntimeVersionProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" />
      </containers>
      <file name="2e9b6066-668d-22ca-dabd-af60cd3722bf" />
    </api>
    <api id="M:System.Windows.Deployment.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="fb4fd590-e9d2-3ff9-e0af-9b15942134bc" />
    </api>
    <api id="P:System.Windows.Deployment.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Windows.Deployment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="32b1a9b6-729f-10e4-9d0a-7d57243bb8ee" />
    </api>
    <api id="P:System.Windows.Deployment.EntryPointAssembly">
      <topicdata group="api" />
      <apidata name="EntryPointAssembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryPointAssembly" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="381f4c8b-ce16-60ed-ca1e-6b36ed3c5c4f" />
    </api>
    <api id="F:System.Windows.Deployment.EntryPointAssemblyProperty">
      <topicdata group="api" />
      <apidata name="EntryPointAssemblyProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="2dacef32-ffd6-b2d5-5655-16c0caf3c763" />
    </api>
    <api id="P:System.Windows.Deployment.EntryPointType">
      <topicdata group="api" />
      <apidata name="EntryPointType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryPointType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="090b0e3e-1b9f-f00e-226c-22d86af233ff" />
    </api>
    <api id="F:System.Windows.Deployment.EntryPointTypeProperty">
      <topicdata group="api" />
      <apidata name="EntryPointTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="26001009-852b-7280-8d1f-9d00242234f5" />
    </api>
    <api id="P:System.Windows.Deployment.ExternalParts">
      <topicdata group="api" />
      <apidata name="ExternalParts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalParts" />
      <returns>
        <type api="T:System.Windows.ExternalPartCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="48fc3bdb-c547-edf8-0425-0dcac3a94765" />
    </api>
    <api id="F:System.Windows.Deployment.ExternalPartsProperty">
      <topicdata group="api" />
      <apidata name="ExternalPartsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="3b646d03-dcd4-456d-f005-21e98a7f3f86" />
    </api>
    <api id="P:System.Windows.Deployment.Parts">
      <topicdata group="api" />
      <apidata name="Parts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parts" />
      <returns>
        <type api="T:System.Windows.AssemblyPartCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="82952505-bd53-9692-456f-4158ce5f8be4" />
    </api>
    <api id="F:System.Windows.Deployment.PartsProperty">
      <topicdata group="api" />
      <apidata name="PartsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="5ce7fd86-c348-92c6-90cc-66c48c47d8b1" />
    </api>
    <api id="P:System.Windows.Deployment.RuntimeVersion">
      <topicdata group="api" />
      <apidata name="RuntimeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RuntimeVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="736bf3b8-ab04-bb28-aa46-ad3e4124ec4c" />
    </api>
    <api id="F:System.Windows.Deployment.RuntimeVersionProperty">
      <topicdata group="api" />
      <apidata name="RuntimeVersionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Deployment" ref="true" />
      </containers>
      <file name="a0fdd67a-1dd1-d3d0-4407-b990271ac835" />
    </api>
    <api id="T:System.Windows.DragEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DragEventArgs" />
      <apidata name="DragEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="47689104-5fce-2ccf-8f6c-030965700157" />
    </api>
    <api id="AllMembers.T:System.Windows.DragEventArgs">
      <topicdata name="DragEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.DragEventArgs" />
      <apidata name="DragEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.DragEventArgs.Data" />
        <element api="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)" />
        <element api="P:System.Windows.DragEventArgs.Handled" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" />
      </containers>
      <file name="1ea969ba-1229-63a0-661d-1f1a579c739a" />
    </api>
    <api id="Methods.T:System.Windows.DragEventArgs">
      <topicdata name="DragEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DragEventArgs" />
      <apidata name="DragEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" />
      </containers>
      <file name="9214b052-d542-7087-101d-5265136e7b5d" />
    </api>
    <api id="Properties.T:System.Windows.DragEventArgs">
      <topicdata name="DragEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.DragEventArgs" />
      <apidata name="DragEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DragEventArgs.Data" />
        <element api="P:System.Windows.DragEventArgs.Handled" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" />
      </containers>
      <file name="418f4b56-a13e-18a1-c496-5b9b89758176" />
    </api>
    <api id="P:System.Windows.DragEventArgs.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <type api="T:System.Windows.IDataObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" ref="true" />
      </containers>
      <file name="3da842e5-0d01-beea-19b6-958446e995a8" />
    </api>
    <api id="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)">
      <topicdata group="api" />
      <apidata name="GetPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relativeTo">
          <type api="T:System.Windows.UIElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Point" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" ref="true" />
      </containers>
      <file name="3a7e717a-d03d-c0e2-a07f-8625851d77cd" />
    </api>
    <api id="P:System.Windows.DragEventArgs.Handled">
      <topicdata group="api" />
      <apidata name="Handled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Handled" />
      <setter name="set_Handled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DragEventArgs" ref="true" />
      </containers>
      <file name="c16bc7ea-ae09-e55b-76ba-564499e79cf8" />
    </api>
    <api id="T:System.Windows.Duration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Duration" />
      <apidata name="Duration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="2cb12209-f4aa-9170-3570-ba89d7b9b70b" />
    </api>
    <api id="AllMembers.T:System.Windows.Duration">
      <topicdata name="Duration" group="list" subgroup="members" typeTopicId="T:System.Windows.Duration" />
      <apidata name="Duration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Duration.#ctor(System.TimeSpan)" />
        <element api="M:System.Windows.Duration.Add(System.Windows.Duration)" />
        <element api="P:System.Windows.Duration.Automatic" />
        <element api="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)" />
        <element api="Overload:System.Windows.Duration.Equals">
          <element api="M:System.Windows.Duration.Equals(System.Windows.Duration)" />
          <element api="M:System.Windows.Duration.Equals(System.Object)" />
          <element api="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)" />
        </element>
        <element api="P:System.Windows.Duration.Forever" />
        <element api="M:System.Windows.Duration.GetHashCode" />
        <element api="P:System.Windows.Duration.HasTimeSpan" />
        <element api="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration" />
        <element api="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.Plus(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.Subtract(System.Windows.Duration)" />
        <element api="P:System.Windows.Duration.TimeSpan" />
        <element api="M:System.Windows.Duration.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" />
      </containers>
      <file name="21098bc8-6c61-2724-3243-d145f1fe44c2" />
    </api>
    <api id="Methods.T:System.Windows.Duration">
      <topicdata name="Duration" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Duration" />
      <apidata name="Duration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Duration.Add(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)" />
        <element api="Overload:System.Windows.Duration.Equals">
          <element api="M:System.Windows.Duration.Equals(System.Windows.Duration)" />
          <element api="M:System.Windows.Duration.Equals(System.Object)" />
          <element api="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)" />
        </element>
        <element api="M:System.Windows.Duration.GetHashCode" />
        <element api="M:System.Windows.Duration.Plus(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.Subtract(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" />
      </containers>
      <file name="9ccb9bb6-df04-a064-c870-1a47e6f7fded" />
    </api>
    <api id="Operators.T:System.Windows.Duration">
      <topicdata name="Duration" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Duration" />
      <apidata name="Duration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration" />
        <element api="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" />
      </containers>
      <file name="aff89cbd-a1d1-dd34-8a22-c57c0603aacf" />
    </api>
    <api id="Properties.T:System.Windows.Duration">
      <topicdata name="Duration" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Duration" />
      <apidata name="Duration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Windows.Duration.Automatic" />
        <element api="P:System.Windows.Duration.Forever" />
        <element api="P:System.Windows.Duration.HasTimeSpan" />
        <element api="P:System.Windows.Duration.TimeSpan" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" />
      </containers>
      <file name="88fbafb6-6142-0f25-c418-1e76139036b5" />
    </api>
    <api id="Overload:System.Windows.Duration.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Duration" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Duration.Equals(System.Windows.Duration)" />
        <element api="M:System.Windows.Duration.Equals(System.Object)" />
        <element api="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="77e2f90e-049e-1540-2684-b5decb7383cf" />
    </api>
    <api id="M:System.Windows.Duration.#ctor(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="timeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="984d8c00-41f9-6805-b1c2-652188ef864e" />
    </api>
    <api id="M:System.Windows.Duration.Add(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="97863635-1232-5b8b-7fcf-7b9bb6812249" />
    </api>
    <api id="P:System.Windows.Duration.Automatic">
      <topicdata group="api" />
      <apidata name="Automatic" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Automatic" />
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="3ba11750-0316-3bd5-c34d-113528374c99" />
    </api>
    <api id="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="2b431e1c-0abc-c55c-39b0-e0674a694520" />
    </api>
    <api id="M:System.Windows.Duration.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Duration.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="6f84586a-01a9-08a9-d826-f946563cc2ad" />
    </api>
    <api id="M:System.Windows.Duration.Equals(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Duration.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="7330d757-5e5b-9377-1930-dc0d4fa95747" />
    </api>
    <api id="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.Duration.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="9a10cf06-1700-a274-bba6-14b08976cd15" />
    </api>
    <api id="P:System.Windows.Duration.Forever">
      <topicdata group="api" />
      <apidata name="Forever" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Forever" />
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="a37bd562-39c7-e4e9-adfb-9d1240666d35" />
    </api>
    <api id="M:System.Windows.Duration.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="b749ddaa-c695-87fa-bf25-c0d3ea41bdef" />
    </api>
    <api id="P:System.Windows.Duration.HasTimeSpan">
      <topicdata group="api" />
      <apidata name="HasTimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasTimeSpan" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="3bd2360b-9118-4aa1-5f7e-c857d3f79bb5" />
    </api>
    <api id="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="fe8193c3-3803-7604-cff0-fd4177160b7b" />
    </api>
    <api id="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="2ee5bf7e-56df-62be-f767-a5ec3fa18435" />
    </api>
    <api id="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="40450643-0cfa-60c7-8cf3-632c08a2b86f" />
    </api>
    <api id="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="ca8e8bd5-5817-65a1-9580-e5c69cf8c6b8" />
    </api>
    <api id="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeSpan">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="30ca9a48-5dbc-dc31-fd5b-7a21960e93fa" />
    </api>
    <api id="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="91d075ac-9656-ca4d-13b2-514e330ce62a" />
    </api>
    <api id="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="09a33270-6296-4195-de82-37f85503e30f" />
    </api>
    <api id="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="c5401d4d-582d-ff79-9990-51002421581a" />
    </api>
    <api id="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="a0ff1cd4-3140-15cf-f513-126df06bfff8" />
    </api>
    <api id="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="29b5b497-ac2b-a81e-a5fa-6fb3502299e8" />
    </api>
    <api id="M:System.Windows.Duration.Plus(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Plus" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="e9c7d1a2-2a52-e37a-32c6-014ad06c5aa5" />
    </api>
    <api id="M:System.Windows.Duration.Subtract(System.Windows.Duration)">
      <topicdata group="api" />
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.Windows.Duration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="e59f7d93-23f9-2acd-fb13-29a97d65eaad" />
    </api>
    <api id="P:System.Windows.Duration.TimeSpan">
      <topicdata group="api" />
      <apidata name="TimeSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeSpan" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="4b689787-7403-1e71-cf06-0730754890bc" />
    </api>
    <api id="M:System.Windows.Duration.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Duration" ref="false" />
      </containers>
      <file name="dfc99c49-9474-5fcd-dd6b-7721ccb4d35a" />
    </api>
    <api id="T:System.Windows.DurationConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.DurationConverter" />
      <apidata name="DurationConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DurationConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="3f76fbee-79ee-d76b-869f-49ac6ebd2255" />
    </api>
    <api id="AllMembers.T:System.Windows.DurationConverter">
      <topicdata name="DurationConverter" group="list" subgroup="members" typeTopicId="T:System.Windows.DurationConverter" />
      <apidata name="DurationConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DurationConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.DurationConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.DurationConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.DurationConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.DurationConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
        <element api="M:System.Windows.DurationConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" />
      </containers>
      <file name="50847731-0397-2160-b996-0b02da5684fc" />
    </api>
    <api id="Methods.T:System.Windows.DurationConverter">
      <topicdata name="DurationConverter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.DurationConverter" />
      <apidata name="DurationConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.DurationConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.DurationConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.DurationConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.DurationConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.DurationConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" />
      </containers>
      <file name="53ca285a-776b-675d-b067-3851197ecd53" />
    </api>
    <api id="Overload:System.Windows.DurationConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.DurationConverter" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" ref="true" />
      </containers>
      <file name="e4ffc150-525c-0ef3-a91c-ebf272b0640c" />
    </api>
    <api id="Overload:System.Windows.DurationConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.DurationConverter" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" ref="true" />
      </containers>
      <file name="43d2e97f-6cf3-dd59-fdbc-2a8034798464" />
    </api>
    <api id="M:System.Windows.DurationConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" ref="true" />
      </containers>
      <file name="ad51b15d-da8e-1f10-6f06-85efb77f3d4a" />
    </api>
    <api id="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.DurationConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" ref="true" />
      </containers>
      <file name="3d7c3e75-733b-63ee-64a0-58a909c69b70" />
    </api>
    <api id="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.DurationConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.DurationConverter" ref="true" />
      </containers>
      <file name="ec89ce14-691d-15bf-2d5b-927a71b2bf4c" />
    </api>
    <api id="T:System.Windows.ElevatedPermissions">
      <topicdata group="api" />
      <apidata name="ElevatedPermissions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.ElevatedPermissions.NotRequired" />
        <element api="F:System.Windows.ElevatedPermissions.Required" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="e7837177-7634-e467-61ea-32efd3edadf0" />
    </api>
    <api id="F:System.Windows.ElevatedPermissions.NotRequired">
      <topicdata group="api" notopic="" />
      <apidata name="NotRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.ElevatedPermissions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ElevatedPermissions" ref="false" />
      </containers>
      <file name="67513e35-c67b-558d-f575-cbe816a487e1" />
    </api>
    <api id="F:System.Windows.ElevatedPermissions.Required">
      <topicdata group="api" notopic="" />
      <apidata name="Required" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.ElevatedPermissions" ref="false" />
      </returns>
      <value>2147483647</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ElevatedPermissions" ref="false" />
      </containers>
      <file name="1919bf1d-9e88-8390-ff7d-70b9797e57f2" />
    </api>
    <api id="T:System.Windows.EventTrigger">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.EventTrigger" />
      <apidata name="EventTrigger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.EventTrigger.#ctor" contentProperty="P:System.Windows.EventTrigger.Actions" />
      <family>
        <ancestors>
          <type api="T:System.Windows.TriggerBase" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Actions</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="48f84170-70b3-4eca-f94d-0805adec2212" />
    </api>
    <api id="AllMembers.T:System.Windows.EventTrigger">
      <topicdata name="EventTrigger" group="list" subgroup="members" typeTopicId="T:System.Windows.EventTrigger" />
      <apidata name="EventTrigger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.EventTrigger.#ctor" contentProperty="P:System.Windows.EventTrigger.Actions" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.EventTrigger.#ctor" />
        <element api="P:System.Windows.EventTrigger.Actions" />
        <element api="P:System.Windows.EventTrigger.RoutedEvent" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" />
      </containers>
      <file name="cae854e0-2d64-6c60-1310-bad24c9c8bcc" />
    </api>
    <api id="Methods.T:System.Windows.EventTrigger">
      <topicdata name="EventTrigger" group="list" subgroup="Methods" typeTopicId="T:System.Windows.EventTrigger" />
      <apidata name="EventTrigger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.EventTrigger.#ctor" contentProperty="P:System.Windows.EventTrigger.Actions" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" />
      </containers>
      <file name="b68cee3e-f9ef-7b25-85c5-b97f6a65a10d" />
    </api>
    <api id="Properties.T:System.Windows.EventTrigger">
      <topicdata name="EventTrigger" group="list" subgroup="Properties" typeTopicId="T:System.Windows.EventTrigger" />
      <apidata name="EventTrigger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.EventTrigger.#ctor" contentProperty="P:System.Windows.EventTrigger.Actions" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.EventTrigger.Actions" />
        <element api="P:System.Windows.EventTrigger.RoutedEvent" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" />
      </containers>
      <file name="81bcf7dc-a3e1-a53e-7077-c8d7acbcfcdf" />
    </api>
    <api id="M:System.Windows.EventTrigger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" ref="true" />
      </containers>
      <file name="f71a3e2a-5581-d4b4-aea7-7ca913c1c310" />
    </api>
    <api id="P:System.Windows.EventTrigger.Actions">
      <topicdata group="api" />
      <apidata name="Actions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Actions" />
      <returns>
        <type api="T:System.Windows.TriggerActionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" ref="true" />
      </containers>
      <file name="4da6867b-5975-1f55-0934-79be5a9a2fa3" />
    </api>
    <api id="P:System.Windows.EventTrigger.RoutedEvent">
      <topicdata group="api" />
      <apidata name="RoutedEvent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoutedEvent" />
      <setter name="set_RoutedEvent" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.EventTrigger" ref="true" />
      </containers>
      <file name="9230637a-9c14-1287-32a3-fc47222424bf" />
    </api>
    <api id="T:System.Windows.ExceptionRoutedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ExceptionRoutedEventArgs" />
      <apidata name="ExceptionRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.MediaFailedRoutedEventArgs" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="72719d9b-f727-82c9-d295-371d7ca1aff6" />
    </api>
    <api id="AllMembers.T:System.Windows.ExceptionRoutedEventArgs">
      <topicdata name="ExceptionRoutedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.ExceptionRoutedEventArgs" />
      <apidata name="ExceptionRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.ExceptionRoutedEventArgs.ErrorException" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExceptionRoutedEventArgs" />
      </containers>
      <file name="d9d33561-7bc3-ea4c-2b6b-4296ba8f4abc" />
    </api>
    <api id="Methods.T:System.Windows.ExceptionRoutedEventArgs">
      <topicdata name="ExceptionRoutedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ExceptionRoutedEventArgs" />
      <apidata name="ExceptionRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExceptionRoutedEventArgs" />
      </containers>
      <file name="b60535eb-1a23-0a5f-4d32-d4202471960b" />
    </api>
    <api id="Properties.T:System.Windows.ExceptionRoutedEventArgs">
      <topicdata name="ExceptionRoutedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ExceptionRoutedEventArgs" />
      <apidata name="ExceptionRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.ExceptionRoutedEventArgs.ErrorException" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExceptionRoutedEventArgs" />
      </containers>
      <file name="7cb186c4-d605-fb55-01d2-cd8a63b91a36" />
    </api>
    <api id="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <topicdata group="api" />
      <apidata name="ErrorException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExceptionRoutedEventArgs" ref="true" />
      </containers>
      <file name="a88970e6-9e4d-807b-3f29-2101b5d9bbfb" />
    </api>
    <api id="T:System.Windows.ExceptionRoutedEventHandler">
      <topicdata group="api" />
      <apidata name="ExceptionRoutedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.ExceptionRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c5b5745a-3d29-0480-b0f3-d325ec0b70e5" />
    </api>
    <api id="T:System.Windows.Expression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          <type api="T:System.Windows.TemplateBindingExpression" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="88348b75-cc29-f131-53c4-76c001f2ceb7" />
    </api>
    <api id="AllMembers.T:System.Windows.Expression">
      <topicdata name="Expression" group="list" subgroup="members" typeTopicId="T:System.Windows.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Expression" />
      </containers>
      <file name="99f13020-6742-55ce-7f7f-b3de469db6ff" />
    </api>
    <api id="Methods.T:System.Windows.Expression">
      <topicdata name="Expression" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Expression" />
      <apidata name="Expression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Expression" />
      </containers>
      <file name="f62e5175-2a76-e68a-bfff-26df4c2175d6" />
    </api>
    <api id="T:System.Windows.ExtensionPart">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ExtensionPart" />
      <apidata name="ExtensionPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExtensionPart.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.ExternalPart" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="586b0360-6cd5-31f3-aae1-f09aacc39161" />
    </api>
    <api id="AllMembers.T:System.Windows.ExtensionPart">
      <topicdata name="ExtensionPart" group="list" subgroup="members" typeTopicId="T:System.Windows.ExtensionPart" />
      <apidata name="ExtensionPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExtensionPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.ExtensionPart.#ctor" />
        <element api="P:System.Windows.ExtensionPart.Source" />
        <element api="F:System.Windows.ExtensionPart.SourceProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" />
      </containers>
      <file name="02c5531a-845c-1f66-2af5-c64c12b5ec6d" />
    </api>
    <api id="Methods.T:System.Windows.ExtensionPart">
      <topicdata name="ExtensionPart" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ExtensionPart" />
      <apidata name="ExtensionPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExtensionPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" />
      </containers>
      <file name="8a61d818-3b7d-f303-c176-230a60e7d562" />
    </api>
    <api id="Properties.T:System.Windows.ExtensionPart">
      <topicdata name="ExtensionPart" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ExtensionPart" />
      <apidata name="ExtensionPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExtensionPart.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.ExtensionPart.Source" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" />
      </containers>
      <file name="b0e64f92-d101-3831-3fae-06856683d2b9" />
    </api>
    <api id="Fields.T:System.Windows.ExtensionPart">
      <topicdata name="ExtensionPart" group="list" subgroup="Fields" typeTopicId="T:System.Windows.ExtensionPart" />
      <apidata name="ExtensionPart" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExtensionPart.#ctor" />
      <elements>
        <element api="F:System.Windows.ExtensionPart.SourceProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" />
      </containers>
      <file name="c1efb34c-711b-8689-eef8-836db4a1ff61" />
    </api>
    <api id="M:System.Windows.ExtensionPart.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" ref="true" />
      </containers>
      <file name="c2d434c5-95dd-e97a-9469-975d8908dbe2" />
    </api>
    <api id="P:System.Windows.ExtensionPart.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.ExternalPart.Source">
          <type api="T:System.Windows.ExternalPart" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" ref="true" />
      </containers>
      <file name="84484ea1-0546-7d8f-3090-f4d53fc9a089" />
    </api>
    <api id="F:System.Windows.ExtensionPart.SourceProperty">
      <topicdata group="api" />
      <apidata name="SourceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExtensionPart" ref="true" />
      </containers>
      <file name="e80cc5b5-18c7-3f06-9b4d-d6e73ea32dbd" />
    </api>
    <api id="T:System.Windows.ExternalPart">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ExternalPart" />
      <apidata name="ExternalPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ExternalPart.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.ExtensionPart" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="75fbf6f8-04a4-af0e-31d4-25752c1a4da9" />
    </api>
    <api id="AllMembers.T:System.Windows.ExternalPart">
      <topicdata name="ExternalPart" group="list" subgroup="members" typeTopicId="T:System.Windows.ExternalPart" />
      <apidata name="ExternalPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ExternalPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.ExternalPart.#ctor" />
        <element api="P:System.Windows.ExternalPart.Source" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPart" />
      </containers>
      <file name="608ecedf-e851-fe02-240b-200f03f2cdde" />
    </api>
    <api id="Methods.T:System.Windows.ExternalPart">
      <topicdata name="ExternalPart" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ExternalPart" />
      <apidata name="ExternalPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ExternalPart.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPart" />
      </containers>
      <file name="4897d69e-d386-18fb-9b3c-9d082a9cf896" />
    </api>
    <api id="Properties.T:System.Windows.ExternalPart">
      <topicdata name="ExternalPart" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ExternalPart" />
      <apidata name="ExternalPart" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ExternalPart.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.ExternalPart.Source" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPart" />
      </containers>
      <file name="66b1ddf9-144a-9fbb-7037-b9299c56b38e" />
    </api>
    <api id="M:System.Windows.ExternalPart.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPart" ref="true" />
      </containers>
      <file name="19822121-1093-9136-78bb-816c0e55e399" />
    </api>
    <api id="P:System.Windows.ExternalPart.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPart" ref="true" />
      </containers>
      <file name="c4271757-86d4-d44a-b57d-14209227f7b9" />
    </api>
    <api id="T:System.Windows.ExternalPartCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ExternalPartCollection" />
      <apidata name="ExternalPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExternalPartCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.ExternalPart" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="8bb33d3c-6201-5567-e736-70146aab753d" />
    </api>
    <api id="AllMembers.T:System.Windows.ExternalPartCollection">
      <topicdata name="ExternalPartCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.ExternalPartCollection" />
      <apidata name="ExternalPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExternalPartCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.ExternalPartCollection.#ctor" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.ExternalPartCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPartCollection" />
      </containers>
      <file name="1c7acf6f-5c3e-b8b3-47f5-17dcb0a402fc" />
    </api>
    <api id="Methods.T:System.Windows.ExternalPartCollection">
      <topicdata name="ExternalPartCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ExternalPartCollection" />
      <apidata name="ExternalPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExternalPartCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.ExternalPartCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPartCollection" />
      </containers>
      <file name="b112b47d-a62c-6c1b-77f5-26b13eed9cdc" />
    </api>
    <api id="Properties.T:System.Windows.ExternalPartCollection">
      <topicdata name="ExternalPartCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ExternalPartCollection" />
      <apidata name="ExternalPartCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.ExternalPartCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPartCollection" />
      </containers>
      <file name="acd0c3c1-839b-1e60-5b3b-687e9ce84cb3" />
    </api>
    <api id="M:System.Windows.ExternalPartCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ExternalPartCollection" ref="true" />
      </containers>
      <file name="a07ba3bb-014a-f63c-8f97-850b5b2e22e3" />
    </api>
    <api id="T:System.Windows.FlowDirection">
      <topicdata group="api" />
      <apidata name="FlowDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FlowDirection.LeftToRight" />
        <element api="F:System.Windows.FlowDirection.RightToLeft" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="fb3d1d3f-cccf-7789-3f0b-7cb823e3eb74" />
    </api>
    <api id="F:System.Windows.FlowDirection.LeftToRight">
      <topicdata group="api" notopic="" />
      <apidata name="LeftToRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FlowDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FlowDirection" ref="false" />
      </containers>
      <file name="5660c447-7ed4-d56c-1168-930517a070f0" />
    </api>
    <api id="F:System.Windows.FlowDirection.RightToLeft">
      <topicdata group="api" notopic="" />
      <apidata name="RightToLeft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FlowDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FlowDirection" ref="false" />
      </containers>
      <file name="44fec840-4b5f-3e5c-3832-bebff29f5234" />
    </api>
    <api id="T:System.Windows.FontCapitals">
      <topicdata group="api" />
      <apidata name="FontCapitals" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontCapitals.Normal" />
        <element api="F:System.Windows.FontCapitals.AllSmallCaps" />
        <element api="F:System.Windows.FontCapitals.SmallCaps" />
        <element api="F:System.Windows.FontCapitals.AllPetiteCaps" />
        <element api="F:System.Windows.FontCapitals.PetiteCaps" />
        <element api="F:System.Windows.FontCapitals.Unicase" />
        <element api="F:System.Windows.FontCapitals.Titling" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="0a08a8ed-8425-bb13-b085-f8aa080c6d4b" />
    </api>
    <api id="F:System.Windows.FontCapitals.AllPetiteCaps">
      <topicdata group="api" notopic="" />
      <apidata name="AllPetiteCaps" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="1808ede4-aedc-3c3a-9234-de6c7266ea38" />
    </api>
    <api id="F:System.Windows.FontCapitals.AllSmallCaps">
      <topicdata group="api" notopic="" />
      <apidata name="AllSmallCaps" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="cdd1b1ac-45aa-b154-1278-b6753c0fca72" />
    </api>
    <api id="F:System.Windows.FontCapitals.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="f3b172e6-1ca6-0968-da37-88f2f1df40c2" />
    </api>
    <api id="F:System.Windows.FontCapitals.PetiteCaps">
      <topicdata group="api" notopic="" />
      <apidata name="PetiteCaps" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="69e0a226-222a-5d46-196e-6fc814e14e39" />
    </api>
    <api id="F:System.Windows.FontCapitals.SmallCaps">
      <topicdata group="api" notopic="" />
      <apidata name="SmallCaps" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="a08943ad-3726-2bf9-2a2a-7687750761e0" />
    </api>
    <api id="F:System.Windows.FontCapitals.Titling">
      <topicdata group="api" notopic="" />
      <apidata name="Titling" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="cf493cbb-b65e-0e3d-c93a-ad2741fcdd39" />
    </api>
    <api id="F:System.Windows.FontCapitals.Unicase">
      <topicdata group="api" notopic="" />
      <apidata name="Unicase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontCapitals" ref="false" />
      </containers>
      <file name="a711885f-9fae-9f64-a225-ca351283e409" />
    </api>
    <api id="T:System.Windows.FontEastAsianLanguage">
      <topicdata group="api" />
      <apidata name="FontEastAsianLanguage" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontEastAsianLanguage.Normal" />
        <element api="F:System.Windows.FontEastAsianLanguage.HojoKanji" />
        <element api="F:System.Windows.FontEastAsianLanguage.Jis04" />
        <element api="F:System.Windows.FontEastAsianLanguage.Jis78" />
        <element api="F:System.Windows.FontEastAsianLanguage.Jis83" />
        <element api="F:System.Windows.FontEastAsianLanguage.Jis90" />
        <element api="F:System.Windows.FontEastAsianLanguage.NlcKanji" />
        <element api="F:System.Windows.FontEastAsianLanguage.Simplified" />
        <element api="F:System.Windows.FontEastAsianLanguage.Traditional" />
        <element api="F:System.Windows.FontEastAsianLanguage.TraditionalNames" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="f4d7cd58-6fda-9df6-c172-b576e4d5a9cd" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.HojoKanji">
      <topicdata group="api" notopic="" />
      <apidata name="HojoKanji" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="46dd9496-975b-7e28-c2fe-1f42cca9f0d2" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Jis04">
      <topicdata group="api" notopic="" />
      <apidata name="Jis04" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="e338007d-dea2-6ff9-4d75-b64ab18378fb" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Jis78">
      <topicdata group="api" notopic="" />
      <apidata name="Jis78" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="7ceb5fe6-2801-1650-dd39-141c9462f4a6" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Jis83">
      <topicdata group="api" notopic="" />
      <apidata name="Jis83" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="f9273578-0953-33f6-2226-f06a390cbfbb" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Jis90">
      <topicdata group="api" notopic="" />
      <apidata name="Jis90" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="aae673be-6fe2-4ef8-01cf-a4342219e706" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.NlcKanji">
      <topicdata group="api" notopic="" />
      <apidata name="NlcKanji" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="28034d92-7b45-55f6-f99e-8c0c25ffcf7b" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="cf1c8afc-7fbc-66d7-8c13-f0e94ddaab38" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Simplified">
      <topicdata group="api" notopic="" />
      <apidata name="Simplified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="20e61f42-99b9-590e-7a0a-7a792b5f7447" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.Traditional">
      <topicdata group="api" notopic="" />
      <apidata name="Traditional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="b8522cb4-8b7a-1301-ba1c-f4ccb7e1e660" />
    </api>
    <api id="F:System.Windows.FontEastAsianLanguage.TraditionalNames">
      <topicdata group="api" notopic="" />
      <apidata name="TraditionalNames" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianLanguage" ref="false" />
      </containers>
      <file name="5dbe665b-0649-ffc0-ac06-b7466d55b219" />
    </api>
    <api id="T:System.Windows.FontEastAsianWidths">
      <topicdata group="api" />
      <apidata name="FontEastAsianWidths" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontEastAsianWidths.Normal" />
        <element api="F:System.Windows.FontEastAsianWidths.Full" />
        <element api="F:System.Windows.FontEastAsianWidths.Half" />
        <element api="F:System.Windows.FontEastAsianWidths.Proportional" />
        <element api="F:System.Windows.FontEastAsianWidths.Quarter" />
        <element api="F:System.Windows.FontEastAsianWidths.Third" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="6cc07c9c-5930-ba5f-c3cc-26ef26655bf2" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Full">
      <topicdata group="api" notopic="" />
      <apidata name="Full" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="412b9e3d-bf61-889e-8b23-8d10fec0ae1a" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Half">
      <topicdata group="api" notopic="" />
      <apidata name="Half" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="72c80285-a51f-c138-f167-a332653ceee0" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="31ebcfbf-4fae-c9b2-4f2b-6a30a49f9501" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Proportional">
      <topicdata group="api" notopic="" />
      <apidata name="Proportional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="71856d40-cab6-8d13-01c4-3433136ac9eb" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Quarter">
      <topicdata group="api" notopic="" />
      <apidata name="Quarter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="bc7e6145-ab46-c9c9-e189-4c77a53cd7c9" />
    </api>
    <api id="F:System.Windows.FontEastAsianWidths.Third">
      <topicdata group="api" notopic="" />
      <apidata name="Third" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontEastAsianWidths" ref="false" />
      </containers>
      <file name="c56ae0fa-880b-f788-c084-1061f0a7e665" />
    </api>
    <api id="T:System.Windows.FontFraction">
      <topicdata group="api" />
      <apidata name="FontFraction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontFraction.Normal" />
        <element api="F:System.Windows.FontFraction.Stacked" />
        <element api="F:System.Windows.FontFraction.Slashed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="4a5d70a1-029c-ad23-2a2d-1e3cf2edf403" />
    </api>
    <api id="F:System.Windows.FontFraction.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontFraction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontFraction" ref="false" />
      </containers>
      <file name="a90f976c-0399-7d1a-1925-9f9dc43d6e4d" />
    </api>
    <api id="F:System.Windows.FontFraction.Slashed">
      <topicdata group="api" notopic="" />
      <apidata name="Slashed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontFraction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontFraction" ref="false" />
      </containers>
      <file name="633ea489-bd73-f2c6-043f-a98556c5fc4e" />
    </api>
    <api id="F:System.Windows.FontFraction.Stacked">
      <topicdata group="api" notopic="" />
      <apidata name="Stacked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontFraction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontFraction" ref="false" />
      </containers>
      <file name="53032dd8-38b0-d82a-5a9c-39759da1f130" />
    </api>
    <api id="T:System.Windows.FontNumeralAlignment">
      <topicdata group="api" />
      <apidata name="FontNumeralAlignment" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontNumeralAlignment.Normal" />
        <element api="F:System.Windows.FontNumeralAlignment.Proportional" />
        <element api="F:System.Windows.FontNumeralAlignment.Tabular" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="3abfd6ed-3516-2ad6-c6f0-5f557ba1dc9f" />
    </api>
    <api id="F:System.Windows.FontNumeralAlignment.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </containers>
      <file name="821898c4-a31d-e90a-87be-d5c51cc78f2b" />
    </api>
    <api id="F:System.Windows.FontNumeralAlignment.Proportional">
      <topicdata group="api" notopic="" />
      <apidata name="Proportional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </containers>
      <file name="b3c33571-7c24-bac7-c1fc-7c2dd0e03637" />
    </api>
    <api id="F:System.Windows.FontNumeralAlignment.Tabular">
      <topicdata group="api" notopic="" />
      <apidata name="Tabular" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralAlignment" ref="false" />
      </containers>
      <file name="00198c44-110d-c4f3-7a4b-59d6f79fed19" />
    </api>
    <api id="T:System.Windows.FontNumeralStyle">
      <topicdata group="api" />
      <apidata name="FontNumeralStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontNumeralStyle.Normal" />
        <element api="F:System.Windows.FontNumeralStyle.Lining" />
        <element api="F:System.Windows.FontNumeralStyle.OldStyle" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="3ec4e045-f23e-5625-2ab6-b1e3eb2f16c1" />
    </api>
    <api id="F:System.Windows.FontNumeralStyle.Lining">
      <topicdata group="api" notopic="" />
      <apidata name="Lining" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </containers>
      <file name="1635fcf5-bf00-fa2e-5458-9a52d4d9ebf9" />
    </api>
    <api id="F:System.Windows.FontNumeralStyle.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </containers>
      <file name="95ee034c-edde-1e2d-eb76-8b252461b603" />
    </api>
    <api id="F:System.Windows.FontNumeralStyle.OldStyle">
      <topicdata group="api" notopic="" />
      <apidata name="OldStyle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontNumeralStyle" ref="false" />
      </containers>
      <file name="cb051a2e-f5eb-edb9-8766-7b2ee43dbd51" />
    </api>
    <api id="T:System.Windows.FontStretch">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontStretch" />
      <apidata name="FontStretch" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="93d0a8e8-9821-649f-27fd-22abc31a89b0" />
    </api>
    <api id="AllMembers.T:System.Windows.FontStretch">
      <topicdata name="FontStretch" group="list" subgroup="members" typeTopicId="T:System.Windows.FontStretch" />
      <apidata name="FontStretch" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontStretch.Equals(System.Object)" />
        <element api="M:System.Windows.FontStretch.GetHashCode" />
        <element api="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)" />
        <element api="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)" />
        <element api="M:System.Windows.FontStretch.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" />
      </containers>
      <file name="7f9012d1-9daa-a6ad-5860-85e7d59c3360" />
    </api>
    <api id="Methods.T:System.Windows.FontStretch">
      <topicdata name="FontStretch" group="list" subgroup="Methods" typeTopicId="T:System.Windows.FontStretch" />
      <apidata name="FontStretch" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontStretch.Equals(System.Object)" />
        <element api="M:System.Windows.FontStretch.GetHashCode" />
        <element api="M:System.Windows.FontStretch.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" />
      </containers>
      <file name="50abd350-4d60-bbf2-a878-785dd404261c" />
    </api>
    <api id="Operators.T:System.Windows.FontStretch">
      <topicdata name="FontStretch" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.FontStretch" />
      <apidata name="FontStretch" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)" />
        <element api="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" />
      </containers>
      <file name="cc9a86ef-9a16-7241-0252-29e81657e9c0" />
    </api>
    <api id="M:System.Windows.FontStretch.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" ref="false" />
      </containers>
      <file name="ee691bc1-7ae6-7790-e681-771f7a946a60" />
    </api>
    <api id="M:System.Windows.FontStretch.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" ref="false" />
      </containers>
      <file name="738e8f2a-0dbf-da14-b7db-919ef7c85fc8" />
    </api>
    <api id="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontStretch" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontStretch" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" ref="false" />
      </containers>
      <file name="3b9492dd-2308-160e-6aaa-d3c61775ee63" />
    </api>
    <api id="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontStretch" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontStretch" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" ref="false" />
      </containers>
      <file name="1593ec98-8267-edea-d07b-4482c9b3f7f8" />
    </api>
    <api id="M:System.Windows.FontStretch.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretch" ref="false" />
      </containers>
      <file name="5b06c563-bde0-f650-38ae-fca800336c46" />
    </api>
    <api id="T:System.Windows.FontStretches">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontStretches" />
      <apidata name="FontStretches" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="94b41125-818c-ac7a-cf1f-a14416b58adb" />
    </api>
    <api id="AllMembers.T:System.Windows.FontStretches">
      <topicdata name="FontStretches" group="list" subgroup="members" typeTopicId="T:System.Windows.FontStretches" />
      <apidata name="FontStretches" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontStretches.Condensed" />
        <element api="P:System.Windows.FontStretches.Expanded" />
        <element api="P:System.Windows.FontStretches.ExtraCondensed" />
        <element api="P:System.Windows.FontStretches.ExtraExpanded" />
        <element api="P:System.Windows.FontStretches.Normal" />
        <element api="P:System.Windows.FontStretches.SemiCondensed" />
        <element api="P:System.Windows.FontStretches.SemiExpanded" />
        <element api="P:System.Windows.FontStretches.UltraCondensed" />
        <element api="P:System.Windows.FontStretches.UltraExpanded" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" />
      </containers>
      <file name="4022b1c6-19f9-4515-0895-d0015bb988a7" />
    </api>
    <api id="Properties.T:System.Windows.FontStretches">
      <topicdata name="FontStretches" group="list" subgroup="Properties" typeTopicId="T:System.Windows.FontStretches" />
      <apidata name="FontStretches" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontStretches.Condensed" />
        <element api="P:System.Windows.FontStretches.Expanded" />
        <element api="P:System.Windows.FontStretches.ExtraCondensed" />
        <element api="P:System.Windows.FontStretches.ExtraExpanded" />
        <element api="P:System.Windows.FontStretches.Normal" />
        <element api="P:System.Windows.FontStretches.SemiCondensed" />
        <element api="P:System.Windows.FontStretches.SemiExpanded" />
        <element api="P:System.Windows.FontStretches.UltraCondensed" />
        <element api="P:System.Windows.FontStretches.UltraExpanded" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" />
      </containers>
      <file name="5e4493b8-5a59-d812-87d4-c1382c289ace" />
    </api>
    <api id="P:System.Windows.FontStretches.Condensed">
      <topicdata group="api" />
      <apidata name="Condensed" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Condensed" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="0e1279bb-29a6-8a55-687f-2520414b1018" />
    </api>
    <api id="P:System.Windows.FontStretches.Expanded">
      <topicdata group="api" />
      <apidata name="Expanded" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expanded" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="a372c9e9-cbe3-8710-a599-0299f382d7de" />
    </api>
    <api id="P:System.Windows.FontStretches.ExtraCondensed">
      <topicdata group="api" />
      <apidata name="ExtraCondensed" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtraCondensed" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="12ce8d5e-ffcd-bd57-8d3c-b418f939c878" />
    </api>
    <api id="P:System.Windows.FontStretches.ExtraExpanded">
      <topicdata group="api" />
      <apidata name="ExtraExpanded" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtraExpanded" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="7f2fd3aa-92de-608b-4735-e9369867d09e" />
    </api>
    <api id="P:System.Windows.FontStretches.Normal">
      <topicdata group="api" />
      <apidata name="Normal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Normal" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="867798e4-a182-7e8c-4d31-1b2be0bccabe" />
    </api>
    <api id="P:System.Windows.FontStretches.SemiCondensed">
      <topicdata group="api" />
      <apidata name="SemiCondensed" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SemiCondensed" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="a090f5ab-6087-52ea-03f6-bf21574f0ff9" />
    </api>
    <api id="P:System.Windows.FontStretches.SemiExpanded">
      <topicdata group="api" />
      <apidata name="SemiExpanded" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SemiExpanded" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="e904cf4d-4332-f63c-dba6-3679ded96184" />
    </api>
    <api id="P:System.Windows.FontStretches.UltraCondensed">
      <topicdata group="api" />
      <apidata name="UltraCondensed" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UltraCondensed" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="e9768cd6-87e1-3b9d-d4cb-47b865b4907c" />
    </api>
    <api id="P:System.Windows.FontStretches.UltraExpanded">
      <topicdata group="api" />
      <apidata name="UltraExpanded" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UltraExpanded" />
      <returns>
        <type api="T:System.Windows.FontStretch" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStretches" ref="true" />
      </containers>
      <file name="e4f5b061-a779-142a-58bc-20224a6269ab" />
    </api>
    <api id="T:System.Windows.FontStyle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontStyle" />
      <apidata name="FontStyle" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="e3b9b22a-013c-f499-6c69-72551c4c2ba7" />
    </api>
    <api id="AllMembers.T:System.Windows.FontStyle">
      <topicdata name="FontStyle" group="list" subgroup="members" typeTopicId="T:System.Windows.FontStyle" />
      <apidata name="FontStyle" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontStyle.Equals(System.Object)" />
        <element api="M:System.Windows.FontStyle.GetHashCode" />
        <element api="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)" />
        <element api="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)" />
        <element api="M:System.Windows.FontStyle.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" />
      </containers>
      <file name="99813515-38c8-bdc6-f8af-bddcfbddcb04" />
    </api>
    <api id="Methods.T:System.Windows.FontStyle">
      <topicdata name="FontStyle" group="list" subgroup="Methods" typeTopicId="T:System.Windows.FontStyle" />
      <apidata name="FontStyle" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontStyle.Equals(System.Object)" />
        <element api="M:System.Windows.FontStyle.GetHashCode" />
        <element api="M:System.Windows.FontStyle.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" />
      </containers>
      <file name="5ff9c3f7-1799-8384-195f-6ddb80096be9" />
    </api>
    <api id="Operators.T:System.Windows.FontStyle">
      <topicdata name="FontStyle" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.FontStyle" />
      <apidata name="FontStyle" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)" />
        <element api="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" />
      </containers>
      <file name="5edf2588-70c5-9e4d-d910-22bf80fb9447" />
    </api>
    <api id="M:System.Windows.FontStyle.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" ref="false" />
      </containers>
      <file name="763812ce-507a-b274-c96a-ee3fe115fb1c" />
    </api>
    <api id="M:System.Windows.FontStyle.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" ref="false" />
      </containers>
      <file name="1544a87f-8d04-0ab0-7476-991b79f768f7" />
    </api>
    <api id="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontStyle" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontStyle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" ref="false" />
      </containers>
      <file name="03c600ad-b1ac-502d-40c7-1c1f6dbb262a" />
    </api>
    <api id="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontStyle" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontStyle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" ref="false" />
      </containers>
      <file name="5738b481-f1b1-bd79-4b58-45d91a5437af" />
    </api>
    <api id="M:System.Windows.FontStyle.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyle" ref="false" />
      </containers>
      <file name="456f93d1-267c-7892-5ebe-2cd30d086bba" />
    </api>
    <api id="T:System.Windows.FontStyles">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontStyles" />
      <apidata name="FontStyles" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="b4134180-995b-a55b-fd1b-8290f97f0169" />
    </api>
    <api id="AllMembers.T:System.Windows.FontStyles">
      <topicdata name="FontStyles" group="list" subgroup="members" typeTopicId="T:System.Windows.FontStyles" />
      <apidata name="FontStyles" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontStyles.Italic" />
        <element api="P:System.Windows.FontStyles.Normal" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyles" />
      </containers>
      <file name="8cedb445-f34e-78dc-47ca-e197f1551651" />
    </api>
    <api id="Properties.T:System.Windows.FontStyles">
      <topicdata name="FontStyles" group="list" subgroup="Properties" typeTopicId="T:System.Windows.FontStyles" />
      <apidata name="FontStyles" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontStyles.Italic" />
        <element api="P:System.Windows.FontStyles.Normal" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyles" />
      </containers>
      <file name="6a51dbe0-1750-4b19-931d-b0cd4b1922db" />
    </api>
    <api id="P:System.Windows.FontStyles.Italic">
      <topicdata group="api" />
      <apidata name="Italic" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Italic" />
      <returns>
        <type api="T:System.Windows.FontStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyles" ref="true" />
      </containers>
      <file name="1dd7ab28-4145-e5a5-38f7-f616fbe1c10f" />
    </api>
    <api id="P:System.Windows.FontStyles.Normal">
      <topicdata group="api" />
      <apidata name="Normal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Normal" />
      <returns>
        <type api="T:System.Windows.FontStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontStyles" ref="true" />
      </containers>
      <file name="ebb05d7b-3310-a372-d51d-9e050e82a7fe" />
    </api>
    <api id="T:System.Windows.FontVariants">
      <topicdata group="api" />
      <apidata name="FontVariants" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FontVariants.Normal" />
        <element api="F:System.Windows.FontVariants.Superscript" />
        <element api="F:System.Windows.FontVariants.Subscript" />
        <element api="F:System.Windows.FontVariants.Ordinal" />
        <element api="F:System.Windows.FontVariants.Inferior" />
        <element api="F:System.Windows.FontVariants.Ruby" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="58272048-aae6-81b1-f2af-7a4a336e9dac" />
    </api>
    <api id="F:System.Windows.FontVariants.Inferior">
      <topicdata group="api" notopic="" />
      <apidata name="Inferior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="1ab79f42-b08c-861f-a077-4f466ee50531" />
    </api>
    <api id="F:System.Windows.FontVariants.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="e66f70b0-5999-5ee7-7b4c-e3d0a4ee8e2c" />
    </api>
    <api id="F:System.Windows.FontVariants.Ordinal">
      <topicdata group="api" notopic="" />
      <apidata name="Ordinal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="b0cf52a6-87ed-6d90-92d3-52397f7ffd23" />
    </api>
    <api id="F:System.Windows.FontVariants.Ruby">
      <topicdata group="api" notopic="" />
      <apidata name="Ruby" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="e108cce8-454c-87a1-1fce-412017564863" />
    </api>
    <api id="F:System.Windows.FontVariants.Subscript">
      <topicdata group="api" notopic="" />
      <apidata name="Subscript" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="2e5b93d6-6c85-d20d-8317-a683373f999f" />
    </api>
    <api id="F:System.Windows.FontVariants.Superscript">
      <topicdata group="api" notopic="" />
      <apidata name="Superscript" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.FontVariants" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontVariants" ref="false" />
      </containers>
      <file name="eac843d9-81a1-5bb6-5830-21cddebde343" />
    </api>
    <api id="T:System.Windows.FontWeight">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontWeight" />
      <apidata name="FontWeight" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="255f2e75-a238-1218-9886-42aa6ff38ccc" />
    </api>
    <api id="AllMembers.T:System.Windows.FontWeight">
      <topicdata name="FontWeight" group="list" subgroup="members" typeTopicId="T:System.Windows.FontWeight" />
      <apidata name="FontWeight" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontWeight.Equals(System.Object)" />
        <element api="M:System.Windows.FontWeight.GetHashCode" />
        <element api="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)" />
        <element api="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)" />
        <element api="M:System.Windows.FontWeight.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" />
      </containers>
      <file name="408200f2-ffcb-e1f3-8f79-d11f58b0bbc9" />
    </api>
    <api id="Methods.T:System.Windows.FontWeight">
      <topicdata name="FontWeight" group="list" subgroup="Methods" typeTopicId="T:System.Windows.FontWeight" />
      <apidata name="FontWeight" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.FontWeight.Equals(System.Object)" />
        <element api="M:System.Windows.FontWeight.GetHashCode" />
        <element api="M:System.Windows.FontWeight.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" />
      </containers>
      <file name="34a7a24e-4651-86bf-8709-a5edaf3f3b53" />
    </api>
    <api id="Operators.T:System.Windows.FontWeight">
      <topicdata name="FontWeight" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.FontWeight" />
      <apidata name="FontWeight" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)" />
        <element api="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" />
      </containers>
      <file name="93d0cb5d-0817-81c7-9714-a6eaa380851a" />
    </api>
    <api id="M:System.Windows.FontWeight.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" ref="false" />
      </containers>
      <file name="a1e431aa-e4df-4797-c3fe-a61003a8cf2c" />
    </api>
    <api id="M:System.Windows.FontWeight.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" ref="false" />
      </containers>
      <file name="2001d9cb-88ce-1f39-dc63-91b32263ea32" />
    </api>
    <api id="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontWeight" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontWeight" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" ref="false" />
      </containers>
      <file name="4ea3b555-011e-d750-28a3-34ff3c6a7015" />
    </api>
    <api id="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Windows.FontWeight" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Windows.FontWeight" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" ref="false" />
      </containers>
      <file name="b5ec7601-5ccf-3e34-a44e-19e1c13228e5" />
    </api>
    <api id="M:System.Windows.FontWeight.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeight" ref="false" />
      </containers>
      <file name="75f143aa-5947-3c8e-93cc-1a5cecdb2d70" />
    </api>
    <api id="T:System.Windows.FontWeights">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FontWeights" />
      <apidata name="FontWeights" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="a25453c0-7496-b40e-bd2e-272dc884ecd4" />
    </api>
    <api id="AllMembers.T:System.Windows.FontWeights">
      <topicdata name="FontWeights" group="list" subgroup="members" typeTopicId="T:System.Windows.FontWeights" />
      <apidata name="FontWeights" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontWeights.Black" />
        <element api="P:System.Windows.FontWeights.Bold" />
        <element api="P:System.Windows.FontWeights.ExtraBlack" />
        <element api="P:System.Windows.FontWeights.ExtraBold" />
        <element api="P:System.Windows.FontWeights.ExtraLight" />
        <element api="P:System.Windows.FontWeights.Light" />
        <element api="P:System.Windows.FontWeights.Medium" />
        <element api="P:System.Windows.FontWeights.Normal" />
        <element api="P:System.Windows.FontWeights.SemiBold" />
        <element api="P:System.Windows.FontWeights.Thin" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" />
      </containers>
      <file name="a826677c-161d-11dd-dd96-0649458f8218" />
    </api>
    <api id="Properties.T:System.Windows.FontWeights">
      <topicdata name="FontWeights" group="list" subgroup="Properties" typeTopicId="T:System.Windows.FontWeights" />
      <apidata name="FontWeights" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.FontWeights.Black" />
        <element api="P:System.Windows.FontWeights.Bold" />
        <element api="P:System.Windows.FontWeights.ExtraBlack" />
        <element api="P:System.Windows.FontWeights.ExtraBold" />
        <element api="P:System.Windows.FontWeights.ExtraLight" />
        <element api="P:System.Windows.FontWeights.Light" />
        <element api="P:System.Windows.FontWeights.Medium" />
        <element api="P:System.Windows.FontWeights.Normal" />
        <element api="P:System.Windows.FontWeights.SemiBold" />
        <element api="P:System.Windows.FontWeights.Thin" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" />
      </containers>
      <file name="9e58383f-b008-6b8b-db16-6c4f90622803" />
    </api>
    <api id="P:System.Windows.FontWeights.Black">
      <topicdata group="api" />
      <apidata name="Black" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Black" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="a766b699-44e0-43f5-89d6-a0efd4871994" />
    </api>
    <api id="P:System.Windows.FontWeights.Bold">
      <topicdata group="api" />
      <apidata name="Bold" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bold" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="93dafc87-c5e4-5e6b-ba25-6d6644fd3ff4" />
    </api>
    <api id="P:System.Windows.FontWeights.ExtraBlack">
      <topicdata group="api" />
      <apidata name="ExtraBlack" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtraBlack" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="ab0f4d9b-0dc0-aecd-9a99-ef0f1f20efcb" />
    </api>
    <api id="P:System.Windows.FontWeights.ExtraBold">
      <topicdata group="api" />
      <apidata name="ExtraBold" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtraBold" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="72c611cb-2040-5c9a-3181-25c25c5d633b" />
    </api>
    <api id="P:System.Windows.FontWeights.ExtraLight">
      <topicdata group="api" />
      <apidata name="ExtraLight" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtraLight" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="c010269b-319c-52de-d95c-78470b8bf8c6" />
    </api>
    <api id="P:System.Windows.FontWeights.Light">
      <topicdata group="api" />
      <apidata name="Light" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Light" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="b2866ea1-fefb-9d4a-458e-67713ba7de44" />
    </api>
    <api id="P:System.Windows.FontWeights.Medium">
      <topicdata group="api" />
      <apidata name="Medium" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Medium" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="ba61dd58-0a63-75c0-a95a-8737506b850e" />
    </api>
    <api id="P:System.Windows.FontWeights.Normal">
      <topicdata group="api" />
      <apidata name="Normal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Normal" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="07ab0daa-8ebe-4c3b-0270-41404c535e56" />
    </api>
    <api id="P:System.Windows.FontWeights.SemiBold">
      <topicdata group="api" />
      <apidata name="SemiBold" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SemiBold" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="83e6cc46-d747-f2b3-b39c-133dc2e613f5" />
    </api>
    <api id="P:System.Windows.FontWeights.Thin">
      <topicdata group="api" />
      <apidata name="Thin" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Thin" />
      <returns>
        <type api="T:System.Windows.FontWeight" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FontWeights" ref="true" />
      </containers>
      <file name="b4a487f3-15e5-e17e-9d04-833b1dffb976" />
    </api>
    <api id="T:System.Windows.FrameworkElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.Controls.ContentPresenter" ref="true" />
          <type api="T:System.Windows.Controls.DrawingSurface" ref="true" />
          <type api="T:System.Windows.Controls.Panel" ref="true" />
          <type api="T:System.Windows.Controls.Image" ref="true" />
          <type api="T:System.Windows.Controls.MediaElement" ref="true" />
          <type api="T:System.Windows.Controls.TextBlock" ref="true" />
          <type api="T:System.Windows.Controls.MultiScaleImage" ref="true" />
          <type api="T:System.Windows.Controls.Viewbox" ref="true" />
          <type api="T:System.Windows.Controls.Border" ref="true" />
          <type api="T:System.Windows.Controls.ItemsPresenter" ref="true" />
          <type api="T:System.Windows.Controls.Primitives.Popup" ref="true" />
          <type api="T:System.Windows.Documents.Glyphs" ref="true" />
          <type api="T:System.Windows.Shapes.Shape" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="308ad9d2-fb22-2fac-ae7c-c5dad3796f1c" />
    </api>
    <api id="AllMembers.T:System.Windows.FrameworkElement">
      <topicdata name="FrameworkElement" group="list" subgroup="members" typeTopicId="T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.#ctor" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="F:System.Windows.FrameworkElement.ActualHeightProperty" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="F:System.Windows.FrameworkElement.ActualWidthProperty" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="E:System.Windows.FrameworkElement.BindingValidationError" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="F:System.Windows.FrameworkElement.CursorProperty" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="F:System.Windows.FrameworkElement.DataContextProperty" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="F:System.Windows.FrameworkElement.FlowDirectionProperty" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="F:System.Windows.FrameworkElement.HeightProperty" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="F:System.Windows.FrameworkElement.LanguageProperty" />
        <element api="E:System.Windows.FrameworkElement.LayoutUpdated" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="F:System.Windows.FrameworkElement.LoadedEvent" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="F:System.Windows.FrameworkElement.MarginProperty" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="F:System.Windows.FrameworkElement.MaxHeightProperty" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="F:System.Windows.FrameworkElement.MaxWidthProperty" />
        <element api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="F:System.Windows.FrameworkElement.MinHeightProperty" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="F:System.Windows.FrameworkElement.MinWidthProperty" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="F:System.Windows.FrameworkElement.NameProperty" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="F:System.Windows.FrameworkElement.StyleProperty" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="F:System.Windows.FrameworkElement.TagProperty" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting" />
        <element api="F:System.Windows.FrameworkElement.UseOptimizedManipulationRoutingProperty" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="F:System.Windows.FrameworkElement.VerticalAlignmentProperty" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="F:System.Windows.FrameworkElement.WidthProperty" />
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="E:System.Windows.UIElement.DoubleTap" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.Hold" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.Projection" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="E:System.Windows.UIElement.Tap" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TextInputStart" />
        <element api="E:System.Windows.UIElement.TextInputUpdate" />
        <element api="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
        <element api="P:System.Windows.UIElement.UseLayoutRounding" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" />
      </containers>
      <file name="c871c589-7572-f394-0a1e-1a77c366ef31" />
    </api>
    <api id="Methods.T:System.Windows.FrameworkElement">
      <topicdata name="FrameworkElement" group="list" subgroup="Methods" typeTopicId="T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <element api="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <element api="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <element api="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)" />
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" />
      </containers>
      <file name="bff6a3bf-eca1-f235-d03c-f174fcb83c46" />
    </api>
    <api id="Properties.T:System.Windows.FrameworkElement">
      <topicdata name="FrameworkElement" group="list" subgroup="Properties" typeTopicId="T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.FrameworkElement.ActualHeight" />
        <element api="P:System.Windows.FrameworkElement.ActualWidth" />
        <element api="P:System.Windows.FrameworkElement.Cursor" />
        <element api="P:System.Windows.FrameworkElement.DataContext" />
        <element api="P:System.Windows.FrameworkElement.FlowDirection" />
        <element api="P:System.Windows.FrameworkElement.Height" />
        <element api="P:System.Windows.FrameworkElement.HorizontalAlignment" />
        <element api="P:System.Windows.FrameworkElement.Language" />
        <element api="P:System.Windows.FrameworkElement.Margin" />
        <element api="P:System.Windows.FrameworkElement.MaxHeight" />
        <element api="P:System.Windows.FrameworkElement.MaxWidth" />
        <element api="P:System.Windows.FrameworkElement.MinHeight" />
        <element api="P:System.Windows.FrameworkElement.MinWidth" />
        <element api="P:System.Windows.FrameworkElement.Name" />
        <element api="P:System.Windows.FrameworkElement.Parent" />
        <element api="P:System.Windows.FrameworkElement.Resources" />
        <element api="P:System.Windows.FrameworkElement.Style" />
        <element api="P:System.Windows.FrameworkElement.Tag" />
        <element api="P:System.Windows.FrameworkElement.Triggers" />
        <element api="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting" />
        <element api="P:System.Windows.FrameworkElement.VerticalAlignment" />
        <element api="P:System.Windows.FrameworkElement.Width" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.Projection" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.UseLayoutRounding" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" />
      </containers>
      <file name="81d12778-0ba4-5c7a-08a2-5d83a979d349" />
    </api>
    <api id="Events.T:System.Windows.FrameworkElement">
      <topicdata name="FrameworkElement" group="list" subgroup="Events" typeTopicId="T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.FrameworkElement.BindingValidationError" />
        <element api="E:System.Windows.FrameworkElement.LayoutUpdated" />
        <element api="E:System.Windows.FrameworkElement.Loaded" />
        <element api="E:System.Windows.FrameworkElement.SizeChanged" />
        <element api="E:System.Windows.FrameworkElement.Unloaded" />
        <element api="E:System.Windows.UIElement.DoubleTap" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.Hold" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.Tap" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TextInputStart" />
        <element api="E:System.Windows.UIElement.TextInputUpdate" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" />
      </containers>
      <file name="6969269a-b6af-2c47-46e3-f5c5c60405c2" />
    </api>
    <api id="Fields.T:System.Windows.FrameworkElement">
      <topicdata name="FrameworkElement" group="list" subgroup="Fields" typeTopicId="T:System.Windows.FrameworkElement" />
      <apidata name="FrameworkElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.FrameworkElement.ActualHeightProperty" />
        <element api="F:System.Windows.FrameworkElement.ActualWidthProperty" />
        <element api="F:System.Windows.FrameworkElement.CursorProperty" />
        <element api="F:System.Windows.FrameworkElement.DataContextProperty" />
        <element api="F:System.Windows.FrameworkElement.FlowDirectionProperty" />
        <element api="F:System.Windows.FrameworkElement.HeightProperty" />
        <element api="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
        <element api="F:System.Windows.FrameworkElement.LanguageProperty" />
        <element api="F:System.Windows.FrameworkElement.LoadedEvent" />
        <element api="F:System.Windows.FrameworkElement.MarginProperty" />
        <element api="F:System.Windows.FrameworkElement.MaxHeightProperty" />
        <element api="F:System.Windows.FrameworkElement.MaxWidthProperty" />
        <element api="F:System.Windows.FrameworkElement.MinHeightProperty" />
        <element api="F:System.Windows.FrameworkElement.MinWidthProperty" />
        <element api="F:System.Windows.FrameworkElement.NameProperty" />
        <element api="F:System.Windows.FrameworkElement.StyleProperty" />
        <element api="F:System.Windows.FrameworkElement.TagProperty" />
        <element api="F:System.Windows.FrameworkElement.UseOptimizedManipulationRoutingProperty" />
        <element api="F:System.Windows.FrameworkElement.VerticalAlignmentProperty" />
        <element api="F:System.Windows.FrameworkElement.WidthProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" />
      </containers>
      <file name="cae44ead-60cc-30f5-d296-536ff975464a" />
    </api>
    <api id="M:System.Windows.FrameworkElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="60f57613-2a5a-0e97-45e1-063491e7ca84" />
    </api>
    <api id="P:System.Windows.FrameworkElement.ActualHeight">
      <topicdata group="api" />
      <apidata name="ActualHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActualHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="89a45455-fe2f-fc2c-9e3f-1577c92b1006" />
    </api>
    <api id="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <topicdata group="api" />
      <apidata name="ActualHeightProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="67253d61-02ab-6a76-26b3-f60d110b3568" />
    </api>
    <api id="P:System.Windows.FrameworkElement.ActualWidth">
      <topicdata group="api" />
      <apidata name="ActualWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActualWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="d94ec67c-7c66-709f-3423-fa9d216f10fc" />
    </api>
    <api id="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <topicdata group="api" />
      <apidata name="ActualWidthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="39575de4-67ae-4d71-819b-038eb44ba742" />
    </api>
    <api id="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="ArrangeOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="finalSize">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="9a4cf7bc-a41b-ea9a-4751-361d70c4ff73" />
    </api>
    <api id="E:System.Windows.FrameworkElement.BindingValidationError">
      <topicdata group="api" />
      <apidata name="BindingValidationError" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BindingValidationError" />
      <remover name="remove_BindingValidationError" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationErrorEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Controls.ValidationErrorEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="2dd1d430-cb78-f3a7-35b5-2db52d2ff033" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Cursor">
      <topicdata group="api" />
      <apidata name="Cursor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cursor" />
      <setter name="set_Cursor" />
      <returns>
        <type api="T:System.Windows.Input.Cursor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="08446363-c1e3-2a87-590f-1c76b4c2995e" />
    </api>
    <api id="F:System.Windows.FrameworkElement.CursorProperty">
      <topicdata group="api" />
      <apidata name="CursorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="8a08ec74-1ce2-4f2f-8c70-aec32e7df577" />
    </api>
    <api id="P:System.Windows.FrameworkElement.DataContext">
      <topicdata group="api" />
      <apidata name="DataContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataContext" />
      <setter name="set_DataContext" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="75caaae4-9114-7361-2408-4e80e95a36f9" />
    </api>
    <api id="F:System.Windows.FrameworkElement.DataContextProperty">
      <topicdata group="api" />
      <apidata name="DataContextProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="c8a46b7f-5ec9-f2ee-3b7d-a0fb59f4e80a" />
    </api>
    <api id="M:System.Windows.FrameworkElement.FindName(System.String)">
      <topicdata group="api" />
      <apidata name="FindName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="e1a21e60-15bc-1cbf-d525-d7f7fe512c54" />
    </api>
    <api id="P:System.Windows.FrameworkElement.FlowDirection">
      <topicdata group="api" />
      <apidata name="FlowDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FlowDirection" />
      <setter name="set_FlowDirection" />
      <returns>
        <type api="T:System.Windows.FlowDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="6727f54c-516c-82f5-f706-6662f6c5fd37" />
    </api>
    <api id="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <topicdata group="api" />
      <apidata name="FlowDirectionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="aa73c7ac-277c-52b2-d306-b43ada8bdc24" />
    </api>
    <api id="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBindingExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="ecc03668-6054-3c11-8d86-85352be0b3ca" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="c04126df-107f-29d9-10a0-6952881909d9" />
    </api>
    <api id="F:System.Windows.FrameworkElement.HeightProperty">
      <topicdata group="api" />
      <apidata name="HeightProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="6e56422d-9d5f-0ebe-d940-7881fff8c560" />
    </api>
    <api id="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <topicdata group="api" />
      <apidata name="HorizontalAlignment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalAlignment" />
      <setter name="set_HorizontalAlignment" />
      <returns>
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="20961aaf-03ef-ddc2-253a-1c2d8fa8eb12" />
    </api>
    <api id="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <topicdata group="api" />
      <apidata name="HorizontalAlignmentProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="f83a07e5-4551-f60f-0a36-178799edc314" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Language">
      <topicdata group="api" />
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.Windows.Markup.XmlLanguage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="73aba003-4960-16e5-47ec-5a4a29709dfb" />
    </api>
    <api id="F:System.Windows.FrameworkElement.LanguageProperty">
      <topicdata group="api" />
      <apidata name="LanguageProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="fcef7e4e-61f8-9173-80ef-ffb6f0c78baa" />
    </api>
    <api id="E:System.Windows.FrameworkElement.LayoutUpdated">
      <topicdata group="api" />
      <apidata name="LayoutUpdated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LayoutUpdated" />
      <remover name="remove_LayoutUpdated" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="898a0b76-530f-dcfa-e697-f99b084eb53e" />
    </api>
    <api id="E:System.Windows.FrameworkElement.Loaded">
      <topicdata group="api" />
      <apidata name="Loaded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Loaded" />
      <remover name="remove_Loaded" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="f1b415a8-272f-ee9d-c972-f4d851d7b135" />
    </api>
    <api id="F:System.Windows.FrameworkElement.LoadedEvent">
      <topicdata group="api" />
      <apidata name="LoadedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="205ae51f-fdec-7751-dcd9-80f8d37d537d" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Margin">
      <topicdata group="api" />
      <apidata name="Margin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Margin" />
      <setter name="set_Margin" />
      <returns>
        <type api="T:System.Windows.Thickness" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="42c9ed8a-1168-7751-2653-0086bdc84163" />
    </api>
    <api id="F:System.Windows.FrameworkElement.MarginProperty">
      <topicdata group="api" />
      <apidata name="MarginProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="824a64e7-c219-3350-3817-4d6f13968b49" />
    </api>
    <api id="P:System.Windows.FrameworkElement.MaxHeight">
      <topicdata group="api" />
      <apidata name="MaxHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxHeight" />
      <setter name="set_MaxHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="05147c5a-87bd-1db8-ba31-1fabfb02ef00" />
    </api>
    <api id="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <topicdata group="api" />
      <apidata name="MaxHeightProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="7ca2f228-62ea-adad-6695-6e17978c880e" />
    </api>
    <api id="P:System.Windows.FrameworkElement.MaxWidth">
      <topicdata group="api" />
      <apidata name="MaxWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxWidth" />
      <setter name="set_MaxWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="06bc4119-9aea-4e41-09ca-a7337c64559f" />
    </api>
    <api id="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <topicdata group="api" />
      <apidata name="MaxWidthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="e66526f1-8028-e92e-8114-2496736b5d09" />
    </api>
    <api id="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="MeasureOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="availableSize">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="f16effb3-da72-2bb9-290b-0fd6b9b79b4c" />
    </api>
    <api id="P:System.Windows.FrameworkElement.MinHeight">
      <topicdata group="api" />
      <apidata name="MinHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinHeight" />
      <setter name="set_MinHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="645b10fc-5a9c-3080-90c8-a630549644d3" />
    </api>
    <api id="F:System.Windows.FrameworkElement.MinHeightProperty">
      <topicdata group="api" />
      <apidata name="MinHeightProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="812c3949-2a1d-ac71-342d-7baff669bb95" />
    </api>
    <api id="P:System.Windows.FrameworkElement.MinWidth">
      <topicdata group="api" />
      <apidata name="MinWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinWidth" />
      <setter name="set_MinWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="665d270c-acce-e84b-14cf-6dca0c3aa023" />
    </api>
    <api id="F:System.Windows.FrameworkElement.MinWidthProperty">
      <topicdata group="api" />
      <apidata name="MinWidthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="996e00ba-d01f-fde8-20d5-2c81dc160942" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="9b9a511d-a1df-e676-da6e-d99057265ffd" />
    </api>
    <api id="F:System.Windows.FrameworkElement.NameProperty">
      <topicdata group="api" />
      <apidata name="NameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="38457e3e-fd0c-53cc-f5f3-37e48ef07456" />
    </api>
    <api id="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <topicdata group="api" />
      <apidata name="OnApplyTemplate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="be131b0c-25b6-a2a4-6436-2c1390779155" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="7c9049f6-82bc-a0d1-04ae-4aef794d39a9" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Resources">
      <topicdata group="api" />
      <apidata name="Resources" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resources" />
      <setter name="set_Resources" />
      <returns>
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="c26f7749-2e4d-0d2b-fa86-53626bd873d7" />
    </api>
    <api id="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)">
      <topicdata group="api" />
      <apidata name="SetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Windows.Data.Binding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="13926fde-bb97-765e-4527-aa8137d79115" />
    </api>
    <api id="E:System.Windows.FrameworkElement.SizeChanged">
      <topicdata group="api" />
      <apidata name="SizeChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SizeChanged" />
      <remover name="remove_SizeChanged" />
      <eventhandler>
        <type api="T:System.Windows.SizeChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="b4901aec-24f8-bf57-02f5-4a5d3de97e23" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Style">
      <topicdata group="api" />
      <apidata name="Style" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Style" />
      <setter name="set_Style" />
      <returns>
        <type api="T:System.Windows.Style" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="c6df869e-2c41-e70f-a7aa-b30fa86e0f0e" />
    </api>
    <api id="F:System.Windows.FrameworkElement.StyleProperty">
      <topicdata group="api" />
      <apidata name="StyleProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="e93bd7ba-bb85-d61f-f7f8-15cf970c0a2e" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tag" />
      <setter name="set_Tag" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="3a1b1553-c7b7-7031-88b3-7e7174e115a7" />
    </api>
    <api id="F:System.Windows.FrameworkElement.TagProperty">
      <topicdata group="api" />
      <apidata name="TagProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="2c979c73-8a62-c6db-db6f-72fd482a908e" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Triggers">
      <topicdata group="api" />
      <apidata name="Triggers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Triggers" />
      <returns>
        <type api="T:System.Windows.TriggerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="86f9d14e-be6f-0831-143d-5f4e3a7d8605" />
    </api>
    <api id="E:System.Windows.FrameworkElement.Unloaded">
      <topicdata group="api" />
      <apidata name="Unloaded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Unloaded" />
      <remover name="remove_Unloaded" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="8b239f13-892a-7055-618e-183ec724de0a" />
    </api>
    <api id="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting">
      <topicdata group="api" />
      <apidata name="UseOptimizedManipulationRouting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseOptimizedManipulationRouting" />
      <setter name="set_UseOptimizedManipulationRouting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="cc57eacc-213a-6a2d-a2ad-37f1bcad4caa" />
    </api>
    <api id="F:System.Windows.FrameworkElement.UseOptimizedManipulationRoutingProperty">
      <topicdata group="api" />
      <apidata name="UseOptimizedManipulationRoutingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="1d343fac-9344-3666-536b-b5a67816d424" />
    </api>
    <api id="P:System.Windows.FrameworkElement.VerticalAlignment">
      <topicdata group="api" />
      <apidata name="VerticalAlignment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalAlignment" />
      <setter name="set_VerticalAlignment" />
      <returns>
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="e6bbfdc6-3a3a-b342-3cf8-268135eed831" />
    </api>
    <api id="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <topicdata group="api" />
      <apidata name="VerticalAlignmentProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="c045603b-34fa-0992-9c73-3c7abf81082c" />
    </api>
    <api id="P:System.Windows.FrameworkElement.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="40f9e1d0-afab-e8eb-5eb5-f0499be66eca" />
    </api>
    <api id="F:System.Windows.FrameworkElement.WidthProperty">
      <topicdata group="api" />
      <apidata name="WidthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </containers>
      <file name="cf3eb4ea-671e-baf8-8823-d1dbd72ef7c4" />
    </api>
    <api id="T:System.Windows.FrameworkTemplate">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.FrameworkTemplate" />
      <apidata name="FrameworkTemplate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Controls.ControlTemplate" ref="true" />
          <type api="T:System.Windows.Controls.ItemsPanelTemplate" ref="true" />
          <type api="T:System.Windows.DataTemplate" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="7b7f22e9-29c2-807b-b222-951a6a2927ac" />
    </api>
    <api id="AllMembers.T:System.Windows.FrameworkTemplate">
      <topicdata name="FrameworkTemplate" group="list" subgroup="members" typeTopicId="T:System.Windows.FrameworkTemplate" />
      <apidata name="FrameworkTemplate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.FrameworkTemplate.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkTemplate" />
      </containers>
      <file name="65cf40dd-1b5f-4bca-758e-f21ceb74754c" />
    </api>
    <api id="Methods.T:System.Windows.FrameworkTemplate">
      <topicdata name="FrameworkTemplate" group="list" subgroup="Methods" typeTopicId="T:System.Windows.FrameworkTemplate" />
      <apidata name="FrameworkTemplate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkTemplate" />
      </containers>
      <file name="d656acbe-f918-4602-a841-c5902fee78d2" />
    </api>
    <api id="Properties.T:System.Windows.FrameworkTemplate">
      <topicdata name="FrameworkTemplate" group="list" subgroup="Properties" typeTopicId="T:System.Windows.FrameworkTemplate" />
      <apidata name="FrameworkTemplate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkTemplate" />
      </containers>
      <file name="6838d607-6a70-fcb1-2aa0-51fe8ef5b818" />
    </api>
    <api id="M:System.Windows.FrameworkTemplate.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.FrameworkTemplate" ref="true" />
      </containers>
      <file name="07d09031-ad00-939c-21e3-d195b93679bf" />
    </api>
    <api id="T:System.Windows.GridLength">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.GridLength" />
      <apidata name="GridLength" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c151035d-832a-df37-d44e-5ccfe1568435" />
    </api>
    <api id="AllMembers.T:System.Windows.GridLength">
      <topicdata name="GridLength" group="list" subgroup="members" typeTopicId="T:System.Windows.GridLength" />
      <apidata name="GridLength" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.GridLength.#ctor">
          <element api="M:System.Windows.GridLength.#ctor(System.Double)" />
          <element api="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)" />
        </element>
        <element api="P:System.Windows.GridLength.Auto" />
        <element api="Overload:System.Windows.GridLength.Equals">
          <element api="M:System.Windows.GridLength.Equals(System.Windows.GridLength)" />
          <element api="M:System.Windows.GridLength.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.GridLength.GetHashCode" />
        <element api="P:System.Windows.GridLength.GridUnitType" />
        <element api="P:System.Windows.GridLength.IsAbsolute" />
        <element api="P:System.Windows.GridLength.IsAuto" />
        <element api="P:System.Windows.GridLength.IsStar" />
        <element api="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)" />
        <element api="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)" />
        <element api="M:System.Windows.GridLength.ToString" />
        <element api="P:System.Windows.GridLength.Value" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" />
      </containers>
      <file name="cfedac1c-8f26-9cc1-e7ac-e01766651e85" />
    </api>
    <api id="Methods.T:System.Windows.GridLength">
      <topicdata name="GridLength" group="list" subgroup="Methods" typeTopicId="T:System.Windows.GridLength" />
      <apidata name="GridLength" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.GridLength.Equals">
          <element api="M:System.Windows.GridLength.Equals(System.Windows.GridLength)" />
          <element api="M:System.Windows.GridLength.Equals(System.Object)" />
        </element>
        <element api="M:System.Windows.GridLength.GetHashCode" />
        <element api="M:System.Windows.GridLength.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" />
      </containers>
      <file name="c9b8d4bb-f1dc-04d2-009e-937e8c48be92" />
    </api>
    <api id="Operators.T:System.Windows.GridLength">
      <topicdata name="GridLength" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.GridLength" />
      <apidata name="GridLength" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)" />
        <element api="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" />
      </containers>
      <file name="2447a552-7f65-c1d9-c729-39d21e5d8637" />
    </api>
    <api id="Properties.T:System.Windows.GridLength">
      <topicdata name="GridLength" group="list" subgroup="Properties" typeTopicId="T:System.Windows.GridLength" />
      <apidata name="GridLength" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Windows.GridLength.Auto" />
        <element api="P:System.Windows.GridLength.GridUnitType" />
        <element api="P:System.Windows.GridLength.IsAbsolute" />
        <element api="P:System.Windows.GridLength.IsAuto" />
        <element api="P:System.Windows.GridLength.IsStar" />
        <element api="P:System.Windows.GridLength.Value" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" />
      </containers>
      <file name="6c929be0-2be4-a861-9d44-a3288da605be" />
    </api>
    <api id="Overload:System.Windows.GridLength.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.GridLength" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.GridLength.#ctor(System.Double)" />
        <element api="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="dd622d07-9530-dfd2-dd29-0e13ff5b773c" />
    </api>
    <api id="Overload:System.Windows.GridLength.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.GridLength" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.GridLength.Equals(System.Windows.GridLength)" />
        <element api="M:System.Windows.GridLength.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="c641338a-3dee-379d-6edc-2a00797e10cc" />
    </api>
    <api id="M:System.Windows.GridLength.#ctor(System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.GridLength.#ctor" />
      <parameters>
        <parameter name="pixels">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="5fda7050-e6b5-7553-238e-b841e350df54" />
    </api>
    <api id="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.GridLength.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Windows.GridUnitType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="7f6fdc4f-3e69-0bc8-2385-19d5b52b026c" />
    </api>
    <api id="P:System.Windows.GridLength.Auto">
      <topicdata group="api" />
      <apidata name="Auto" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Auto" />
      <returns>
        <type api="T:System.Windows.GridLength" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="568a5f22-98bf-1d80-a0e4-34e0e803ccb8" />
    </api>
    <api id="M:System.Windows.GridLength.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.GridLength.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="oCompare">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="b1d346f7-eb78-fc6d-9459-a6d27ffd464a" />
    </api>
    <api id="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.GridLength.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gridLength">
          <type api="T:System.Windows.GridLength" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="61377a8c-90ae-3d18-0dfa-aa15b7d98b4b" />
    </api>
    <api id="M:System.Windows.GridLength.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="f256cede-47f3-4c74-7941-c19435f90cd9" />
    </api>
    <api id="P:System.Windows.GridLength.GridUnitType">
      <topicdata group="api" />
      <apidata name="GridUnitType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GridUnitType" />
      <returns>
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="3f63380a-99e0-5e24-0f69-024667c0c39b" />
    </api>
    <api id="P:System.Windows.GridLength.IsAbsolute">
      <topicdata group="api" />
      <apidata name="IsAbsolute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAbsolute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="60cc7f32-24df-e520-ee80-8a5fcdbc5865" />
    </api>
    <api id="P:System.Windows.GridLength.IsAuto">
      <topicdata group="api" />
      <apidata name="IsAuto" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAuto" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="00dd0aaf-e2f9-9d2b-5fc0-074a1176fd4d" />
    </api>
    <api id="P:System.Windows.GridLength.IsStar">
      <topicdata group="api" />
      <apidata name="IsStar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsStar" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="c6c3a986-a4da-12ca-634b-d0a1538d4e71" />
    </api>
    <api id="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gl1">
          <type api="T:System.Windows.GridLength" ref="false" />
        </parameter>
        <parameter name="gl2">
          <type api="T:System.Windows.GridLength" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="77934e74-6a63-f89c-6ec7-ed2605089bb5" />
    </api>
    <api id="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gl1">
          <type api="T:System.Windows.GridLength" ref="false" />
        </parameter>
        <parameter name="gl2">
          <type api="T:System.Windows.GridLength" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="9a86bcf2-97aa-c59a-70a1-721f813e7556" />
    </api>
    <api id="M:System.Windows.GridLength.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="24ef4975-389c-ea4c-4bea-b937a442b05f" />
    </api>
    <api id="P:System.Windows.GridLength.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridLength" ref="false" />
      </containers>
      <file name="f10a5d86-f0c6-bf5c-10bd-084eb40c63b1" />
    </api>
    <api id="T:System.Windows.GridUnitType">
      <topicdata group="api" />
      <apidata name="GridUnitType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.GridUnitType.Auto" />
        <element api="F:System.Windows.GridUnitType.Pixel" />
        <element api="F:System.Windows.GridUnitType.Star" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5d8f3a9f-55db-715d-440c-0097404cc2e6" />
    </api>
    <api id="F:System.Windows.GridUnitType.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </containers>
      <file name="cfc64f45-0511-b872-d71e-b00a2cecce59" />
    </api>
    <api id="F:System.Windows.GridUnitType.Pixel">
      <topicdata group="api" notopic="" />
      <apidata name="Pixel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </containers>
      <file name="7e6b6c39-5003-f641-9f02-49eaae30a6c8" />
    </api>
    <api id="F:System.Windows.GridUnitType.Star">
      <topicdata group="api" notopic="" />
      <apidata name="Star" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.GridUnitType" ref="false" />
      </containers>
      <file name="307f23cb-ef1c-1cfd-afb2-03a790a093b5" />
    </api>
    <api id="T:System.Windows.HorizontalAlignment">
      <topicdata group="api" />
      <apidata name="HorizontalAlignment" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.HorizontalAlignment.Left" />
        <element api="F:System.Windows.HorizontalAlignment.Center" />
        <element api="F:System.Windows.HorizontalAlignment.Right" />
        <element api="F:System.Windows.HorizontalAlignment.Stretch" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="9f83db4a-e9db-933e-6a68-f3bec55b815f" />
    </api>
    <api id="F:System.Windows.HorizontalAlignment.Center">
      <topicdata group="api" notopic="" />
      <apidata name="Center" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </containers>
      <file name="894c5e56-d27e-a73e-2431-f92caca782cd" />
    </api>
    <api id="F:System.Windows.HorizontalAlignment.Left">
      <topicdata group="api" notopic="" />
      <apidata name="Left" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </containers>
      <file name="46f18923-ca9e-2b0a-6ba8-eebac65595b3" />
    </api>
    <api id="F:System.Windows.HorizontalAlignment.Right">
      <topicdata group="api" notopic="" />
      <apidata name="Right" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </containers>
      <file name="6a719422-f3f8-d525-3fc5-da00af89b471" />
    </api>
    <api id="F:System.Windows.HorizontalAlignment.Stretch">
      <topicdata group="api" notopic="" />
      <apidata name="Stretch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.HorizontalAlignment" ref="false" />
      </containers>
      <file name="ea227c6a-1461-4def-af6a-2a9dd69e778d" />
    </api>
    <api id="T:System.Windows.IApplicationLifetimeAware">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.IApplicationLifetimeAware" />
      <apidata name="IApplicationLifetimeAware" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="9aa86b90-f004-cb94-04f1-c9cdce146b85" />
    </api>
    <api id="AllMembers.T:System.Windows.IApplicationLifetimeAware">
      <topicdata name="IApplicationLifetimeAware" group="list" subgroup="members" typeTopicId="T:System.Windows.IApplicationLifetimeAware" />
      <apidata name="IApplicationLifetimeAware" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.IApplicationLifetimeAware.Exited" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Exiting" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Started" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Starting" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" />
      </containers>
      <file name="e92b4b20-5d7e-6d83-21e4-a3c7f5c6c978" />
    </api>
    <api id="Methods.T:System.Windows.IApplicationLifetimeAware">
      <topicdata name="IApplicationLifetimeAware" group="list" subgroup="Methods" typeTopicId="T:System.Windows.IApplicationLifetimeAware" />
      <apidata name="IApplicationLifetimeAware" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.IApplicationLifetimeAware.Exited" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Exiting" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Started" />
        <element api="M:System.Windows.IApplicationLifetimeAware.Starting" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" />
      </containers>
      <file name="319ea122-9261-ca22-a28c-3fbbb3c0cf28" />
    </api>
    <api id="M:System.Windows.IApplicationLifetimeAware.Exited">
      <topicdata group="api" />
      <apidata name="Exited" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" ref="true" />
      </containers>
      <file name="9fc5802c-2934-02ca-7101-c60f228afb55" />
    </api>
    <api id="M:System.Windows.IApplicationLifetimeAware.Exiting">
      <topicdata group="api" />
      <apidata name="Exiting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" ref="true" />
      </containers>
      <file name="8d4fe33c-d0c8-bccb-dc9b-ecd08718e15f" />
    </api>
    <api id="M:System.Windows.IApplicationLifetimeAware.Started">
      <topicdata group="api" />
      <apidata name="Started" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" ref="true" />
      </containers>
      <file name="32427173-5941-a2f2-8dbc-461da7291077" />
    </api>
    <api id="M:System.Windows.IApplicationLifetimeAware.Starting">
      <topicdata group="api" />
      <apidata name="Starting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationLifetimeAware" ref="true" />
      </containers>
      <file name="6fb329c5-879e-70aa-18f3-19642a08bb34" />
    </api>
    <api id="T:System.Windows.IApplicationService">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.IApplicationService" />
      <apidata name="IApplicationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.Phone.Shell.PhoneApplicationService" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="60166f8d-997b-540f-b3eb-a1e4967dc824" />
    </api>
    <api id="AllMembers.T:System.Windows.IApplicationService">
      <topicdata name="IApplicationService" group="list" subgroup="members" typeTopicId="T:System.Windows.IApplicationService" />
      <apidata name="IApplicationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)" />
        <element api="M:System.Windows.IApplicationService.StopService" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationService" />
      </containers>
      <file name="2fa60a76-abd2-18f9-8172-e51e5dd0df64" />
    </api>
    <api id="Methods.T:System.Windows.IApplicationService">
      <topicdata name="IApplicationService" group="list" subgroup="Methods" typeTopicId="T:System.Windows.IApplicationService" />
      <apidata name="IApplicationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)" />
        <element api="M:System.Windows.IApplicationService.StopService" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationService" />
      </containers>
      <file name="1b99971c-6412-c6bb-ee05-e7edc773d97c" />
    </api>
    <api id="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)">
      <topicdata group="api" />
      <apidata name="StartService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.ApplicationServiceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationService" ref="true" />
      </containers>
      <file name="a90979de-fcbc-10fd-e577-d696fb47f1e2" />
    </api>
    <api id="M:System.Windows.IApplicationService.StopService">
      <topicdata group="api" />
      <apidata name="StopService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IApplicationService" ref="true" />
      </containers>
      <file name="3a3b6048-0692-f87f-d796-a3b5f4dda8c3" />
    </api>
    <api id="T:System.Windows.Icon">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Icon" />
      <apidata name="Icon" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Icon.#ctor" contentProperty="P:System.Windows.Icon.Source" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Source</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f970d5e0-ea35-8cc6-488f-e3219e311fc3" />
    </api>
    <api id="AllMembers.T:System.Windows.Icon">
      <topicdata name="Icon" group="list" subgroup="members" typeTopicId="T:System.Windows.Icon" />
      <apidata name="Icon" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Icon.#ctor" contentProperty="P:System.Windows.Icon.Source" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.Icon.#ctor" />
        <element api="P:System.Windows.Icon.Size" />
        <element api="F:System.Windows.Icon.SizeProperty" />
        <element api="P:System.Windows.Icon.Source" />
        <element api="F:System.Windows.Icon.SourceProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" />
      </containers>
      <file name="288bc8a3-de7a-3719-bf66-8f6acd5aa782" />
    </api>
    <api id="Methods.T:System.Windows.Icon">
      <topicdata name="Icon" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Icon" />
      <apidata name="Icon" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Icon.#ctor" contentProperty="P:System.Windows.Icon.Source" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" />
      </containers>
      <file name="1a23a600-e1e0-87df-6324-35d1be146221" />
    </api>
    <api id="Properties.T:System.Windows.Icon">
      <topicdata name="Icon" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Icon" />
      <apidata name="Icon" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Icon.#ctor" contentProperty="P:System.Windows.Icon.Source" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.Icon.Size" />
        <element api="P:System.Windows.Icon.Source" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" />
      </containers>
      <file name="fd5c0728-00a4-52cd-ea64-8f88268c54f3" />
    </api>
    <api id="Fields.T:System.Windows.Icon">
      <topicdata name="Icon" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Icon" />
      <apidata name="Icon" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Icon.#ctor" contentProperty="P:System.Windows.Icon.Source" />
      <elements>
        <element api="F:System.Windows.Icon.SizeProperty" />
        <element api="F:System.Windows.Icon.SourceProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" />
      </containers>
      <file name="9985885d-4f08-c7be-402b-de2fe83ad6d9" />
    </api>
    <api id="M:System.Windows.Icon.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" ref="true" />
      </containers>
      <file name="099b1b4b-1698-57a6-ff4f-3b14483148ca" />
    </api>
    <api id="P:System.Windows.Icon.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Size" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" ref="true" />
      </containers>
      <file name="cb97b823-4d00-a490-273f-1c982bf96dfe" />
    </api>
    <api id="F:System.Windows.Icon.SizeProperty">
      <topicdata group="api" />
      <apidata name="SizeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" ref="true" />
      </containers>
      <file name="678a86f4-666d-5cac-193b-1d6a1a42483d" />
    </api>
    <api id="P:System.Windows.Icon.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" ref="true" />
      </containers>
      <file name="3ec6403f-64e7-1c84-7b0b-e2cb43e02cf8" />
    </api>
    <api id="F:System.Windows.Icon.SourceProperty">
      <topicdata group="api" />
      <apidata name="SourceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Icon" ref="true" />
      </containers>
      <file name="161d8ea5-d185-4091-34d7-fe9fc7a0a34d" />
    </api>
    <api id="T:System.Windows.IconCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.IconCollection" />
      <apidata name="IconCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.IconCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Icon" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="de2fb1dd-b851-f11d-f949-cc6e9898fe98" />
    </api>
    <api id="AllMembers.T:System.Windows.IconCollection">
      <topicdata name="IconCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.IconCollection" />
      <apidata name="IconCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.IconCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.IconCollection.#ctor" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.IconCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IconCollection" />
      </containers>
      <file name="75e4cf1c-b444-5454-1d37-3364ae781f30" />
    </api>
    <api id="Methods.T:System.Windows.IconCollection">
      <topicdata name="IconCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.IconCollection" />
      <apidata name="IconCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.IconCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.IconCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IconCollection" />
      </containers>
      <file name="a919c561-316d-0570-3ea3-a8d8b2268dbf" />
    </api>
    <api id="Properties.T:System.Windows.IconCollection">
      <topicdata name="IconCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.IconCollection" />
      <apidata name="IconCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.IconCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IconCollection" />
      </containers>
      <file name="93b3a8af-0a5c-422e-d2fd-e1490ffd892a" />
    </api>
    <api id="M:System.Windows.IconCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IconCollection" ref="true" />
      </containers>
      <file name="bbd1ee32-2084-432c-3837-0e98c0446f22" />
    </api>
    <api id="T:System.Windows.IDataObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.IDataObject" />
      <apidata name="IDataObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="030357cc-ea6b-e861-754f-37907568e1f5" />
    </api>
    <api id="AllMembers.T:System.Windows.IDataObject">
      <topicdata name="IDataObject" group="list" subgroup="members" typeTopicId="T:System.Windows.IDataObject" />
      <apidata name="IDataObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Windows.IDataObject.GetData">
          <element api="M:System.Windows.IDataObject.GetData(System.String)" />
          <element api="M:System.Windows.IDataObject.GetData(System.Type)" />
          <element api="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.GetDataPresent">
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.GetFormats">
          <element api="M:System.Windows.IDataObject.GetFormats" />
          <element api="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.SetData">
          <element api="M:System.Windows.IDataObject.SetData(System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" />
      </containers>
      <file name="618013ee-c4a8-539d-dbfc-3970bbb92923" />
    </api>
    <api id="Methods.T:System.Windows.IDataObject">
      <topicdata name="IDataObject" group="list" subgroup="Methods" typeTopicId="T:System.Windows.IDataObject" />
      <apidata name="IDataObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Windows.IDataObject.GetData">
          <element api="M:System.Windows.IDataObject.GetData(System.String)" />
          <element api="M:System.Windows.IDataObject.GetData(System.Type)" />
          <element api="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.GetDataPresent">
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
          <element api="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.GetFormats">
          <element api="M:System.Windows.IDataObject.GetFormats" />
          <element api="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
        </element>
        <element api="Overload:System.Windows.IDataObject.SetData">
          <element api="M:System.Windows.IDataObject.SetData(System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
          <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" />
      </containers>
      <file name="99c11316-e9bc-e38a-ed79-4e7fbf45271c" />
    </api>
    <api id="Overload:System.Windows.IDataObject.GetData">
      <topicdata name="GetData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.IDataObject" />
      <apidata name="GetData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.IDataObject.GetData(System.String)" />
        <element api="M:System.Windows.IDataObject.GetData(System.Type)" />
        <element api="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="93258133-355f-59ec-74a6-cacc4149219a" />
    </api>
    <api id="Overload:System.Windows.IDataObject.GetDataPresent">
      <topicdata name="GetDataPresent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.IDataObject" />
      <apidata name="GetDataPresent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
        <element api="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
        <element api="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="fa69034f-1b4d-d51f-efc7-867c2fc6992d" />
    </api>
    <api id="Overload:System.Windows.IDataObject.GetFormats">
      <topicdata name="GetFormats" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.IDataObject" />
      <apidata name="GetFormats" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.IDataObject.GetFormats" />
        <element api="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="a1798a72-80d9-c3fe-f624-d4f9ba84fd1c" />
    </api>
    <api id="Overload:System.Windows.IDataObject.SetData">
      <topicdata name="SetData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.IDataObject" />
      <apidata name="SetData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.IDataObject.SetData(System.Object)" />
        <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
        <element api="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
        <element api="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="0e3bcaf0-5a6a-318a-ecfc-a174666e5ad4" />
    </api>
    <api id="M:System.Windows.IDataObject.GetData(System.String)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="ead7893d-4feb-8750-648b-e52b34a31fa5" />
    </api>
    <api id="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="autoConvert">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="c84f8921-f50a-04bd-d519-644ef8f88ed6" />
    </api>
    <api id="M:System.Windows.IDataObject.GetData(System.Type)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="430d3c61-c468-e123-bcea-66ef69aee600" />
    </api>
    <api id="M:System.Windows.IDataObject.GetDataPresent(System.String)">
      <topicdata group="api" />
      <apidata name="GetDataPresent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetDataPresent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="18d2b05a-06c0-0df2-5944-6340777d4036" />
    </api>
    <api id="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetDataPresent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetDataPresent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="autoConvert">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="15c6d337-4b18-97f7-a814-7f02ba0ce4dc" />
    </api>
    <api id="M:System.Windows.IDataObject.GetDataPresent(System.Type)">
      <topicdata group="api" />
      <apidata name="GetDataPresent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetDataPresent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="228b7f5b-6839-a6b2-b613-6440ddca5567" />
    </api>
    <api id="M:System.Windows.IDataObject.GetFormats">
      <topicdata group="api" />
      <apidata name="GetFormats" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetFormats" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="e96d9fe9-7f44-cced-8aae-5e5a9e32670b" />
    </api>
    <api id="M:System.Windows.IDataObject.GetFormats(System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetFormats" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.GetFormats" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="autoConvert">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="872a0234-60d2-76d1-98b0-3d34bb2d9d96" />
    </api>
    <api id="M:System.Windows.IDataObject.SetData(System.Object)">
      <topicdata group="api" />
      <apidata name="SetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.SetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="317a9953-97aa-e4cd-462e-0b70e9f94c6b" />
    </api>
    <api id="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.SetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="fd76b0d6-44f7-23a3-54a0-3317a3b8db68" />
    </api>
    <api id="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.SetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="autoConvert">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="a53bdc5f-2876-6654-aa04-a62c7ba828b5" />
    </api>
    <api id="M:System.Windows.IDataObject.SetData(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="SetData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.IDataObject.SetData" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.IDataObject" ref="true" />
      </containers>
      <file name="6489486a-0db9-dcc9-cf7f-b50ac77dac43" />
    </api>
    <api id="T:System.Windows.LayoutCycleException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.LayoutCycleException" />
      <apidata name="LayoutCycleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="38036df5-eae5-d6e6-ac1f-49c43f2d44bf" />
    </api>
    <api id="AllMembers.T:System.Windows.LayoutCycleException">
      <topicdata name="LayoutCycleException" group="list" subgroup="members" typeTopicId="T:System.Windows.LayoutCycleException" />
      <apidata name="LayoutCycleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LayoutCycleException" />
      </containers>
      <file name="9b77445a-ee51-93a3-e44d-1a2521dd32cf" />
    </api>
    <api id="Methods.T:System.Windows.LayoutCycleException">
      <topicdata name="LayoutCycleException" group="list" subgroup="Methods" typeTopicId="T:System.Windows.LayoutCycleException" />
      <apidata name="LayoutCycleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LayoutCycleException" />
      </containers>
      <file name="05f0f236-8205-99e9-1b65-4286d3aed2fd" />
    </api>
    <api id="Properties.T:System.Windows.LayoutCycleException">
      <topicdata name="LayoutCycleException" group="list" subgroup="Properties" typeTopicId="T:System.Windows.LayoutCycleException" />
      <apidata name="LayoutCycleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LayoutCycleException" />
      </containers>
      <file name="23137fac-a3b3-8b77-4751-acef1d9c3f01" />
    </api>
    <api id="T:System.Windows.LineStackingStrategy">
      <topicdata group="api" />
      <apidata name="LineStackingStrategy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.LineStackingStrategy.MaxHeight" />
        <element api="F:System.Windows.LineStackingStrategy.BlockLineHeight" />
        <element api="F:System.Windows.LineStackingStrategy.BaselineToBaseline" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="1abf4532-abe0-663c-28f1-91f33ac55799" />
    </api>
    <api id="F:System.Windows.LineStackingStrategy.BaselineToBaseline">
      <topicdata group="api" notopic="" />
      <apidata name="BaselineToBaseline" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </containers>
      <file name="5eca15f1-023b-c540-ab1b-b6442e6b640a" />
    </api>
    <api id="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <topicdata group="api" notopic="" />
      <apidata name="BlockLineHeight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </containers>
      <file name="b4608232-b05d-43f7-b33a-d84aa3f8d998" />
    </api>
    <api id="F:System.Windows.LineStackingStrategy.MaxHeight">
      <topicdata group="api" notopic="" />
      <apidata name="MaxHeight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.LineStackingStrategy" ref="false" />
      </containers>
      <file name="98fd43dd-d27d-16e5-af71-432e1f80204f" />
    </api>
    <api id="T:System.Windows.MediaFailedRoutedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.MediaFailedRoutedEventArgs" />
      <apidata name="MediaFailedRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.ExceptionRoutedEventArgs" ref="true" />
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="ba7aeace-6971-9286-45cb-af8c08892c47" />
    </api>
    <api id="AllMembers.T:System.Windows.MediaFailedRoutedEventArgs">
      <topicdata name="MediaFailedRoutedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.MediaFailedRoutedEventArgs" />
      <apidata name="MediaFailedRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.ExceptionRoutedEventArgs.ErrorException" />
        <element api="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MediaFailedRoutedEventArgs" />
      </containers>
      <file name="6b6d29b0-cf5d-da6f-62f8-9c372a59995f" />
    </api>
    <api id="Methods.T:System.Windows.MediaFailedRoutedEventArgs">
      <topicdata name="MediaFailedRoutedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.MediaFailedRoutedEventArgs" />
      <apidata name="MediaFailedRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MediaFailedRoutedEventArgs" />
      </containers>
      <file name="53709485-31c1-3bdf-387f-0cad172e6a41" />
    </api>
    <api id="Properties.T:System.Windows.MediaFailedRoutedEventArgs">
      <topicdata name="MediaFailedRoutedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.MediaFailedRoutedEventArgs" />
      <apidata name="MediaFailedRoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.ExceptionRoutedEventArgs.ErrorException" />
        <element api="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MediaFailedRoutedEventArgs" />
      </containers>
      <file name="c2957b17-21df-5b33-439d-8d9c47ed5e0e" />
    </api>
    <api id="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace">
      <topicdata group="api" />
      <apidata name="ErrorTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MediaFailedRoutedEventArgs" ref="true" />
      </containers>
      <file name="58b9aeb3-993f-bb86-3eeb-53d5fb16c9fa" />
    </api>
    <api id="T:System.Windows.MediaFailedRoutedEventHandler">
      <topicdata group="api" />
      <apidata name="MediaFailedRoutedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.MediaFailedRoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="76ac9ea4-2a41-8b70-f8bb-a5d618c96560" />
    </api>
    <api id="T:System.Windows.MessageBox">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.MessageBox" />
      <apidata name="MessageBox" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="866a465f-c2dc-ac27-c7eb-c8f72c50cb59" />
    </api>
    <api id="AllMembers.T:System.Windows.MessageBox">
      <topicdata name="MessageBox" group="list" subgroup="members" typeTopicId="T:System.Windows.MessageBox" />
      <apidata name="MessageBox" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.MessageBox.Show">
          <element api="M:System.Windows.MessageBox.Show(System.String)" />
          <element api="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBox" />
      </containers>
      <file name="54abf505-de19-8d65-6aa2-1b791b0b9b39" />
    </api>
    <api id="Methods.T:System.Windows.MessageBox">
      <topicdata name="MessageBox" group="list" subgroup="Methods" typeTopicId="T:System.Windows.MessageBox" />
      <apidata name="MessageBox" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.MessageBox.Show">
          <element api="M:System.Windows.MessageBox.Show(System.String)" />
          <element api="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBox" />
      </containers>
      <file name="221cc5f2-c22a-1adf-66af-b423eb25965c" />
    </api>
    <api id="Overload:System.Windows.MessageBox.Show">
      <topicdata name="Show" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.MessageBox" />
      <apidata name="Show" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.MessageBox.Show(System.String)" />
        <element api="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBox" ref="true" />
      </containers>
      <file name="a3f29ff9-b829-79ac-cdeb-ad53bf0392fc" />
    </api>
    <api id="M:System.Windows.MessageBox.Show(System.String)">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.MessageBox.Show" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageBoxText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBox" ref="true" />
      </containers>
      <file name="02ae0dd3-86a9-5a88-675d-404d2bc72e2a" />
    </api>
    <api id="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <topicdata group="api" />
      <apidata name="Show" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.MessageBox.Show" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageBoxText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="caption">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="button">
          <type api="T:System.Windows.MessageBoxButton" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBox" ref="true" />
      </containers>
      <file name="d4712d75-3050-3d72-2893-2ca5c7d8b8ac" />
    </api>
    <api id="T:System.Windows.MessageBoxButton">
      <topicdata group="api" />
      <apidata name="MessageBoxButton" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.MessageBoxButton.OK" />
        <element api="F:System.Windows.MessageBoxButton.OKCancel" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5233cf57-502d-3a23-9b77-bb5e12cd2ed0" />
    </api>
    <api id="F:System.Windows.MessageBoxButton.OK">
      <topicdata group="api" notopic="" />
      <apidata name="OK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxButton" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxButton" ref="false" />
      </containers>
      <file name="63794d6f-c6ff-3b79-07fa-2738f29edcac" />
    </api>
    <api id="F:System.Windows.MessageBoxButton.OKCancel">
      <topicdata group="api" notopic="" />
      <apidata name="OKCancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxButton" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxButton" ref="false" />
      </containers>
      <file name="8a6da8f6-e957-fffe-cfac-ce337d4d447f" />
    </api>
    <api id="T:System.Windows.MessageBoxResult">
      <topicdata group="api" />
      <apidata name="MessageBoxResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.MessageBoxResult.None" />
        <element api="F:System.Windows.MessageBoxResult.OK" />
        <element api="F:System.Windows.MessageBoxResult.Cancel" />
        <element api="F:System.Windows.MessageBoxResult.Yes" />
        <element api="F:System.Windows.MessageBoxResult.No" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="8b552752-50cf-56a5-754e-6fe8fe02721f" />
    </api>
    <api id="F:System.Windows.MessageBoxResult.Cancel">
      <topicdata group="api" notopic="" />
      <apidata name="Cancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </containers>
      <file name="5b7ec64d-1ca9-c584-dffb-fdd8de056581" />
    </api>
    <api id="F:System.Windows.MessageBoxResult.No">
      <topicdata group="api" notopic="" />
      <apidata name="No" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </containers>
      <file name="469b26de-beb3-16c9-1532-7ff6cc85ce8f" />
    </api>
    <api id="F:System.Windows.MessageBoxResult.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </containers>
      <file name="85584d26-16b8-798e-b8a5-da7fa1c0c7cf" />
    </api>
    <api id="F:System.Windows.MessageBoxResult.OK">
      <topicdata group="api" notopic="" />
      <apidata name="OK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </containers>
      <file name="040ca719-f714-9517-cb90-b5e9347eded4" />
    </api>
    <api id="F:System.Windows.MessageBoxResult.Yes">
      <topicdata group="api" notopic="" />
      <apidata name="Yes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.MessageBoxResult" ref="false" />
      </containers>
      <file name="bff11a03-a256-806a-44b2-9e230cff1262" />
    </api>
    <api id="T:System.Windows.NullableBoolConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.NullableBoolConverter" />
      <apidata name="NullableBoolConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.NullableBoolConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5e6aa080-6b67-0126-9048-3bc146de69c9" />
    </api>
    <api id="AllMembers.T:System.Windows.NullableBoolConverter">
      <topicdata name="NullableBoolConverter" group="list" subgroup="members" typeTopicId="T:System.Windows.NullableBoolConverter" />
      <apidata name="NullableBoolConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.NullableBoolConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.NullableBoolConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.NullableBoolConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.NullableBoolConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.NullableBoolConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
        <element api="M:System.Windows.NullableBoolConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" />
      </containers>
      <file name="25599e0d-2120-2b2b-0674-f55bc7abc4a8" />
    </api>
    <api id="Methods.T:System.Windows.NullableBoolConverter">
      <topicdata name="NullableBoolConverter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.NullableBoolConverter" />
      <apidata name="NullableBoolConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.NullableBoolConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.NullableBoolConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.NullableBoolConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.NullableBoolConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.NullableBoolConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" />
      </containers>
      <file name="e526b808-8a27-5236-764b-fc7e8966050d" />
    </api>
    <api id="Overload:System.Windows.NullableBoolConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.NullableBoolConverter" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" ref="true" />
      </containers>
      <file name="9833d5a8-67a4-b784-bf2e-1efa17372b7c" />
    </api>
    <api id="Overload:System.Windows.NullableBoolConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.NullableBoolConverter" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" ref="true" />
      </containers>
      <file name="c835a491-51e7-bf78-e567-c6fbe78d6582" />
    </api>
    <api id="M:System.Windows.NullableBoolConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" ref="true" />
      </containers>
      <file name="14f35ab6-bc20-500a-c0e4-12ba2086371d" />
    </api>
    <api id="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.NullableBoolConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" ref="true" />
      </containers>
      <file name="7c8c58e5-779c-e68f-00bd-7ea58a52e039" />
    </api>
    <api id="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.NullableBoolConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.NullableBoolConverter" ref="true" />
      </containers>
      <file name="e4fce3d9-6c27-efa7-5eca-52dd664f5eb5" />
    </api>
    <api id="T:System.Windows.Point">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Point" />
      <apidata name="Point" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IFormattable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="77322091-fc17-3d51-6123-16b1bcfd7087" />
    </api>
    <api id="AllMembers.T:System.Windows.Point">
      <topicdata name="Point" group="list" subgroup="members" typeTopicId="T:System.Windows.Point" />
      <apidata name="Point" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Point.#ctor(System.Double,System.Double)" />
        <element api="Overload:System.Windows.Point.Equals">
          <element api="M:System.Windows.Point.Equals(System.Object)" />
          <element api="M:System.Windows.Point.Equals(System.Windows.Point)" />
        </element>
        <element api="M:System.Windows.Point.GetHashCode" />
        <element api="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
        <element api="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
        <element api="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Point.ToString">
          <element api="M:System.Windows.Point.ToString" />
          <element api="M:System.Windows.Point.ToString(System.IFormatProvider)" />
        </element>
        <element api="P:System.Windows.Point.X" />
        <element api="P:System.Windows.Point.Y" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" />
      </containers>
      <file name="fa40e669-6327-7f9a-ffdc-0d557b792051" />
    </api>
    <api id="Methods.T:System.Windows.Point">
      <topicdata name="Point" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Point" />
      <apidata name="Point" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Point.Equals">
          <element api="M:System.Windows.Point.Equals(System.Object)" />
          <element api="M:System.Windows.Point.Equals(System.Windows.Point)" />
        </element>
        <element api="M:System.Windows.Point.GetHashCode" />
        <element api="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Point.ToString">
          <element api="M:System.Windows.Point.ToString" />
          <element api="M:System.Windows.Point.ToString(System.IFormatProvider)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" />
      </containers>
      <file name="9a6ecd47-9243-75c7-9ebe-35959b3b54c7" />
    </api>
    <api id="Operators.T:System.Windows.Point">
      <topicdata name="Point" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Point" />
      <apidata name="Point" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)" />
        <element api="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" />
      </containers>
      <file name="ec38c4eb-aebf-30e8-ae95-37286a25dd4f" />
    </api>
    <api id="Properties.T:System.Windows.Point">
      <topicdata name="Point" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Point" />
      <apidata name="Point" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Point.X" />
        <element api="P:System.Windows.Point.Y" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" />
      </containers>
      <file name="11e88f35-9801-c6b3-fd8c-4e0fd485f09a" />
    </api>
    <api id="Overload:System.Windows.Point.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Point" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Point.Equals(System.Object)" />
        <element api="M:System.Windows.Point.Equals(System.Windows.Point)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="c94eb76b-52d0-0bea-c1db-e9db764c4c0d" />
    </api>
    <api id="Overload:System.Windows.Point.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Point" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Point.ToString" />
        <element api="M:System.Windows.Point.ToString(System.IFormatProvider)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="506a891c-be08-58c1-0583-f2601a057a24" />
    </api>
    <api id="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="7a73f06f-2659-03a8-ba8a-73df384c5b12" />
    </api>
    <api id="M:System.Windows.Point.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Point.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="e2861fcc-aed7-89d6-9977-99b561842bbc" />
    </api>
    <api id="M:System.Windows.Point.Equals(System.Windows.Point)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Point.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="7f3aacc7-3b8e-a2d2-56c1-cdce3424b0ed" />
    </api>
    <api id="M:System.Windows.Point.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="f0d7eda1-67f1-db88-9fbd-70dcf3e1ad3f" />
    </api>
    <api id="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point1">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
        <parameter name="point2">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="f3287110-8bf6-1914-bf30-43f7cdd30a92" />
    </api>
    <api id="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point1">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
        <parameter name="point2">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="f471cc5f-42fe-db1a-95c7-b5f785ab2f7d" />
    </api>
    <api id="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <topicdata group="api" eiiName="IFormattable.ToString" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="753fa45c-fb51-8b31-0d74-dcdb3ac21cc0" />
    </api>
    <api id="M:System.Windows.Point.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Point.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="8de2b095-345f-10b9-b120-8637543604cd" />
    </api>
    <api id="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Point.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="7e0905e2-055e-2848-f6bb-5ff2162cb1a7" />
    </api>
    <api id="P:System.Windows.Point.X">
      <topicdata group="api" />
      <apidata name="X" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_X" />
      <setter name="set_X" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="03a96e55-bf44-eab3-a843-b24a20cf8973" />
    </api>
    <api id="P:System.Windows.Point.Y">
      <topicdata group="api" />
      <apidata name="Y" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Y" />
      <setter name="set_Y" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Point" ref="false" />
      </containers>
      <file name="4eb9420a-8cdb-ab27-3e2e-e7d3924abed4" />
    </api>
    <api id="T:System.Windows.PresentationFrameworkCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="PresentationFrameworkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
          <type api="T:System.Windows.Controls.UIElementCollection" ref="true" />
          <type api="T:System.Windows.Controls.RowDefinitionCollection" ref="true" />
          <type api="T:System.Windows.Controls.ColumnDefinitionCollection" ref="true" />
          <type api="T:System.Windows.Input.StylusPointCollection" ref="true" />
          <type api="T:System.Windows.Input.TouchPointCollection" ref="true" />
          <type api="T:System.Windows.ExternalPartCollection" ref="true" />
          <type api="T:System.Windows.SetterBaseCollection" ref="true" />
          <type api="T:System.Windows.TriggerCollection" ref="true" />
          <type api="T:System.Windows.TriggerActionCollection" ref="true" />
          <type api="T:System.Windows.AssemblyPartCollection" ref="true" />
          <type api="T:System.Windows.IconCollection" ref="true" />
          <type api="T:System.Windows.Media.DoubleCollection" ref="true" />
          <type api="T:System.Windows.Media.PointCollection" ref="true" />
          <type api="T:System.Windows.Media.TransformCollection" ref="true" />
          <type api="T:System.Windows.Media.PathSegmentCollection" ref="true" />
          <type api="T:System.Windows.Media.PathFigureCollection" ref="true" />
          <type api="T:System.Windows.Media.GeometryCollection" ref="true" />
          <type api="T:System.Windows.Media.GradientStopCollection" ref="true" />
          <type api="T:System.Windows.Media.TimelineMarkerCollection" ref="true" />
          <type api="T:System.Windows.Media.VideoCaptureDeviceCollection" ref="true" />
          <type api="T:System.Windows.Media.AudioCaptureDeviceCollection" ref="true" />
          <type api="T:System.Windows.Media.Animation.ColorKeyFrameCollection" ref="true" />
          <type api="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" ref="true" />
          <type api="T:System.Windows.Media.Animation.PointKeyFrameCollection" ref="true" />
          <type api="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" ref="true" />
          <type api="T:System.Windows.Media.Animation.TimelineCollection" ref="true" />
          <type api="T:System.Windows.Documents.TextElementCollection`1" ref="true" />
          <type api="T:System.Windows.Ink.StrokeCollection" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="ab9fdc67-1247-862e-3171-2f318736369d" />
    </api>
    <api id="AllMembers.T:System.Windows.PresentationFrameworkCollection`1">
      <topicdata name="PresentationFrameworkCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="PresentationFrameworkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.PresentationFrameworkCollection`1.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="F:System.Windows.PresentationFrameworkCollection`1.CountProperty" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" />
      </containers>
      <file name="3de2826d-7f9f-774c-1724-3e3421902cdb" />
    </api>
    <api id="Methods.T:System.Windows.PresentationFrameworkCollection`1">
      <topicdata name="PresentationFrameworkCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="PresentationFrameworkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.PresentationFrameworkCollection`1.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" />
      </containers>
      <file name="9d1b0d4d-e823-9edf-e4a5-6d0f010e41ea" />
    </api>
    <api id="Properties.T:System.Windows.PresentationFrameworkCollection`1">
      <topicdata name="PresentationFrameworkCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="PresentationFrameworkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" />
      </containers>
      <file name="f09b87b2-4214-d12e-b515-a8c58e541afc" />
    </api>
    <api id="Fields.T:System.Windows.PresentationFrameworkCollection`1">
      <topicdata name="PresentationFrameworkCollection" group="list" subgroup="Fields" typeTopicId="T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="PresentationFrameworkCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:System.Windows.PresentationFrameworkCollection`1.CountProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" />
      </containers>
      <file name="99cb2016-0367-3b69-8ea8-c3dcbd126d45" />
    </api>
    <api id="Overload:System.Windows.PresentationFrameworkCollection`1.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.PresentationFrameworkCollection`1" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="53ebb42a-3692-4567-6447-7e5b8f8ea6fd" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="1373a756-691f-fdc9-5ce6-fdf3f2e9a77b" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="3a5553aa-94bf-add9-d840-10c9a2d0796e" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="5f07dacc-4fce-577a-cd64-c1142903352e" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.PresentationFrameworkCollection`1.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="1cf9e375-d69f-cb38-ff12-ed964a0caae4" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.PresentationFrameworkCollection`1.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="a2d8a52a-8b3b-a04e-c918-74ca55a1304b" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="93655082-97cd-109f-11e1-ae9a29a3e6b5" />
    </api>
    <api id="F:System.Windows.PresentationFrameworkCollection`1.CountProperty">
      <topicdata group="api" />
      <apidata name="CountProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="40fcbe0c-ef54-d6ca-e078-389a7fae65cb" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="e7765edb-9143-919b-fa3c-619b05fc5884" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="0152f291-83a7-67a1-e290-2e225242264a" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="3fb29b82-60fa-5865-83ce-4bacd357bcf3" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="0f7c62c5-299b-57ef-d995-52d5d0f1153b" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="6e98f507-eafa-0ef5-4303-589c10a78eb7" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="9d43346f-9d7e-5db8-67c1-f650857cf3e6" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="a34e6d94-db18-deb4-5e14-645480fe6559" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="61840374-bf14-fe41-2a74-28901eed44c0" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.PresentationFrameworkCollection`1" />
            </specialization>
          </type>
        </member>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="eba43b59-1255-34ad-517b-a4911645487f" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="0efd4066-aea8-c69d-289b-b7fcf422eee6" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="f1cd7581-3c62-4a3b-2e4d-197f3ef8a816" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="60801418-a19d-f4de-2c7d-75629a07755e" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="70ef1bf5-cfdc-f453-f65c-815c53b5ad68" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="5dee8b10-f935-c7ca-9f2b-f22c5c593d69" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="33166e25-ddb5-53d6-0719-fc97ed21ea0f" />
    </api>
    <api id="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="f2210472-7a2d-653b-9a34-c3f7317efd08" />
    </api>
    <api id="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true" />
      </containers>
      <file name="fc83d15c-d465-ffb0-cc98-991bde1f135a" />
    </api>
    <api id="T:System.Windows.PropertyChangedCallback">
      <topicdata group="api" />
      <apidata name="PropertyChangedCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.DependencyPropertyChangedEventArgs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="a0792257-5c9f-ed17-f344-0f9fa3845e28" />
    </api>
    <api id="T:System.Windows.PropertyMetadata">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="f4cb95e6-b553-42fa-f86b-a0bd38bd39cb" />
    </api>
    <api id="AllMembers.T:System.Windows.PropertyMetadata">
      <topicdata name="PropertyMetadata" group="list" subgroup="members" typeTopicId="T:System.Windows.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.PropertyMetadata.#ctor">
          <element api="M:System.Windows.PropertyMetadata.#ctor(System.Object)" />
          <element api="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)" />
          <element api="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)" />
        </element>
        <element api="P:System.Windows.PropertyMetadata.DefaultValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" />
      </containers>
      <file name="c7d6af0e-37d6-a225-9e62-98b87c1d7892" />
    </api>
    <api id="Methods.T:System.Windows.PropertyMetadata">
      <topicdata name="PropertyMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Windows.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" />
      </containers>
      <file name="9347d7ac-fc3c-caf6-6ace-0b9dc7d38d60" />
    </api>
    <api id="Properties.T:System.Windows.PropertyMetadata">
      <topicdata name="PropertyMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Windows.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.PropertyMetadata.DefaultValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" />
      </containers>
      <file name="ecfed58f-f725-059b-0461-352865b3791a" />
    </api>
    <api id="Overload:System.Windows.PropertyMetadata.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.PropertyMetadata" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.PropertyMetadata.#ctor(System.Object)" />
        <element api="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)" />
        <element api="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </containers>
      <file name="69f30ee5-e8e3-ffa2-aa7a-fce2fc2f1bd3" />
    </api>
    <api id="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </containers>
      <file name="84382741-5326-7c10-506b-35be9a13bcca" />
    </api>
    <api id="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyChangedCallback">
          <type api="T:System.Windows.PropertyChangedCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </containers>
      <file name="e277c3ef-17d6-f8df-19ac-9cda17aa54f2" />
    </api>
    <api id="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="propertyChangedCallback">
          <type api="T:System.Windows.PropertyChangedCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </containers>
      <file name="39d0bb84-7971-54b3-0803-48c0d4dedbde" />
    </api>
    <api id="P:System.Windows.PropertyMetadata.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyMetadata" ref="true" />
      </containers>
      <file name="0c02abf5-abc9-6458-5fa8-a332eddb109e" />
    </api>
    <api id="T:System.Windows.PropertyPath">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.PropertyPath" />
      <apidata name="PropertyPath" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5ef62f91-9255-e766-01f1-f3b9b3348e5c" />
    </api>
    <api id="AllMembers.T:System.Windows.PropertyPath">
      <topicdata name="PropertyPath" group="list" subgroup="members" typeTopicId="T:System.Windows.PropertyPath" />
      <apidata name="PropertyPath" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.PropertyPath.#ctor">
          <element api="M:System.Windows.PropertyPath.#ctor(System.Object)" />
          <element api="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
        </element>
        <element api="P:System.Windows.PropertyPath.Path" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" />
      </containers>
      <file name="e0715880-6b2b-e2d7-b221-682cc3d3e287" />
    </api>
    <api id="Methods.T:System.Windows.PropertyPath">
      <topicdata name="PropertyPath" group="list" subgroup="Methods" typeTopicId="T:System.Windows.PropertyPath" />
      <apidata name="PropertyPath" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" />
      </containers>
      <file name="f94b4357-271a-a472-99b6-f6a3f0018ff0" />
    </api>
    <api id="Properties.T:System.Windows.PropertyPath">
      <topicdata name="PropertyPath" group="list" subgroup="Properties" typeTopicId="T:System.Windows.PropertyPath" />
      <apidata name="PropertyPath" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.PropertyPath.Path" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" />
      </containers>
      <file name="b09d1e3c-4a02-9e13-d434-5bdc97eb640b" />
    </api>
    <api id="Overload:System.Windows.PropertyPath.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.PropertyPath" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.PropertyPath.#ctor(System.Object)" />
        <element api="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" ref="true" />
      </containers>
      <file name="1693be4b-2f37-3ff4-9ba0-76f5df72e6ff" />
    </api>
    <api id="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.PropertyPath.#ctor" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" ref="true" />
      </containers>
      <file name="5b0b5175-be95-307a-d85c-e8afad8a7c81" />
    </api>
    <api id="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.PropertyPath.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pathParameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" ref="true" />
      </containers>
      <file name="01e85592-73e4-43ed-b1aa-014e41f4a0aa" />
    </api>
    <api id="P:System.Windows.PropertyPath.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPath" ref="true" />
      </containers>
      <file name="bf57ae85-6675-2d66-e6ed-ebcb5debd878" />
    </api>
    <api id="T:System.Windows.PropertyPathConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.PropertyPathConverter" />
      <apidata name="PropertyPathConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.PropertyPathConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="2eca498a-8280-6b52-a4f0-2855ef92840c" />
    </api>
    <api id="AllMembers.T:System.Windows.PropertyPathConverter">
      <topicdata name="PropertyPathConverter" group="list" subgroup="members" typeTopicId="T:System.Windows.PropertyPathConverter" />
      <apidata name="PropertyPathConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.PropertyPathConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.PropertyPathConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.PropertyPathConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.PropertyPathConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.PropertyPathConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
        <element api="M:System.Windows.PropertyPathConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" />
      </containers>
      <file name="c35c159b-fb7b-c2b9-c537-a6870b222b11" />
    </api>
    <api id="Methods.T:System.Windows.PropertyPathConverter">
      <topicdata name="PropertyPathConverter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.PropertyPathConverter" />
      <apidata name="PropertyPathConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.PropertyPathConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.PropertyPathConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.PropertyPathConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Windows.PropertyPathConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
        <element api="Overload:System.Windows.PropertyPathConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" />
      </containers>
      <file name="5a211ef0-416b-457f-5d9d-f5bf9d1e2559" />
    </api>
    <api id="Overload:System.Windows.PropertyPathConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.PropertyPathConverter" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" ref="true" />
      </containers>
      <file name="51349efd-ad89-31ab-93aa-a07a661f1534" />
    </api>
    <api id="Overload:System.Windows.PropertyPathConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.PropertyPathConverter" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" ref="true" />
      </containers>
      <file name="6226e038-bdde-b9e8-c0d4-83fa5afb1b48" />
    </api>
    <api id="M:System.Windows.PropertyPathConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" ref="true" />
      </containers>
      <file name="ad49253b-217b-5486-9d2f-42b1178fd90c" />
    </api>
    <api id="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.PropertyPathConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" ref="true" />
      </containers>
      <file name="37408cca-0911-031a-b172-6c3e3ad56303" />
    </api>
    <api id="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.PropertyPathConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.PropertyPathConverter" ref="true" />
      </containers>
      <file name="9221d685-8cfa-9e00-a934-7e6418b04c36" />
    </api>
    <api id="T:System.Windows.Rect">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Rect" />
      <apidata name="Rect" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <implements>
        <type api="T:System.IFormattable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="6f7a38fc-1c7a-5628-7fcc-11b134dcdc98" />
    </api>
    <api id="AllMembers.T:System.Windows.Rect">
      <topicdata name="Rect" group="list" subgroup="members" typeTopicId="T:System.Windows.Rect" />
      <apidata name="Rect" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Rect.#ctor">
          <element api="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
          <element api="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
          <element api="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
        </element>
        <element api="P:System.Windows.Rect.Bottom" />
        <element api="M:System.Windows.Rect.Contains(System.Windows.Point)" />
        <element api="P:System.Windows.Rect.Empty" />
        <element api="Overload:System.Windows.Rect.Equals">
          <element api="M:System.Windows.Rect.Equals(System.Object)" />
          <element api="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.Rect.GetHashCode" />
        <element api="P:System.Windows.Rect.Height" />
        <element api="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
        <element api="P:System.Windows.Rect.IsEmpty" />
        <element api="P:System.Windows.Rect.Left" />
        <element api="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <element api="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
        <element api="P:System.Windows.Rect.Right" />
        <element api="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="P:System.Windows.Rect.Top" />
        <element api="Overload:System.Windows.Rect.ToString">
          <element api="M:System.Windows.Rect.ToString" />
          <element api="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
        </element>
        <element api="Overload:System.Windows.Rect.Union">
          <element api="M:System.Windows.Rect.Union(System.Windows.Point)" />
          <element api="M:System.Windows.Rect.Union(System.Windows.Rect)" />
        </element>
        <element api="P:System.Windows.Rect.Width" />
        <element api="P:System.Windows.Rect.X" />
        <element api="P:System.Windows.Rect.Y" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" />
      </containers>
      <file name="231e69ad-5b1b-269d-c9a8-e6747aa6462f" />
    </api>
    <api id="Methods.T:System.Windows.Rect">
      <topicdata name="Rect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Rect" />
      <apidata name="Rect" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Rect.Contains(System.Windows.Point)" />
        <element api="Overload:System.Windows.Rect.Equals">
          <element api="M:System.Windows.Rect.Equals(System.Object)" />
          <element api="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
        </element>
        <element api="M:System.Windows.Rect.GetHashCode" />
        <element api="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
        <element api="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
        <element api="Overload:System.Windows.Rect.ToString">
          <element api="M:System.Windows.Rect.ToString" />
          <element api="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
        </element>
        <element api="Overload:System.Windows.Rect.Union">
          <element api="M:System.Windows.Rect.Union(System.Windows.Point)" />
          <element api="M:System.Windows.Rect.Union(System.Windows.Rect)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" />
      </containers>
      <file name="25669625-fb77-73c2-fc4d-13c69f950ae6" />
    </api>
    <api id="Operators.T:System.Windows.Rect">
      <topicdata name="Rect" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Rect" />
      <apidata name="Rect" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <element api="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" />
      </containers>
      <file name="5a0f69e8-c17a-c15c-79b4-edcae382f5e7" />
    </api>
    <api id="Properties.T:System.Windows.Rect">
      <topicdata name="Rect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Rect" />
      <apidata name="Rect" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Rect.Bottom" />
        <element api="P:System.Windows.Rect.Empty" />
        <element api="P:System.Windows.Rect.Height" />
        <element api="P:System.Windows.Rect.IsEmpty" />
        <element api="P:System.Windows.Rect.Left" />
        <element api="P:System.Windows.Rect.Right" />
        <element api="P:System.Windows.Rect.Top" />
        <element api="P:System.Windows.Rect.Width" />
        <element api="P:System.Windows.Rect.X" />
        <element api="P:System.Windows.Rect.Y" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" />
      </containers>
      <file name="86bea6a4-7f96-81d4-95bd-a7f5603b5af2" />
    </api>
    <api id="Overload:System.Windows.Rect.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Rect" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
        <element api="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
        <element api="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="49fe1bb6-801b-4761-c9f1-a7fa4e192368" />
    </api>
    <api id="Overload:System.Windows.Rect.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Rect" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Rect.Equals(System.Object)" />
        <element api="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="fa5737b6-6d13-44e9-9ba3-2e4fff9cdaca" />
    </api>
    <api id="Overload:System.Windows.Rect.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Rect" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Rect.ToString" />
        <element api="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="5638375a-3dff-f037-ed4d-debd086d9c5b" />
    </api>
    <api id="Overload:System.Windows.Rect.Union">
      <topicdata name="Union" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Rect" />
      <apidata name="Union" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Rect.Union(System.Windows.Point)" />
        <element api="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="0f4a4f47-6fb8-c2e0-37e5-9a119c2b87fc" />
    </api>
    <api id="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Rect.#ctor" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="aa072646-2ce5-5c19-9221-4797d0265b0a" />
    </api>
    <api id="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Rect.#ctor" />
      <parameters>
        <parameter name="point1">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
        <parameter name="point2">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="2b4c8bee-e39b-195c-b674-7f6d9620dcfa" />
    </api>
    <api id="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Rect.#ctor" />
      <parameters>
        <parameter name="location">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="691d947e-bf4e-46dd-4ca6-ac535c4e75ac" />
    </api>
    <api id="P:System.Windows.Rect.Bottom">
      <topicdata group="api" />
      <apidata name="Bottom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bottom" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="78c829ff-e6ce-dd2a-e658-d94c74a2137c" />
    </api>
    <api id="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="2b332b34-edde-c7b2-7b48-c54e991d511f" />
    </api>
    <api id="P:System.Windows.Rect.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Empty" />
      <returns>
        <type api="T:System.Windows.Rect" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="41e791d7-f43a-b08d-545c-9f7bc9699a95" />
    </api>
    <api id="M:System.Windows.Rect.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="4e5485bd-8943-9ff1-a494-be3905b5df67" />
    </api>
    <api id="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="779af661-3386-b576-5ef2-5949ba93452f" />
    </api>
    <api id="M:System.Windows.Rect.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="40d8a26f-dfdf-2c14-f65c-33644924512f" />
    </api>
    <api id="P:System.Windows.Rect.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="538691fc-67cc-b106-7cec-8ff912993941" />
    </api>
    <api id="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rect">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="e9252c04-830e-4931-d0b9-ee8dfb48f3cc" />
    </api>
    <api id="P:System.Windows.Rect.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="38574f9c-5947-1053-d774-24cd528096b8" />
    </api>
    <api id="P:System.Windows.Rect.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Left" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="e85ea85c-6d24-0e08-1ded-989196031b22" />
    </api>
    <api id="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rect1">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
        <parameter name="rect2">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="079691c1-d8ce-f81d-83cb-a52db5fda312" />
    </api>
    <api id="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rect1">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
        <parameter name="rect2">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="3390cede-071a-8e1e-66b4-55746fced195" />
    </api>
    <api id="P:System.Windows.Rect.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Right" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="26dabd49-c81f-58ff-1b2a-713bbdacfbc7" />
    </api>
    <api id="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <topicdata group="api" eiiName="IFormattable.ToString" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="0046b592-135b-b282-a2e9-a72e210cf1e5" />
    </api>
    <api id="P:System.Windows.Rect.Top">
      <topicdata group="api" />
      <apidata name="Top" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Top" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="62a1c8a3-dfc3-08a2-a148-79d3c05935de" />
    </api>
    <api id="M:System.Windows.Rect.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="634f3276-f4e1-f3e2-f009-ab275999cc62" />
    </api>
    <api id="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="40e97c98-410c-3adf-a7b1-3e5dee68f00b" />
    </api>
    <api id="M:System.Windows.Rect.Union(System.Windows.Point)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.Union" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="point">
          <type api="T:System.Windows.Point" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="e4d69a4f-56e3-40b2-10e3-55e22fbe80e4" />
    </api>
    <api id="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Rect.Union" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rect">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="f246ed59-e861-07c0-7830-b1f3e85da607" />
    </api>
    <api id="P:System.Windows.Rect.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="d8efc6fc-cb76-c244-1edf-1e487e64c5d9" />
    </api>
    <api id="P:System.Windows.Rect.X">
      <topicdata group="api" />
      <apidata name="X" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_X" />
      <setter name="set_X" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="f57814e4-8400-9fbb-e278-c1ffdb13eae4" />
    </api>
    <api id="P:System.Windows.Rect.Y">
      <topicdata group="api" />
      <apidata name="Y" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Y" />
      <setter name="set_Y" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Rect" ref="false" />
      </containers>
      <file name="04323e7e-012d-4649-6be9-36f754663534" />
    </api>
    <api id="T:System.Windows.ResourceDictionary">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.ResourceDictionary" />
      <apidata name="ResourceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ResourceDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="ee92d908-0a7e-1615-4e9d-db270171747d" />
    </api>
    <api id="AllMembers.T:System.Windows.ResourceDictionary">
      <topicdata name="ResourceDictionary" group="list" subgroup="members" typeTopicId="T:System.Windows.ResourceDictionary" />
      <apidata name="ResourceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ResourceDictionary.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.Object" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.Object" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.Object" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.Object" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.ResourceDictionary.#ctor" />
        <element api="Overload:System.Windows.ResourceDictionary.Add">
          <element api="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)" />
          <element api="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)" />
        </element>
        <element api="M:System.Windows.ResourceDictionary.Clear" />
        <element api="M:System.Windows.ResourceDictionary.Contains(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Windows.ResourceDictionary.Count" />
        <element api="M:System.Windows.ResourceDictionary.GetEnumerator" />
        <element api="P:System.Windows.ResourceDictionary.IsFixedSize" />
        <element api="P:System.Windows.ResourceDictionary.IsReadOnly" />
        <element api="P:System.Windows.ResourceDictionary.Item(System.Object)" />
        <element api="P:System.Windows.ResourceDictionary.Keys" />
        <element api="P:System.Windows.ResourceDictionary.MergedDictionaries" />
        <element api="Overload:System.Windows.ResourceDictionary.Remove">
          <element api="M:System.Windows.ResourceDictionary.Remove(System.Object)" />
          <element api="M:System.Windows.ResourceDictionary.Remove(System.String)" />
        </element>
        <element api="P:System.Windows.ResourceDictionary.Source" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Clear" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Count" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#IsReadOnly" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Add(System.Object,System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#ContainsKey(System.Object)" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Item(System.Object)" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Keys" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Remove(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#TryGetValue(System.Object,System.Object@)" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Values" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#GetEnumerator" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Windows.ResourceDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" />
      </containers>
      <file name="a581f9cd-b4a4-4d27-8286-9576d033b01b" />
    </api>
    <api id="Methods.T:System.Windows.ResourceDictionary">
      <topicdata name="ResourceDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Windows.ResourceDictionary" />
      <apidata name="ResourceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ResourceDictionary.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.Object" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.Object" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.Object" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.Object" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.Object" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.Object" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Windows.ResourceDictionary.Add">
          <element api="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)" />
          <element api="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)" />
        </element>
        <element api="M:System.Windows.ResourceDictionary.Clear" />
        <element api="M:System.Windows.ResourceDictionary.Contains(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.ResourceDictionary.GetEnumerator" />
        <element api="Overload:System.Windows.ResourceDictionary.Remove">
          <element api="M:System.Windows.ResourceDictionary.Remove(System.Object)" />
          <element api="M:System.Windows.ResourceDictionary.Remove(System.String)" />
        </element>
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Clear" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Add(System.Object,System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#ContainsKey(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Remove(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#TryGetValue(System.Object,System.Object@)" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#GetEnumerator" />
        <element api="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" />
      </containers>
      <file name="d8b87aba-e7a0-1c5f-ec31-f97c708c6523" />
    </api>
    <api id="Properties.T:System.Windows.ResourceDictionary">
      <topicdata name="ResourceDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Windows.ResourceDictionary" />
      <apidata name="ResourceDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.ResourceDictionary.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.ResourceDictionary.Count" />
        <element api="P:System.Windows.ResourceDictionary.IsFixedSize" />
        <element api="P:System.Windows.ResourceDictionary.IsReadOnly" />
        <element api="P:System.Windows.ResourceDictionary.Item(System.Object)" />
        <element api="P:System.Windows.ResourceDictionary.Keys" />
        <element api="P:System.Windows.ResourceDictionary.MergedDictionaries" />
        <element api="P:System.Windows.ResourceDictionary.Source" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Count" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#IsReadOnly" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Item(System.Object)" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Keys" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Values" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.ResourceDictionary.Values" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" />
      </containers>
      <file name="bbc03e0d-893c-6fc9-69cf-62fc9273e2b5" />
    </api>
    <api id="Overload:System.Windows.ResourceDictionary.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.ResourceDictionary" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="2c9b4059-fa24-40c5-fec2-17bd79f2ee1a" />
    </api>
    <api id="Overload:System.Windows.ResourceDictionary.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.ResourceDictionary" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.ResourceDictionary.Remove(System.Object)" />
        <element api="M:System.Windows.ResourceDictionary.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="be1dc833-9405-8a84-5dbb-83b493810a58" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="c0f2e338-1964-b99a-96be-0a792cb32fe3" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.ResourceDictionary.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="5b4a451c-871f-a9e5-1713-09b396a41aa4" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.ResourceDictionary.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="4cc1046f-a072-b79e-54dc-b28d70dc2e42" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="a2d6d212-9aa7-d967-54ff-5a5a2ad01ba9" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="9396e882-0359-5164-4334-1568f997c6aa" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="f5aeb52d-50e0-c2d4-7519-01c256dc4333" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="9c6be90a-7b42-53ca-d6fc-f428b4f3a5b2" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="f397169e-2981-fdd7-96a1-6279f77854f1" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.IsFixedSize">
      <topicdata group="api" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="d9a2a9ec-9522-86cf-6456-6d84af697549" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="7a8c9b6b-4f6b-01d6-e305-d3c666bb0e62" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="3ae023fe-5d12-aa22-7260-35476e49dff1" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="e5dbd0d3-45e0-2329-2550-9d85d12eae95" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <topicdata group="api" />
      <apidata name="MergedDictionaries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MergedDictionaries" />
      <returns>
        <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.ResourceDictionary" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="d6af4b86-6914-448a-9711-aba2b4341e32" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.ResourceDictionary.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="2c9c6acc-743b-700d-517d-33e3a3961807" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.ResourceDictionary.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="0e2384b3-8009-136b-2ea8-02a995924f9d" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="11e670f3-af34-dbe8-9765-49397952b048" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <topicdata group="api" eiiName="ICollection.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="f42dcb03-825f-ab43-8f7e-e429cf1abc00" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Clear">
      <topicdata group="api" eiiName="ICollection.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="a576ca39-31bd-6dcc-5817-2385103029dc" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <topicdata group="api" eiiName="ICollection.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="3ea2b8db-b60b-4cfa-f045-3777e7261d03" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="927b8d3d-a22e-8320-e5d4-8fa033885c23" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="02c310f4-ce06-4260-cb07-cf49d868da1e" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Object,System.Object&gt;&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="6b03ac22-26eb-27de-380b-45a9e6cdf7ec" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <topicdata group="api" eiiName="ICollection.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="822ff3a2-413a-885b-2c3b-c6f2dca6d999" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Add(System.Object,System.Object)">
      <topicdata group="api" eiiName="IDictionary.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="11cca58f-061a-062c-3957-12afffbec8e8" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#ContainsKey(System.Object)">
      <topicdata group="api" eiiName="IDictionary.ContainsKey" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="38c05a87-d899-2f76-5c5d-1016d27cde6f" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Item(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Item" />
      <setter name="set_System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="52f7ffae-7f0d-2e34-46ba-209a57a133cc" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Keys">
      <topicdata group="api" eiiName="IDictionary.Keys" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="919ac16a-fdb2-248c-7c74-2da439205d9e" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Remove(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="d2fedf7f-b6cc-c048-c7e4-7095735f638d" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#TryGetValue(System.Object,System.Object@)">
      <topicdata group="api" eiiName="IDictionary.TryGetValue" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="bb1ab648-75ce-3e62-da72-93340c3ed592" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{System#Object@System#Object}#Values">
      <topicdata group="api" eiiName="IDictionary.Values" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.IDictionary&lt;System.Object,System.Object&gt;.Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="a2f70c81-8b27-ce1d-927c-0976b2ea7b34" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Object@System#Object}}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="4bebefe4-6a2e-9f59-7d13-f948427d0b00" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="65284ffd-0ea8-213e-4570-dd7e8ec1e806" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="d162f733-fd82-6330-0f50-bba7f731f3ff" />
    </api>
    <api id="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="bb70e311-66b2-83eb-3af9-965e71343971" />
    </api>
    <api id="P:System.Windows.ResourceDictionary.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.ResourceDictionary" ref="true" />
      </containers>
      <file name="d6217812-9c2d-6c40-6c3e-d11cea32ca95" />
    </api>
    <api id="T:System.Windows.RoutedEvent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.RoutedEvent" />
      <apidata name="RoutedEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="e9cf9414-c5a0-74ee-e26d-7d8a254f9d8a" />
    </api>
    <api id="AllMembers.T:System.Windows.RoutedEvent">
      <topicdata name="RoutedEvent" group="list" subgroup="members" typeTopicId="T:System.Windows.RoutedEvent" />
      <apidata name="RoutedEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.RoutedEvent.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEvent" />
      </containers>
      <file name="c7896c5f-3d4b-7534-166d-b8d36a253f55" />
    </api>
    <api id="Methods.T:System.Windows.RoutedEvent">
      <topicdata name="RoutedEvent" group="list" subgroup="Methods" typeTopicId="T:System.Windows.RoutedEvent" />
      <apidata name="RoutedEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.RoutedEvent.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEvent" />
      </containers>
      <file name="3e01482c-3c3e-75a5-c49b-ce7825baaa10" />
    </api>
    <api id="M:System.Windows.RoutedEvent.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </containers>
      <file name="3616fd9d-a5f3-52f6-c597-71380ca9e798" />
    </api>
    <api id="T:System.Windows.RoutedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.RoutedEventArgs" />
      <apidata name="RoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.RoutedEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Controls.ValidationErrorEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.SelectionChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.TextChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.ContentChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
          <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
          <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
          <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
          <type api="T:System.Windows.DragEventArgs" ref="true" />
          <type api="T:System.Windows.ExceptionRoutedEventArgs" ref="true" />
          <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true" />
          <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
          <type api="T:System.Windows.Media.TimelineMarkerRoutedEventArgs" ref="true" />
          <type api="T:System.Windows.Media.LogReadyRoutedEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.Primitives.DragStartedEventArgs" ref="true" />
          <type api="T:System.Windows.Controls.Primitives.ScrollEventArgs" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="f2eb8930-9e13-9dba-d80b-0a0dc115a6b7" />
    </api>
    <api id="AllMembers.T:System.Windows.RoutedEventArgs">
      <topicdata name="RoutedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.RoutedEventArgs" />
      <apidata name="RoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.RoutedEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.RoutedEventArgs.#ctor" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEventArgs" />
      </containers>
      <file name="d91dd29f-c156-f134-cdc3-9547915e6a59" />
    </api>
    <api id="Methods.T:System.Windows.RoutedEventArgs">
      <topicdata name="RoutedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.RoutedEventArgs" />
      <apidata name="RoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.RoutedEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEventArgs" />
      </containers>
      <file name="a0bda182-adc9-645c-3229-c65feb1f2eed" />
    </api>
    <api id="Properties.T:System.Windows.RoutedEventArgs">
      <topicdata name="RoutedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.RoutedEventArgs" />
      <apidata name="RoutedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.RoutedEventArgs.#ctor" />
      <elements>
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEventArgs" />
      </containers>
      <file name="f4966ddf-43e1-1778-9292-af1b1ba07472" />
    </api>
    <api id="M:System.Windows.RoutedEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </containers>
      <file name="0ad61efe-beb9-ea89-40c0-34bc3dc5775a" />
    </api>
    <api id="P:System.Windows.RoutedEventArgs.OriginalSource">
      <topicdata group="api" />
      <apidata name="OriginalSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalSource" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </containers>
      <file name="22c62550-5865-ca7e-ee3b-c89ea46c9d28" />
    </api>
    <api id="T:System.Windows.RoutedEventHandler">
      <topicdata group="api" />
      <apidata name="RoutedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="cb7e10af-4260-177a-6ed7-d093ac2e87dd" />
    </api>
    <api id="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      <apidata name="RoutedPropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="542d42a5-6068-ed03-bf78-49083b09bf4d" />
    </api>
    <api id="AllMembers.T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <topicdata name="RoutedPropertyChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      <apidata name="RoutedPropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)" />
        <element api="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue" />
        <element api="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      </containers>
      <file name="e19ed3b9-3949-2a28-51b7-d1e06ac12874" />
    </api>
    <api id="Methods.T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <topicdata name="RoutedPropertyChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      <apidata name="RoutedPropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      </containers>
      <file name="4687c470-88aa-e321-d97a-393036481aee" />
    </api>
    <api id="Properties.T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <topicdata name="RoutedPropertyChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      <apidata name="RoutedPropertyChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue" />
        <element api="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      </containers>
      <file name="a98902c5-b64e-699a-2d67-2b7eba56670b" />
    </api>
    <api id="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="oldValue">
          <template name="T" index="0" api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
        </parameter>
        <parameter name="newValue">
          <template name="T" index="0" api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true" />
      </containers>
      <file name="7d5db9fe-69e5-0cf5-0a6b-473bd82c4282" />
    </api>
    <api id="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <topicdata group="api" />
      <apidata name="NewValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewValue" />
      <returns>
        <template name="T" index="0" api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true" />
      </containers>
      <file name="5dccacfe-b3f6-5275-1501-58154c210e5a" />
    </api>
    <api id="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <topicdata group="api" />
      <apidata name="OldValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldValue" />
      <returns>
        <template name="T" index="0" api="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true" />
      </containers>
      <file name="b1256517-d66a-6d38-c70b-a1ff7b06fee2" />
    </api>
    <api id="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <topicdata group="api" />
      <apidata name="RoutedPropertyChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Windows.RoutedPropertyChangedEventHandler`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="37d11be6-8557-1437-020d-19e0779cba4e" />
    </api>
    <api id="T:System.Windows.Setter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Setter" />
      <apidata name="Setter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Setter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.SetterBase" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="8467675c-8b21-88b1-c66a-d4a5e60ffdf0" />
    </api>
    <api id="AllMembers.T:System.Windows.Setter">
      <topicdata name="Setter" group="list" subgroup="members" typeTopicId="T:System.Windows.Setter" />
      <apidata name="Setter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Setter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Setter.#ctor">
          <element api="M:System.Windows.Setter.#ctor" />
          <element api="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)" />
        </element>
        <element api="P:System.Windows.Setter.Property" />
        <element api="P:System.Windows.Setter.Value" />
        <element api="P:System.Windows.SetterBase.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" />
      </containers>
      <file name="30a834da-8ee5-55d9-3646-2b8cc76970ec" />
    </api>
    <api id="Methods.T:System.Windows.Setter">
      <topicdata name="Setter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Setter" />
      <apidata name="Setter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Setter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" />
      </containers>
      <file name="53c8ee2b-4ff8-cbc9-0c62-222c52de5894" />
    </api>
    <api id="Properties.T:System.Windows.Setter">
      <topicdata name="Setter" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Setter" />
      <apidata name="Setter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Setter.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.Setter.Property" />
        <element api="P:System.Windows.Setter.Value" />
        <element api="P:System.Windows.SetterBase.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" />
      </containers>
      <file name="0b5e9877-fe2c-bed3-2579-7e44f735a028" />
    </api>
    <api id="Overload:System.Windows.Setter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Setter" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Setter.#ctor" />
        <element api="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" ref="true" />
      </containers>
      <file name="3e86063f-76d9-af87-0e9a-82a4a49791d2" />
    </api>
    <api id="M:System.Windows.Setter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Setter.#ctor" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" ref="true" />
      </containers>
      <file name="13935746-21b4-0624-6283-74d3f3525161" />
    </api>
    <api id="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Setter.#ctor" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" ref="true" />
      </containers>
      <file name="c756f324-eb2c-fccb-47b1-b71f469d016b" />
    </api>
    <api id="P:System.Windows.Setter.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Property" />
      <setter name="set_Property" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" ref="true" />
      </containers>
      <file name="5d2050e9-6dfe-8195-75b5-5e3c30902ac8" />
    </api>
    <api id="P:System.Windows.Setter.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Setter" ref="true" />
      </containers>
      <file name="8effb17f-f5de-8d6f-18b8-9e6007df4450" />
    </api>
    <api id="T:System.Windows.SetterBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.SetterBase" />
      <apidata name="SetterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Setter" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="8c6a4b02-ddd0-7a62-c32d-6aa8e90ae532" />
    </api>
    <api id="AllMembers.T:System.Windows.SetterBase">
      <topicdata name="SetterBase" group="list" subgroup="members" typeTopicId="T:System.Windows.SetterBase" />
      <apidata name="SetterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="P:System.Windows.SetterBase.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBase" />
      </containers>
      <file name="1bad399a-39ca-c87a-2dc1-5e22efced2ee" />
    </api>
    <api id="Methods.T:System.Windows.SetterBase">
      <topicdata name="SetterBase" group="list" subgroup="Methods" typeTopicId="T:System.Windows.SetterBase" />
      <apidata name="SetterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBase" />
      </containers>
      <file name="51d4fdee-cdfb-dc7d-6d4d-388b649461df" />
    </api>
    <api id="Properties.T:System.Windows.SetterBase">
      <topicdata name="SetterBase" group="list" subgroup="Properties" typeTopicId="T:System.Windows.SetterBase" />
      <apidata name="SetterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.SetterBase.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBase" />
      </containers>
      <file name="b3d368f4-3d2c-ff78-19d8-6b7ac8d72c4a" />
    </api>
    <api id="P:System.Windows.SetterBase.IsSealed">
      <topicdata group="api" />
      <apidata name="IsSealed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSealed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBase" ref="true" />
      </containers>
      <file name="50977cbc-5fc9-42fa-3889-425867d4fc9b" />
    </api>
    <api id="T:System.Windows.SetterBaseCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.SetterBaseCollection" />
      <apidata name="SetterBaseCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.SetterBaseCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.SetterBase" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="19cc2080-45a9-7b70-8ea6-8ba6f3030280" />
    </api>
    <api id="AllMembers.T:System.Windows.SetterBaseCollection">
      <topicdata name="SetterBaseCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.SetterBaseCollection" />
      <apidata name="SetterBaseCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.SetterBaseCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.SetterBaseCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Windows.SetterBaseCollection.#ctor" />
        <element api="P:System.Windows.SetterBaseCollection.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBaseCollection" />
      </containers>
      <file name="f5904feb-bc3a-2911-b0c8-503511b62f35" />
    </api>
    <api id="Methods.T:System.Windows.SetterBaseCollection">
      <topicdata name="SetterBaseCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.SetterBaseCollection" />
      <apidata name="SetterBaseCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.SetterBaseCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.SetterBaseCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBaseCollection" />
      </containers>
      <file name="10241181-8f2f-2a44-e81b-6447f6238311" />
    </api>
    <api id="Properties.T:System.Windows.SetterBaseCollection">
      <topicdata name="SetterBaseCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.SetterBaseCollection" />
      <apidata name="SetterBaseCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.SetterBaseCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Windows.SetterBaseCollection.IsSealed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBaseCollection" />
      </containers>
      <file name="9a41e6e8-a287-682c-08f8-c26c56bb9a97" />
    </api>
    <api id="M:System.Windows.SetterBaseCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBaseCollection" ref="true" />
      </containers>
      <file name="70f0251b-8bf7-2bda-8139-9033b9679acb" />
    </api>
    <api id="P:System.Windows.SetterBaseCollection.IsSealed">
      <topicdata group="api" />
      <apidata name="IsSealed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSealed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SetterBaseCollection" ref="true" />
      </containers>
      <file name="a894a731-d533-49bd-b4c7-df2791151fe8" />
    </api>
    <api id="T:System.Windows.Size">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="b5b944a8-c225-8c08-e614-e9851fc4fd68" />
    </api>
    <api id="AllMembers.T:System.Windows.Size">
      <topicdata name="Size" group="list" subgroup="members" typeTopicId="T:System.Windows.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Size.#ctor(System.Double,System.Double)" />
        <element api="P:System.Windows.Size.Empty" />
        <element api="Overload:System.Windows.Size.Equals">
          <element api="M:System.Windows.Size.Equals(System.Object)" />
          <element api="M:System.Windows.Size.Equals(System.Windows.Size)" />
        </element>
        <element api="M:System.Windows.Size.GetHashCode" />
        <element api="P:System.Windows.Size.Height" />
        <element api="P:System.Windows.Size.IsEmpty" />
        <element api="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)" />
        <element api="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)" />
        <element api="M:System.Windows.Size.ToString" />
        <element api="P:System.Windows.Size.Width" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" />
      </containers>
      <file name="05232af3-35ee-f81a-903a-36944df8b10e" />
    </api>
    <api id="Methods.T:System.Windows.Size">
      <topicdata name="Size" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Size.Equals">
          <element api="M:System.Windows.Size.Equals(System.Object)" />
          <element api="M:System.Windows.Size.Equals(System.Windows.Size)" />
        </element>
        <element api="M:System.Windows.Size.GetHashCode" />
        <element api="M:System.Windows.Size.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" />
      </containers>
      <file name="30f24a24-791e-e2cd-f9dc-19b6fa63f8ac" />
    </api>
    <api id="Operators.T:System.Windows.Size">
      <topicdata name="Size" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)" />
        <element api="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" />
      </containers>
      <file name="41878602-9b2e-fe6f-dcd2-cdb110a8db57" />
    </api>
    <api id="Properties.T:System.Windows.Size">
      <topicdata name="Size" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Size" />
      <apidata name="Size" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Size.Empty" />
        <element api="P:System.Windows.Size.Height" />
        <element api="P:System.Windows.Size.IsEmpty" />
        <element api="P:System.Windows.Size.Width" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" />
      </containers>
      <file name="0f302471-50f8-1c7d-fc2b-976e0f194a57" />
    </api>
    <api id="Overload:System.Windows.Size.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Size" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Size.Equals(System.Object)" />
        <element api="M:System.Windows.Size.Equals(System.Windows.Size)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="1fae9214-ca08-c621-40b3-c2d0e1cc2d37" />
    </api>
    <api id="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="width">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="fd410491-ac2f-0f85-2133-7af81f0756a4" />
    </api>
    <api id="P:System.Windows.Size.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Empty" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="f3625568-417d-ce3b-7846-b8f011aa9799" />
    </api>
    <api id="M:System.Windows.Size.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Size.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="508aed52-e69d-c762-3baa-e3113920ad00" />
    </api>
    <api id="M:System.Windows.Size.Equals(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Size.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="970b7cc1-caf5-0c6c-67f4-ffc44e40b0e6" />
    </api>
    <api id="M:System.Windows.Size.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="b621dfdb-0468-b830-6f58-e024800dba9a" />
    </api>
    <api id="P:System.Windows.Size.Height">
      <topicdata group="api" />
      <apidata name="Height" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Height" />
      <setter name="set_Height" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="ca175d5c-2fa7-7528-a322-52a223909e01" />
    </api>
    <api id="P:System.Windows.Size.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="fef3809f-0fcc-56b3-0de4-dfc344d7eb43" />
    </api>
    <api id="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="ce09f7ec-1400-3b01-479b-b6e4adf5ff09" />
    </api>
    <api id="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size1">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
        <parameter name="size2">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="199c2ba5-8bef-dabf-6449-26f19f5d4d59" />
    </api>
    <api id="M:System.Windows.Size.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="6ddec940-681c-3e01-f92a-196c084c0837" />
    </api>
    <api id="P:System.Windows.Size.Width">
      <topicdata group="api" />
      <apidata name="Width" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Width" />
      <setter name="set_Width" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Size" ref="false" />
      </containers>
      <file name="1bb88968-e8bd-3716-ba11-18a6f0c1fb8e" />
    </api>
    <api id="T:System.Windows.SizeChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.SizeChangedEventArgs" />
      <apidata name="SizeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="1159e3cd-1b8c-b9ff-d1bf-4acc0c45fc36" />
    </api>
    <api id="AllMembers.T:System.Windows.SizeChangedEventArgs">
      <topicdata name="SizeChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.SizeChangedEventArgs" />
      <apidata name="SizeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="P:System.Windows.SizeChangedEventArgs.NewSize" />
        <element api="P:System.Windows.SizeChangedEventArgs.PreviousSize" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SizeChangedEventArgs" />
      </containers>
      <file name="c7b5f391-3436-bf9f-e5fc-478f8c621f79" />
    </api>
    <api id="Methods.T:System.Windows.SizeChangedEventArgs">
      <topicdata name="SizeChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.SizeChangedEventArgs" />
      <apidata name="SizeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SizeChangedEventArgs" />
      </containers>
      <file name="2db75d34-5d87-b77e-6e48-d889c6f78d58" />
    </api>
    <api id="Properties.T:System.Windows.SizeChangedEventArgs">
      <topicdata name="SizeChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.SizeChangedEventArgs" />
      <apidata name="SizeChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="P:System.Windows.SizeChangedEventArgs.NewSize" />
        <element api="P:System.Windows.SizeChangedEventArgs.PreviousSize" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SizeChangedEventArgs" />
      </containers>
      <file name="01170784-06a2-0e1c-6115-6d1d5e339325" />
    </api>
    <api id="P:System.Windows.SizeChangedEventArgs.NewSize">
      <topicdata group="api" />
      <apidata name="NewSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewSize" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
      </containers>
      <file name="00231729-7891-dc0e-4640-b87c6cd0be0e" />
    </api>
    <api id="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <topicdata group="api" />
      <apidata name="PreviousSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousSize" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
      </containers>
      <file name="3f022707-aadf-e2e7-8dba-859eea434807" />
    </api>
    <api id="T:System.Windows.SizeChangedEventHandler">
      <topicdata group="api" />
      <apidata name="SizeChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.SizeChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="0e03635a-db95-0f0d-0e3a-0089b62fa979" />
    </api>
    <api id="T:System.Windows.StartupEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.StartupEventArgs" />
      <apidata name="StartupEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c1942b06-905f-f0a8-ce12-6cf72d66cf21" />
    </api>
    <api id="AllMembers.T:System.Windows.StartupEventArgs">
      <topicdata name="StartupEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.StartupEventArgs" />
      <apidata name="StartupEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.StartupEventArgs.InitParams" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StartupEventArgs" />
      </containers>
      <file name="6bf459ab-7439-bfd8-c525-b884a7e108d7" />
    </api>
    <api id="Methods.T:System.Windows.StartupEventArgs">
      <topicdata name="StartupEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.StartupEventArgs" />
      <apidata name="StartupEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StartupEventArgs" />
      </containers>
      <file name="3aef7763-c255-00b5-b8d2-207afcb27458" />
    </api>
    <api id="Properties.T:System.Windows.StartupEventArgs">
      <topicdata name="StartupEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.StartupEventArgs" />
      <apidata name="StartupEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.StartupEventArgs.InitParams" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StartupEventArgs" />
      </containers>
      <file name="10d92501-757b-de65-a5bc-fc3772355604" />
    </api>
    <api id="P:System.Windows.StartupEventArgs.InitParams">
      <topicdata group="api" />
      <apidata name="InitParams" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitParams" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StartupEventArgs" ref="true" />
      </containers>
      <file name="0315eddd-21e1-eb57-f97f-ec48a4de40fa" />
    </api>
    <api id="T:System.Windows.StartupEventHandler">
      <topicdata group="api" />
      <apidata name="StartupEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.StartupEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="f526ab27-eae2-7ed7-e758-7a36539df66d" />
    </api>
    <api id="T:System.Windows.Style">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Style" />
      <apidata name="Style" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Style.#ctor" contentProperty="P:System.Windows.Style.Setters" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Setters</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="332831dd-72d0-4230-314e-64f395eecfa5" />
    </api>
    <api id="AllMembers.T:System.Windows.Style">
      <topicdata name="Style" group="list" subgroup="members" typeTopicId="T:System.Windows.Style" />
      <apidata name="Style" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Style.#ctor" contentProperty="P:System.Windows.Style.Setters" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Style.#ctor">
          <element api="M:System.Windows.Style.#ctor" />
          <element api="M:System.Windows.Style.#ctor(System.Type)" />
        </element>
        <element api="P:System.Windows.Style.BasedOn" />
        <element api="P:System.Windows.Style.IsSealed" />
        <element api="M:System.Windows.Style.Seal" />
        <element api="P:System.Windows.Style.Setters" />
        <element api="P:System.Windows.Style.TargetType" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" />
      </containers>
      <file name="184805d6-654e-2179-6c0d-5c45f805fccf" />
    </api>
    <api id="Methods.T:System.Windows.Style">
      <topicdata name="Style" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Style" />
      <apidata name="Style" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Style.#ctor" contentProperty="P:System.Windows.Style.Setters" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.Style.Seal" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" />
      </containers>
      <file name="6778a3cb-bcaa-ea51-85c2-5851b750eb80" />
    </api>
    <api id="Properties.T:System.Windows.Style">
      <topicdata name="Style" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Style" />
      <apidata name="Style" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Style.#ctor" contentProperty="P:System.Windows.Style.Setters" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.Style.BasedOn" />
        <element api="P:System.Windows.Style.IsSealed" />
        <element api="P:System.Windows.Style.Setters" />
        <element api="P:System.Windows.Style.TargetType" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" />
      </containers>
      <file name="e3dd111a-04d6-6791-e810-2f75eb133bba" />
    </api>
    <api id="Overload:System.Windows.Style.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Style" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Style.#ctor" />
        <element api="M:System.Windows.Style.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="2f8110a4-7ca9-3425-b71b-041d652c3126" />
    </api>
    <api id="M:System.Windows.Style.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Style.#ctor" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="8b4f311e-9018-3c43-5117-bd54f1f99a33" />
    </api>
    <api id="M:System.Windows.Style.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Style.#ctor" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="fe862e8a-6fae-c9f5-319a-60c715454ddc" />
    </api>
    <api id="P:System.Windows.Style.BasedOn">
      <topicdata group="api" />
      <apidata name="BasedOn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BasedOn" />
      <setter name="set_BasedOn" />
      <returns>
        <type api="T:System.Windows.Style" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="9f50e8d0-629d-02b9-e9f8-98921151785c" />
    </api>
    <api id="P:System.Windows.Style.IsSealed">
      <topicdata group="api" />
      <apidata name="IsSealed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSealed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="7b167e96-ccca-0a17-56d8-625291fa3316" />
    </api>
    <api id="M:System.Windows.Style.Seal">
      <topicdata group="api" />
      <apidata name="Seal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="1418c43c-3433-5ff1-7fe1-f5a559701fa5" />
    </api>
    <api id="P:System.Windows.Style.Setters">
      <topicdata group="api" />
      <apidata name="Setters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Setters" />
      <returns>
        <type api="T:System.Windows.SetterBaseCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="326084b1-6984-4f3a-8863-f9844639319c" />
    </api>
    <api id="P:System.Windows.Style.TargetType">
      <topicdata group="api" />
      <apidata name="TargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetType" />
      <setter name="set_TargetType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Style" ref="true" />
      </containers>
      <file name="271ab9f1-5787-4b2b-8d5d-b359961ffd7c" />
    </api>
    <api id="T:System.Windows.StyleTypedPropertyAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.StyleTypedPropertyAttribute" />
      <apidata name="StyleTypedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.StyleTypedPropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="908d4d5e-ccb5-d7e8-13a6-19257b3b815b" />
    </api>
    <api id="AllMembers.T:System.Windows.StyleTypedPropertyAttribute">
      <topicdata name="StyleTypedPropertyAttribute" group="list" subgroup="members" typeTopicId="T:System.Windows.StyleTypedPropertyAttribute" />
      <apidata name="StyleTypedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.StyleTypedPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.StyleTypedPropertyAttribute.#ctor" />
        <element api="P:System.Windows.StyleTypedPropertyAttribute.Property" />
        <element api="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" />
      </containers>
      <file name="2b85ecc2-6c34-65a2-59a5-bc08f36e1700" />
    </api>
    <api id="Methods.T:System.Windows.StyleTypedPropertyAttribute">
      <topicdata name="StyleTypedPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Windows.StyleTypedPropertyAttribute" />
      <apidata name="StyleTypedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.StyleTypedPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" />
      </containers>
      <file name="e5eac845-275b-fc57-798b-fa0d940390c1" />
    </api>
    <api id="Properties.T:System.Windows.StyleTypedPropertyAttribute">
      <topicdata name="StyleTypedPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Windows.StyleTypedPropertyAttribute" />
      <apidata name="StyleTypedPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.StyleTypedPropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Windows.StyleTypedPropertyAttribute.Property" />
        <element api="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" />
      </containers>
      <file name="4e9c2931-2826-5d3f-9f41-4aa5a0abb182" />
    </api>
    <api id="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" ref="true" />
      </containers>
      <file name="cbb27398-2cd2-172f-5e64-c3810cd28046" />
    </api>
    <api id="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Property" />
      <setter name="set_Property" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" ref="true" />
      </containers>
      <file name="839f87da-6360-1e28-d23d-1709482ec7c3" />
    </api>
    <api id="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <topicdata group="api" />
      <apidata name="StyleTargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StyleTargetType" />
      <setter name="set_StyleTargetType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.StyleTypedPropertyAttribute" ref="true" />
      </containers>
      <file name="562f386f-b3ea-73e2-c01f-8caa70bb5327" />
    </api>
    <api id="T:System.Windows.SystemColors">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.SystemColors" />
      <apidata name="SystemColors" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="bde08314-6f2b-7345-e5ed-59f80552928a" />
    </api>
    <api id="AllMembers.T:System.Windows.SystemColors">
      <topicdata name="SystemColors" group="list" subgroup="members" typeTopicId="T:System.Windows.SystemColors" />
      <apidata name="SystemColors" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.SystemColors.ActiveBorderColor" />
        <element api="P:System.Windows.SystemColors.ActiveCaptionColor" />
        <element api="P:System.Windows.SystemColors.ActiveCaptionTextColor" />
        <element api="P:System.Windows.SystemColors.AppWorkspaceColor" />
        <element api="P:System.Windows.SystemColors.ControlColor" />
        <element api="P:System.Windows.SystemColors.ControlDarkColor" />
        <element api="P:System.Windows.SystemColors.ControlDarkDarkColor" />
        <element api="P:System.Windows.SystemColors.ControlLightColor" />
        <element api="P:System.Windows.SystemColors.ControlLightLightColor" />
        <element api="P:System.Windows.SystemColors.ControlTextColor" />
        <element api="P:System.Windows.SystemColors.DesktopColor" />
        <element api="P:System.Windows.SystemColors.GrayTextColor" />
        <element api="P:System.Windows.SystemColors.HighlightColor" />
        <element api="P:System.Windows.SystemColors.HighlightTextColor" />
        <element api="P:System.Windows.SystemColors.InactiveBorderColor" />
        <element api="P:System.Windows.SystemColors.InactiveCaptionColor" />
        <element api="P:System.Windows.SystemColors.InactiveCaptionTextColor" />
        <element api="P:System.Windows.SystemColors.InfoColor" />
        <element api="P:System.Windows.SystemColors.InfoTextColor" />
        <element api="P:System.Windows.SystemColors.MenuColor" />
        <element api="P:System.Windows.SystemColors.MenuTextColor" />
        <element api="P:System.Windows.SystemColors.ScrollBarColor" />
        <element api="P:System.Windows.SystemColors.WindowColor" />
        <element api="P:System.Windows.SystemColors.WindowFrameColor" />
        <element api="P:System.Windows.SystemColors.WindowTextColor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" />
      </containers>
      <file name="ac8f9a3e-aea9-f819-2a7f-c11d7030e7a7" />
    </api>
    <api id="Properties.T:System.Windows.SystemColors">
      <topicdata name="SystemColors" group="list" subgroup="Properties" typeTopicId="T:System.Windows.SystemColors" />
      <apidata name="SystemColors" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.SystemColors.ActiveBorderColor" />
        <element api="P:System.Windows.SystemColors.ActiveCaptionColor" />
        <element api="P:System.Windows.SystemColors.ActiveCaptionTextColor" />
        <element api="P:System.Windows.SystemColors.AppWorkspaceColor" />
        <element api="P:System.Windows.SystemColors.ControlColor" />
        <element api="P:System.Windows.SystemColors.ControlDarkColor" />
        <element api="P:System.Windows.SystemColors.ControlDarkDarkColor" />
        <element api="P:System.Windows.SystemColors.ControlLightColor" />
        <element api="P:System.Windows.SystemColors.ControlLightLightColor" />
        <element api="P:System.Windows.SystemColors.ControlTextColor" />
        <element api="P:System.Windows.SystemColors.DesktopColor" />
        <element api="P:System.Windows.SystemColors.GrayTextColor" />
        <element api="P:System.Windows.SystemColors.HighlightColor" />
        <element api="P:System.Windows.SystemColors.HighlightTextColor" />
        <element api="P:System.Windows.SystemColors.InactiveBorderColor" />
        <element api="P:System.Windows.SystemColors.InactiveCaptionColor" />
        <element api="P:System.Windows.SystemColors.InactiveCaptionTextColor" />
        <element api="P:System.Windows.SystemColors.InfoColor" />
        <element api="P:System.Windows.SystemColors.InfoTextColor" />
        <element api="P:System.Windows.SystemColors.MenuColor" />
        <element api="P:System.Windows.SystemColors.MenuTextColor" />
        <element api="P:System.Windows.SystemColors.ScrollBarColor" />
        <element api="P:System.Windows.SystemColors.WindowColor" />
        <element api="P:System.Windows.SystemColors.WindowFrameColor" />
        <element api="P:System.Windows.SystemColors.WindowTextColor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" />
      </containers>
      <file name="2da114d0-f86b-046a-15f9-60216ed7cdca" />
    </api>
    <api id="P:System.Windows.SystemColors.ActiveBorderColor">
      <topicdata group="api" />
      <apidata name="ActiveBorderColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveBorderColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="de87dff9-37f7-66b4-f5d3-35ffd09e10fd" />
    </api>
    <api id="P:System.Windows.SystemColors.ActiveCaptionColor">
      <topicdata group="api" />
      <apidata name="ActiveCaptionColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveCaptionColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="f4b4ed26-2d10-c978-6567-6b61113b9f8b" />
    </api>
    <api id="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <topicdata group="api" />
      <apidata name="ActiveCaptionTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveCaptionTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="f6bb1174-efd7-6055-fa56-8b071b9dff14" />
    </api>
    <api id="P:System.Windows.SystemColors.AppWorkspaceColor">
      <topicdata group="api" />
      <apidata name="AppWorkspaceColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppWorkspaceColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="e35f16d3-49d9-d07b-5bb6-6f9678c5fcd4" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlColor">
      <topicdata group="api" />
      <apidata name="ControlColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="b3685a58-22e6-7c6a-a2a0-1240992dd5a1" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlDarkColor">
      <topicdata group="api" />
      <apidata name="ControlDarkColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlDarkColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="42615bc6-4f9e-90f3-1461-ca9e882b3bed" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <topicdata group="api" />
      <apidata name="ControlDarkDarkColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlDarkDarkColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="a40010aa-af83-51b2-4634-bdf35ba57d54" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlLightColor">
      <topicdata group="api" />
      <apidata name="ControlLightColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlLightColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="037119e5-c679-9d99-3abe-553ae537fb26" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlLightLightColor">
      <topicdata group="api" />
      <apidata name="ControlLightLightColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlLightLightColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="2e0b1446-e86b-a707-e6e3-bcb76e7e0ad3" />
    </api>
    <api id="P:System.Windows.SystemColors.ControlTextColor">
      <topicdata group="api" />
      <apidata name="ControlTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ControlTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="302029bb-03d1-7a03-05e7-4890f7fa0fb6" />
    </api>
    <api id="P:System.Windows.SystemColors.DesktopColor">
      <topicdata group="api" />
      <apidata name="DesktopColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesktopColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="8463b861-9e28-511e-fb08-55247924ebe5" />
    </api>
    <api id="P:System.Windows.SystemColors.GrayTextColor">
      <topicdata group="api" />
      <apidata name="GrayTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GrayTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="105abced-46f4-0d6a-ac04-9f7defcfa66f" />
    </api>
    <api id="P:System.Windows.SystemColors.HighlightColor">
      <topicdata group="api" />
      <apidata name="HighlightColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HighlightColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="a3bce034-3615-6085-c505-96d38e03f593" />
    </api>
    <api id="P:System.Windows.SystemColors.HighlightTextColor">
      <topicdata group="api" />
      <apidata name="HighlightTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HighlightTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="173e5720-ef07-0560-ae9b-b10fc5557078" />
    </api>
    <api id="P:System.Windows.SystemColors.InactiveBorderColor">
      <topicdata group="api" />
      <apidata name="InactiveBorderColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InactiveBorderColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="c59e0805-46ea-7fc3-32b4-a1de26d14a71" />
    </api>
    <api id="P:System.Windows.SystemColors.InactiveCaptionColor">
      <topicdata group="api" />
      <apidata name="InactiveCaptionColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InactiveCaptionColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="51ecb245-bc64-7e81-c850-746b0f831abd" />
    </api>
    <api id="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <topicdata group="api" />
      <apidata name="InactiveCaptionTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InactiveCaptionTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="6e73597b-8c26-04d6-a08b-94a160fdcf6b" />
    </api>
    <api id="P:System.Windows.SystemColors.InfoColor">
      <topicdata group="api" />
      <apidata name="InfoColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InfoColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="b89eaf9e-d2a3-1498-4826-1062ed95d7d2" />
    </api>
    <api id="P:System.Windows.SystemColors.InfoTextColor">
      <topicdata group="api" />
      <apidata name="InfoTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InfoTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="b36c1fe6-2ad2-4d65-ba79-2e7538a60d3c" />
    </api>
    <api id="P:System.Windows.SystemColors.MenuColor">
      <topicdata group="api" />
      <apidata name="MenuColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MenuColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="46154893-5d76-428e-0a86-25dc01b575f5" />
    </api>
    <api id="P:System.Windows.SystemColors.MenuTextColor">
      <topicdata group="api" />
      <apidata name="MenuTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MenuTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="905c17af-9459-d5b8-46e1-ecc0abd9fcd5" />
    </api>
    <api id="P:System.Windows.SystemColors.ScrollBarColor">
      <topicdata group="api" />
      <apidata name="ScrollBarColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScrollBarColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="121378a8-0318-11db-06e1-0700455e38df" />
    </api>
    <api id="P:System.Windows.SystemColors.WindowColor">
      <topicdata group="api" />
      <apidata name="WindowColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="1560be6a-4453-0228-d940-f597c9593e1f" />
    </api>
    <api id="P:System.Windows.SystemColors.WindowFrameColor">
      <topicdata group="api" />
      <apidata name="WindowFrameColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowFrameColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="3ccf5df0-9c00-7959-d8ca-5e1294910b61" />
    </api>
    <api id="P:System.Windows.SystemColors.WindowTextColor">
      <topicdata group="api" />
      <apidata name="WindowTextColor" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowTextColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemColors" ref="true" />
      </containers>
      <file name="4e127c1c-f1bf-a1c3-ffd5-2b683041ad23" />
    </api>
    <api id="T:System.Windows.SystemParameters">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.SystemParameters" />
      <apidata name="SystemParameters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="00760002-ebb4-9956-fa77-8eb3b7502440" />
    </api>
    <api id="AllMembers.T:System.Windows.SystemParameters">
      <topicdata name="SystemParameters" group="list" subgroup="members" typeTopicId="T:System.Windows.SystemParameters" />
      <apidata name="SystemParameters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.SystemParameters.HighContrast" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemParameters" />
      </containers>
      <file name="99aea3d1-45a2-e747-23ac-8b3a702ebc88" />
    </api>
    <api id="Properties.T:System.Windows.SystemParameters">
      <topicdata name="SystemParameters" group="list" subgroup="Properties" typeTopicId="T:System.Windows.SystemParameters" />
      <apidata name="SystemParameters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.SystemParameters.HighContrast" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemParameters" />
      </containers>
      <file name="87c60a49-db51-f0e0-ae35-e709d00e0e2a" />
    </api>
    <api id="P:System.Windows.SystemParameters.HighContrast">
      <topicdata group="api" />
      <apidata name="HighContrast" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HighContrast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.SystemParameters" ref="true" />
      </containers>
      <file name="5876d5e0-dd61-ca1e-53ac-70a2c5300db3" />
    </api>
    <api id="T:System.Windows.TemplateBindingExpression">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TemplateBindingExpression" />
      <apidata name="TemplateBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="aee9226b-fcb0-1a99-4453-734e833f78d7" />
    </api>
    <api id="AllMembers.T:System.Windows.TemplateBindingExpression">
      <topicdata name="TemplateBindingExpression" group="list" subgroup="members" typeTopicId="T:System.Windows.TemplateBindingExpression" />
      <apidata name="TemplateBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateBindingExpression" />
      </containers>
      <file name="dd990b3e-70e3-b672-9f61-f39e8cebf1e5" />
    </api>
    <api id="Methods.T:System.Windows.TemplateBindingExpression">
      <topicdata name="TemplateBindingExpression" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TemplateBindingExpression" />
      <apidata name="TemplateBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateBindingExpression" />
      </containers>
      <file name="7d53feb5-0615-cd86-974f-cf4aaeb301b9" />
    </api>
    <api id="T:System.Windows.TemplatePartAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TemplatePartAttribute" />
      <apidata name="TemplatePartAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplatePartAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="242bbd2b-1e59-df05-d973-88e36d6b64f8" />
    </api>
    <api id="AllMembers.T:System.Windows.TemplatePartAttribute">
      <topicdata name="TemplatePartAttribute" group="list" subgroup="members" typeTopicId="T:System.Windows.TemplatePartAttribute" />
      <apidata name="TemplatePartAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplatePartAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.TemplatePartAttribute.#ctor" />
        <element api="P:System.Windows.TemplatePartAttribute.Name" />
        <element api="P:System.Windows.TemplatePartAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" />
      </containers>
      <file name="db4afb86-7cba-22fe-9b86-eb06f64e1e06" />
    </api>
    <api id="Methods.T:System.Windows.TemplatePartAttribute">
      <topicdata name="TemplatePartAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TemplatePartAttribute" />
      <apidata name="TemplatePartAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplatePartAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" />
      </containers>
      <file name="2d98fb2b-fcdb-b442-f8fe-3ecdfb93181a" />
    </api>
    <api id="Properties.T:System.Windows.TemplatePartAttribute">
      <topicdata name="TemplatePartAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TemplatePartAttribute" />
      <apidata name="TemplatePartAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplatePartAttribute.#ctor" />
      <elements>
        <element api="P:System.Windows.TemplatePartAttribute.Name" />
        <element api="P:System.Windows.TemplatePartAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" />
      </containers>
      <file name="84e980a4-83fe-6c0c-389b-bdac5be24da3" />
    </api>
    <api id="M:System.Windows.TemplatePartAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" ref="true" />
      </containers>
      <file name="11e527d0-e752-a5c3-b285-a6693189b569" />
    </api>
    <api id="P:System.Windows.TemplatePartAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" ref="true" />
      </containers>
      <file name="652184f9-f4d0-9ccd-ee54-7c9a4351aec8" />
    </api>
    <api id="P:System.Windows.TemplatePartAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplatePartAttribute" ref="true" />
      </containers>
      <file name="680b0bcc-acaf-8287-04cf-497b2f464468" />
    </api>
    <api id="T:System.Windows.TemplateVisualStateAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TemplateVisualStateAttribute" />
      <apidata name="TemplateVisualStateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e6809986-7fec-f0f1-8ce2-dfb9df186e12" />
    </api>
    <api id="AllMembers.T:System.Windows.TemplateVisualStateAttribute">
      <topicdata name="TemplateVisualStateAttribute" group="list" subgroup="members" typeTopicId="T:System.Windows.TemplateVisualStateAttribute" />
      <apidata name="TemplateVisualStateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
        <element api="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
        <element api="P:System.Windows.TemplateVisualStateAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" />
      </containers>
      <file name="70c13b8e-d39f-a0c5-8823-4d70fed929b4" />
    </api>
    <api id="Methods.T:System.Windows.TemplateVisualStateAttribute">
      <topicdata name="TemplateVisualStateAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TemplateVisualStateAttribute" />
      <apidata name="TemplateVisualStateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" />
      </containers>
      <file name="571718f8-30f8-c53a-5ce9-bbc51fb5914d" />
    </api>
    <api id="Properties.T:System.Windows.TemplateVisualStateAttribute">
      <topicdata name="TemplateVisualStateAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TemplateVisualStateAttribute" />
      <apidata name="TemplateVisualStateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <elements>
        <element api="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
        <element api="P:System.Windows.TemplateVisualStateAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" />
      </containers>
      <file name="4b2c8a1b-778a-4d7b-42e6-eed34be8b230" />
    </api>
    <api id="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" ref="true" />
      </containers>
      <file name="1143d498-40b9-592d-7347-1bbf1e974fba" />
    </api>
    <api id="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <topicdata group="api" />
      <apidata name="GroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupName" />
      <setter name="set_GroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" ref="true" />
      </containers>
      <file name="9ac598c6-00f5-bd45-90d0-a54e22ae4db4" />
    </api>
    <api id="P:System.Windows.TemplateVisualStateAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TemplateVisualStateAttribute" ref="true" />
      </containers>
      <file name="8696ba60-83a6-df7d-1e0b-2b2603b343c0" />
    </api>
    <api id="T:System.Windows.TextAlignment">
      <topicdata group="api" />
      <apidata name="TextAlignment" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.TextAlignment.Center" />
        <element api="F:System.Windows.TextAlignment.Left" />
        <element api="F:System.Windows.TextAlignment.Right" />
        <element api="F:System.Windows.TextAlignment.Justify" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="296e2330-24d8-7341-1ffa-f054f66a7f7d" />
    </api>
    <api id="F:System.Windows.TextAlignment.Center">
      <topicdata group="api" notopic="" />
      <apidata name="Center" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </containers>
      <file name="20d2341f-6f31-dd37-4af1-3366718d7637" />
    </api>
    <api id="F:System.Windows.TextAlignment.Justify">
      <topicdata group="api" notopic="" />
      <apidata name="Justify" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </containers>
      <file name="31307da8-dc80-2610-aaf3-dc21ea16e7e6" />
    </api>
    <api id="F:System.Windows.TextAlignment.Left">
      <topicdata group="api" notopic="" />
      <apidata name="Left" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </containers>
      <file name="b748ddc8-f2f3-d397-71df-d0102cb36900" />
    </api>
    <api id="F:System.Windows.TextAlignment.Right">
      <topicdata group="api" notopic="" />
      <apidata name="Right" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextAlignment" ref="false" />
      </containers>
      <file name="500504f2-1829-7983-05c7-a82b3a3ac816" />
    </api>
    <api id="T:System.Windows.TextDecorationCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TextDecorationCollection" />
      <apidata name="TextDecorationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c7514018-abb5-a719-fcb1-5cedbc2faedf" />
    </api>
    <api id="AllMembers.T:System.Windows.TextDecorationCollection">
      <topicdata name="TextDecorationCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.TextDecorationCollection" />
      <apidata name="TextDecorationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextDecorationCollection" />
      </containers>
      <file name="32c234f1-ec7b-0dc9-37c5-5d7ac6363654" />
    </api>
    <api id="Methods.T:System.Windows.TextDecorationCollection">
      <topicdata name="TextDecorationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TextDecorationCollection" />
      <apidata name="TextDecorationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextDecorationCollection" />
      </containers>
      <file name="9b743d13-3f7e-9419-d463-fe8f42d53328" />
    </api>
    <api id="T:System.Windows.TextDecorations">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TextDecorations" />
      <apidata name="TextDecorations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="9ca1439f-7938-5d77-3665-360a58eb5ff2" />
    </api>
    <api id="AllMembers.T:System.Windows.TextDecorations">
      <topicdata name="TextDecorations" group="list" subgroup="members" typeTopicId="T:System.Windows.TextDecorations" />
      <apidata name="TextDecorations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.TextDecorations.Underline" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextDecorations" />
      </containers>
      <file name="17d2ad7c-b0c1-1b07-3d22-86aebef420b8" />
    </api>
    <api id="Properties.T:System.Windows.TextDecorations">
      <topicdata name="TextDecorations" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TextDecorations" />
      <apidata name="TextDecorations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.TextDecorations.Underline" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextDecorations" />
      </containers>
      <file name="daae294e-feaa-8dad-8042-854a1a8ee5eb" />
    </api>
    <api id="P:System.Windows.TextDecorations.Underline">
      <topicdata group="api" />
      <apidata name="Underline" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Underline" />
      <returns>
        <type api="T:System.Windows.TextDecorationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextDecorations" ref="true" />
      </containers>
      <file name="e7795233-dae0-ba53-7cf4-e22f20c2830f" />
    </api>
    <api id="T:System.Windows.TextTrimming">
      <topicdata group="api" />
      <apidata name="TextTrimming" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.TextTrimming.None" />
        <element api="F:System.Windows.TextTrimming.WordEllipsis" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="46769498-8d30-be12-d10e-450672ed35ba" />
    </api>
    <api id="F:System.Windows.TextTrimming.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextTrimming" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextTrimming" ref="false" />
      </containers>
      <file name="840cef3f-6cff-ff8c-b905-e91831e8bca9" />
    </api>
    <api id="F:System.Windows.TextTrimming.WordEllipsis">
      <topicdata group="api" notopic="" />
      <apidata name="WordEllipsis" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextTrimming" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextTrimming" ref="false" />
      </containers>
      <file name="ea7a2379-d2ae-cd28-db85-d3ebb38a7395" />
    </api>
    <api id="T:System.Windows.TextWrapping">
      <topicdata group="api" />
      <apidata name="TextWrapping" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.TextWrapping.NoWrap" />
        <element api="F:System.Windows.TextWrapping.Wrap" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="94dccb06-ffc6-f2e9-737b-240e59c87f18" />
    </api>
    <api id="F:System.Windows.TextWrapping.NoWrap">
      <topicdata group="api" notopic="" />
      <apidata name="NoWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextWrapping" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextWrapping" ref="false" />
      </containers>
      <file name="ec5935bd-aa52-e050-188b-471aad1021a7" />
    </api>
    <api id="F:System.Windows.TextWrapping.Wrap">
      <topicdata group="api" notopic="" />
      <apidata name="Wrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.TextWrapping" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TextWrapping" ref="false" />
      </containers>
      <file name="2d9f510f-33b6-a536-eeab-b154e2057702" />
    </api>
    <api id="T:System.Windows.Thickness">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.Thickness" />
      <apidata name="Thickness" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="35819d10-5aab-7430-993f-26dc87574297" />
    </api>
    <api id="AllMembers.T:System.Windows.Thickness">
      <topicdata name="Thickness" group="list" subgroup="members" typeTopicId="T:System.Windows.Thickness" />
      <apidata name="Thickness" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Thickness.#ctor">
          <element api="M:System.Windows.Thickness.#ctor(System.Double)" />
          <element api="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)" />
        </element>
        <element api="P:System.Windows.Thickness.Bottom" />
        <element api="Overload:System.Windows.Thickness.Equals">
          <element api="M:System.Windows.Thickness.Equals(System.Object)" />
          <element api="M:System.Windows.Thickness.Equals(System.Windows.Thickness)" />
        </element>
        <element api="M:System.Windows.Thickness.GetHashCode" />
        <element api="P:System.Windows.Thickness.Left" />
        <element api="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)" />
        <element api="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)" />
        <element api="P:System.Windows.Thickness.Right" />
        <element api="P:System.Windows.Thickness.Top" />
        <element api="M:System.Windows.Thickness.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" />
      </containers>
      <file name="31d5e793-2818-0f56-c2e7-4364a830d243" />
    </api>
    <api id="Methods.T:System.Windows.Thickness">
      <topicdata name="Thickness" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Thickness" />
      <apidata name="Thickness" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Windows.Thickness.Equals">
          <element api="M:System.Windows.Thickness.Equals(System.Object)" />
          <element api="M:System.Windows.Thickness.Equals(System.Windows.Thickness)" />
        </element>
        <element api="M:System.Windows.Thickness.GetHashCode" />
        <element api="M:System.Windows.Thickness.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" />
      </containers>
      <file name="f8ac5562-f6b9-6792-38e4-2c4ae30dd7c3" />
    </api>
    <api id="Operators.T:System.Windows.Thickness">
      <topicdata name="Thickness" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Thickness" />
      <apidata name="Thickness" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)" />
        <element api="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" />
      </containers>
      <file name="7178b623-94d2-df9c-6ff4-a48ddbb0dc69" />
    </api>
    <api id="Properties.T:System.Windows.Thickness">
      <topicdata name="Thickness" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Thickness" />
      <apidata name="Thickness" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Thickness.Bottom" />
        <element api="P:System.Windows.Thickness.Left" />
        <element api="P:System.Windows.Thickness.Right" />
        <element api="P:System.Windows.Thickness.Top" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" />
      </containers>
      <file name="a1fd2bb8-e9ff-a265-0a34-9564229483c7" />
    </api>
    <api id="Overload:System.Windows.Thickness.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Thickness" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Thickness.#ctor(System.Double)" />
        <element api="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="a7c0d4d5-60aa-fbfe-8fca-fa0148d177b8" />
    </api>
    <api id="Overload:System.Windows.Thickness.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Windows.Thickness" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Thickness.Equals(System.Object)" />
        <element api="M:System.Windows.Thickness.Equals(System.Windows.Thickness)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="63754978-af39-60ad-d57b-491fb7c789e2" />
    </api>
    <api id="M:System.Windows.Thickness.#ctor(System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Thickness.#ctor" />
      <parameters>
        <parameter name="uniformLength">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="0c38a385-191d-dc35-1f8c-4472743edd9a" />
    </api>
    <api id="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Thickness.#ctor" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="top">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="bottom">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="6a55b2c2-59b7-4266-de7f-8a0042088d7f" />
    </api>
    <api id="P:System.Windows.Thickness.Bottom">
      <topicdata group="api" />
      <apidata name="Bottom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Bottom" />
      <setter name="set_Bottom" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="4aa5979b-e00e-acd6-f939-6b66e5843779" />
    </api>
    <api id="M:System.Windows.Thickness.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Thickness.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="5886b1cb-acf3-907a-6e40-7a8be6a0f7f7" />
    </api>
    <api id="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Thickness.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thickness">
          <type api="T:System.Windows.Thickness" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="4d6e497f-8473-5da4-2a19-0dcdeb94ad96" />
    </api>
    <api id="M:System.Windows.Thickness.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="326ec0c2-988c-588b-7843-8567763942ae" />
    </api>
    <api id="P:System.Windows.Thickness.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="9d7f03db-7029-b186-8a50-87c36ef6d955" />
    </api>
    <api id="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Thickness" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Thickness" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="1b98a7b5-514e-e3d9-dc83-95951c75d20f" />
    </api>
    <api id="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="t1">
          <type api="T:System.Windows.Thickness" ref="false" />
        </parameter>
        <parameter name="t2">
          <type api="T:System.Windows.Thickness" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="3bc0bb6e-fa9f-2101-fb65-e2d26ed4ec6e" />
    </api>
    <api id="P:System.Windows.Thickness.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="2a955dff-8171-7afe-dd89-7cb2deaeba0c" />
    </api>
    <api id="P:System.Windows.Thickness.Top">
      <topicdata group="api" />
      <apidata name="Top" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Top" />
      <setter name="set_Top" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="7e668e41-d6ae-220f-9ff2-bf9b162612f8" />
    </api>
    <api id="M:System.Windows.Thickness.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Thickness" ref="false" />
      </containers>
      <file name="c29b819f-c510-b4c2-5ea9-1dded42404af" />
    </api>
    <api id="T:System.Windows.TriggerAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TriggerAction" />
      <apidata name="TriggerAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Media.Animation.BeginStoryboard" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="5ee59045-934c-178c-f964-52679ad91deb" />
    </api>
    <api id="AllMembers.T:System.Windows.TriggerAction">
      <topicdata name="TriggerAction" group="list" subgroup="members" typeTopicId="T:System.Windows.TriggerAction" />
      <apidata name="TriggerAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerAction" />
      </containers>
      <file name="2fef378b-798d-0428-43e7-d7e6c9b10e9c" />
    </api>
    <api id="Methods.T:System.Windows.TriggerAction">
      <topicdata name="TriggerAction" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TriggerAction" />
      <apidata name="TriggerAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerAction" />
      </containers>
      <file name="e23b91a5-a690-8823-2b34-7874fadb9abc" />
    </api>
    <api id="Properties.T:System.Windows.TriggerAction">
      <topicdata name="TriggerAction" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TriggerAction" />
      <apidata name="TriggerAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerAction" />
      </containers>
      <file name="1d1eaecc-49c7-6a0b-80bf-859590375c4d" />
    </api>
    <api id="T:System.Windows.TriggerActionCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TriggerActionCollection" />
      <apidata name="TriggerActionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TriggerActionCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.TriggerAction" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="d10f8c96-b4c3-0927-06e2-bd4fb2557b1b" />
    </api>
    <api id="AllMembers.T:System.Windows.TriggerActionCollection">
      <topicdata name="TriggerActionCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.TriggerActionCollection" />
      <apidata name="TriggerActionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TriggerActionCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.TriggerActionCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Windows.TriggerActionCollection.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerActionCollection" />
      </containers>
      <file name="197fbe06-c44c-a3b2-dd33-947c4198aba1" />
    </api>
    <api id="Methods.T:System.Windows.TriggerActionCollection">
      <topicdata name="TriggerActionCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TriggerActionCollection" />
      <apidata name="TriggerActionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TriggerActionCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.TriggerActionCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerActionCollection" />
      </containers>
      <file name="3b2fe765-d536-f6e9-53f3-22afd48b8b14" />
    </api>
    <api id="Properties.T:System.Windows.TriggerActionCollection">
      <topicdata name="TriggerActionCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TriggerActionCollection" />
      <apidata name="TriggerActionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.TriggerActionCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerActionCollection" />
      </containers>
      <file name="e783da80-53c2-e066-7feb-74c0a54cd9a8" />
    </api>
    <api id="M:System.Windows.TriggerActionCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerActionCollection" ref="true" />
      </containers>
      <file name="0e6be0a6-1115-284a-eb06-7fafdea406c0" />
    </api>
    <api id="T:System.Windows.TriggerBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TriggerBase" />
      <apidata name="TriggerBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.EventTrigger" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="eda45369-f5fe-ea29-7f81-1b4a1becaef9" />
    </api>
    <api id="AllMembers.T:System.Windows.TriggerBase">
      <topicdata name="TriggerBase" group="list" subgroup="members" typeTopicId="T:System.Windows.TriggerBase" />
      <apidata name="TriggerBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerBase" />
      </containers>
      <file name="6eddf061-a520-b57c-4ee0-66e88f670063" />
    </api>
    <api id="Methods.T:System.Windows.TriggerBase">
      <topicdata name="TriggerBase" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TriggerBase" />
      <apidata name="TriggerBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerBase" />
      </containers>
      <file name="d13b1419-7219-fdc0-a42c-8aec7ffbd59f" />
    </api>
    <api id="Properties.T:System.Windows.TriggerBase">
      <topicdata name="TriggerBase" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TriggerBase" />
      <apidata name="TriggerBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerBase" />
      </containers>
      <file name="62b0206f-da7c-a7a8-875a-75f3b5101360" />
    </api>
    <api id="T:System.Windows.TriggerCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.TriggerCollection" />
      <apidata name="TriggerCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.PresentationFrameworkCollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.TriggerBase" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="bbf5c0df-1ffc-bba6-70d5-3bf17e4460e4" />
    </api>
    <api id="AllMembers.T:System.Windows.TriggerCollection">
      <topicdata name="TriggerCollection" group="list" subgroup="members" typeTopicId="T:System.Windows.TriggerCollection" />
      <apidata name="TriggerCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.TriggerCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerCollection" />
      </containers>
      <file name="6692248c-4fb4-9815-b58b-fd0d8d3ba5ab" />
    </api>
    <api id="Methods.T:System.Windows.TriggerCollection">
      <topicdata name="TriggerCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.TriggerCollection" />
      <apidata name="TriggerCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Clear" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)" />
        <element api="Overload:System.Windows.TriggerCollection.CopyTo">
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)" />
        </element>
        <element api="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerCollection" />
      </containers>
      <file name="e3a692aa-25f9-ab1f-f890-5f5ad515c59d" />
    </api>
    <api id="Properties.T:System.Windows.TriggerCollection">
      <topicdata name="TriggerCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.TriggerCollection" />
      <apidata name="TriggerCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Count" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot" />
        <element api="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.TriggerCollection" />
      </containers>
      <file name="cfda55e3-4cc2-44ed-8e37-4fb878a27981" />
    </api>
    <api id="T:System.Windows.UIElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="3c651179-50cb-1662-b3b4-4e78874aec31" />
    </api>
    <api id="AllMembers.T:System.Windows.UIElement">
      <topicdata name="UIElement" group="list" subgroup="members" typeTopicId="T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="F:System.Windows.UIElement.AllowDropProperty" />
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="F:System.Windows.UIElement.CacheModeProperty" />
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="F:System.Windows.UIElement.ClipProperty" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="E:System.Windows.UIElement.DoubleTap" />
        <element api="F:System.Windows.UIElement.DoubleTapEvent" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.Hold" />
        <element api="F:System.Windows.UIElement.HoldEvent" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="F:System.Windows.UIElement.KeyDownEvent" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="F:System.Windows.UIElement.KeyUpEvent" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="F:System.Windows.UIElement.ManipulationCompletedEvent" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="F:System.Windows.UIElement.ManipulationDeltaEvent" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="F:System.Windows.UIElement.ManipulationStartedEvent" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="F:System.Windows.UIElement.OpacityMaskProperty" />
        <element api="F:System.Windows.UIElement.OpacityProperty" />
        <element api="P:System.Windows.UIElement.Projection" />
        <element api="F:System.Windows.UIElement.ProjectionProperty" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="F:System.Windows.UIElement.RenderTransformOriginProperty" />
        <element api="F:System.Windows.UIElement.RenderTransformProperty" />
        <element api="E:System.Windows.UIElement.Tap" />
        <element api="F:System.Windows.UIElement.TapEvent" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="F:System.Windows.UIElement.TextInputEvent" />
        <element api="E:System.Windows.UIElement.TextInputStart" />
        <element api="F:System.Windows.UIElement.TextInputStartEvent" />
        <element api="E:System.Windows.UIElement.TextInputUpdate" />
        <element api="F:System.Windows.UIElement.TextInputUpdateEvent" />
        <element api="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
        <element api="P:System.Windows.UIElement.UseLayoutRounding" />
        <element api="F:System.Windows.UIElement.UseLayoutRoundingProperty" />
        <element api="P:System.Windows.UIElement.Visibility" />
        <element api="F:System.Windows.UIElement.VisibilityProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" />
      </containers>
      <file name="229bc431-4295-fd39-706f-09abde5e7be5" />
    </api>
    <api id="Methods.T:System.Windows.UIElement">
      <topicdata name="UIElement" group="list" subgroup="Methods" typeTopicId="T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
        <element api="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
        <element api="M:System.Windows.UIElement.CaptureMouse" />
        <element api="M:System.Windows.UIElement.InvalidateArrange" />
        <element api="M:System.Windows.UIElement.InvalidateMeasure" />
        <element api="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
        <element api="M:System.Windows.UIElement.OnCreateAutomationPeer" />
        <element api="M:System.Windows.UIElement.ReleaseMouseCapture" />
        <element api="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
        <element api="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)" />
        <element api="M:System.Windows.UIElement.UpdateLayout" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" />
      </containers>
      <file name="52c5d421-abd3-9657-4619-ac446d170bb6" />
    </api>
    <api id="Properties.T:System.Windows.UIElement">
      <topicdata name="UIElement" group="list" subgroup="Properties" typeTopicId="T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.UIElement.AllowDrop" />
        <element api="P:System.Windows.UIElement.CacheMode" />
        <element api="P:System.Windows.UIElement.Clip" />
        <element api="P:System.Windows.UIElement.DesiredSize" />
        <element api="P:System.Windows.UIElement.IsHitTestVisible" />
        <element api="P:System.Windows.UIElement.Opacity" />
        <element api="P:System.Windows.UIElement.OpacityMask" />
        <element api="P:System.Windows.UIElement.Projection" />
        <element api="P:System.Windows.UIElement.RenderSize" />
        <element api="P:System.Windows.UIElement.RenderTransform" />
        <element api="P:System.Windows.UIElement.RenderTransformOrigin" />
        <element api="P:System.Windows.UIElement.UseLayoutRounding" />
        <element api="P:System.Windows.UIElement.Visibility" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" />
      </containers>
      <file name="539052a5-6a3b-ff13-dc12-e6e63b61f563" />
    </api>
    <api id="Events.T:System.Windows.UIElement">
      <topicdata name="UIElement" group="list" subgroup="Events" typeTopicId="T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.UIElement.DoubleTap" />
        <element api="E:System.Windows.UIElement.GotFocus" />
        <element api="E:System.Windows.UIElement.Hold" />
        <element api="E:System.Windows.UIElement.KeyDown" />
        <element api="E:System.Windows.UIElement.KeyUp" />
        <element api="E:System.Windows.UIElement.LostFocus" />
        <element api="E:System.Windows.UIElement.LostMouseCapture" />
        <element api="E:System.Windows.UIElement.ManipulationCompleted" />
        <element api="E:System.Windows.UIElement.ManipulationDelta" />
        <element api="E:System.Windows.UIElement.ManipulationStarted" />
        <element api="E:System.Windows.UIElement.MouseEnter" />
        <element api="E:System.Windows.UIElement.MouseLeave" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonDown" />
        <element api="E:System.Windows.UIElement.MouseLeftButtonUp" />
        <element api="E:System.Windows.UIElement.MouseMove" />
        <element api="E:System.Windows.UIElement.MouseWheel" />
        <element api="E:System.Windows.UIElement.Tap" />
        <element api="E:System.Windows.UIElement.TextInput" />
        <element api="E:System.Windows.UIElement.TextInputStart" />
        <element api="E:System.Windows.UIElement.TextInputUpdate" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" />
      </containers>
      <file name="ad824de3-2b40-eb7e-ebf0-62166d33aea0" />
    </api>
    <api id="Fields.T:System.Windows.UIElement">
      <topicdata name="UIElement" group="list" subgroup="Fields" typeTopicId="T:System.Windows.UIElement" />
      <apidata name="UIElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.UIElement.AllowDropProperty" />
        <element api="F:System.Windows.UIElement.CacheModeProperty" />
        <element api="F:System.Windows.UIElement.ClipProperty" />
        <element api="F:System.Windows.UIElement.DoubleTapEvent" />
        <element api="F:System.Windows.UIElement.HoldEvent" />
        <element api="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
        <element api="F:System.Windows.UIElement.KeyDownEvent" />
        <element api="F:System.Windows.UIElement.KeyUpEvent" />
        <element api="F:System.Windows.UIElement.ManipulationCompletedEvent" />
        <element api="F:System.Windows.UIElement.ManipulationDeltaEvent" />
        <element api="F:System.Windows.UIElement.ManipulationStartedEvent" />
        <element api="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
        <element api="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
        <element api="F:System.Windows.UIElement.OpacityMaskProperty" />
        <element api="F:System.Windows.UIElement.OpacityProperty" />
        <element api="F:System.Windows.UIElement.ProjectionProperty" />
        <element api="F:System.Windows.UIElement.RenderTransformOriginProperty" />
        <element api="F:System.Windows.UIElement.RenderTransformProperty" />
        <element api="F:System.Windows.UIElement.TapEvent" />
        <element api="F:System.Windows.UIElement.TextInputEvent" />
        <element api="F:System.Windows.UIElement.TextInputStartEvent" />
        <element api="F:System.Windows.UIElement.TextInputUpdateEvent" />
        <element api="F:System.Windows.UIElement.UseLayoutRoundingProperty" />
        <element api="F:System.Windows.UIElement.VisibilityProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" />
      </containers>
      <file name="b3ec8b0d-c91d-f5b6-a3fa-c21debb8c7a5" />
    </api>
    <api id="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="routedEvent">
          <type api="T:System.Windows.RoutedEvent" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="handledEventsToo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="62d1efaf-f9c2-cf71-da02-b8f77ad823f3" />
    </api>
    <api id="P:System.Windows.UIElement.AllowDrop">
      <topicdata group="api" />
      <apidata name="AllowDrop" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDrop" />
      <setter name="set_AllowDrop" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="1337b97b-54e3-a7f1-08b7-e1253617d4c0" />
    </api>
    <api id="F:System.Windows.UIElement.AllowDropProperty">
      <topicdata group="api" />
      <apidata name="AllowDropProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="d51550eb-afc4-ed16-f060-db453e68cba5" />
    </api>
    <api id="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
      <topicdata group="api" />
      <apidata name="Arrange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="finalRect">
          <type api="T:System.Windows.Rect" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="347f31db-9a42-8fad-fc98-df784aa2e31e" />
    </api>
    <api id="P:System.Windows.UIElement.CacheMode">
      <topicdata group="api" />
      <apidata name="CacheMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheMode" />
      <setter name="set_CacheMode" />
      <returns>
        <type api="T:System.Windows.Media.CacheMode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="527aa233-8d30-2a43-a5da-431eca1ac50c" />
    </api>
    <api id="F:System.Windows.UIElement.CacheModeProperty">
      <topicdata group="api" />
      <apidata name="CacheModeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="2ccd7b1e-048e-2cf6-2be3-c08ee1915406" />
    </api>
    <api id="M:System.Windows.UIElement.CaptureMouse">
      <topicdata group="api" />
      <apidata name="CaptureMouse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="be506846-c3cf-24b2-8038-f1c2f33bffe0" />
    </api>
    <api id="P:System.Windows.UIElement.Clip">
      <topicdata group="api" />
      <apidata name="Clip" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Clip" />
      <setter name="set_Clip" />
      <returns>
        <type api="T:System.Windows.Media.Geometry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="3e380439-cdf1-757b-ef58-3adb902c2ef1" />
    </api>
    <api id="F:System.Windows.UIElement.ClipProperty">
      <topicdata group="api" />
      <apidata name="ClipProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="e7fac678-e791-e956-13f3-cb16b45ee438" />
    </api>
    <api id="P:System.Windows.UIElement.DesiredSize">
      <topicdata group="api" />
      <apidata name="DesiredSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesiredSize" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="7c2c0432-893b-f812-3325-d0246ffaa39d" />
    </api>
    <api id="E:System.Windows.UIElement.DoubleTap">
      <topicdata group="api" />
      <apidata name="DoubleTap" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DoubleTap" />
      <remover name="remove_DoubleTap" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="200b8966-b1ca-87fa-7e28-70285124ab4a" />
    </api>
    <api id="F:System.Windows.UIElement.DoubleTapEvent">
      <topicdata group="api" />
      <apidata name="DoubleTapEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="12edd711-18aa-dd8d-7045-b0f5505e9e11" />
    </api>
    <api id="E:System.Windows.UIElement.GotFocus">
      <topicdata group="api" />
      <apidata name="GotFocus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_GotFocus" />
      <remover name="remove_GotFocus" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="1d3a958d-b17f-628c-9b09-093f3f99bee0" />
    </api>
    <api id="E:System.Windows.UIElement.Hold">
      <topicdata group="api" />
      <apidata name="Hold" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Hold" />
      <remover name="remove_Hold" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="86dd5674-3220-16b5-3d8a-f9b8eff4e894" />
    </api>
    <api id="F:System.Windows.UIElement.HoldEvent">
      <topicdata group="api" />
      <apidata name="HoldEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="d36369f3-54cc-3834-7b17-78528abe422a" />
    </api>
    <api id="M:System.Windows.UIElement.InvalidateArrange">
      <topicdata group="api" />
      <apidata name="InvalidateArrange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="e9a62d12-28bd-57e2-4ea3-c3a7eea9e33a" />
    </api>
    <api id="M:System.Windows.UIElement.InvalidateMeasure">
      <topicdata group="api" />
      <apidata name="InvalidateMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="d7b3a245-02f6-3fe8-050c-39ee4c11173f" />
    </api>
    <api id="P:System.Windows.UIElement.IsHitTestVisible">
      <topicdata group="api" />
      <apidata name="IsHitTestVisible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsHitTestVisible" />
      <setter name="set_IsHitTestVisible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="0aa75740-2109-0981-3057-4ce8354fb877" />
    </api>
    <api id="F:System.Windows.UIElement.IsHitTestVisibleProperty">
      <topicdata group="api" />
      <apidata name="IsHitTestVisibleProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="9bd03179-51b4-ce20-6d6e-6e0ab61b8933" />
    </api>
    <api id="E:System.Windows.UIElement.KeyDown">
      <topicdata group="api" />
      <apidata name="KeyDown" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_KeyDown" />
      <remover name="remove_KeyDown" />
      <eventhandler>
        <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="eb5e3b82-b2ad-18cc-4e5e-76fd543d4eb0" />
    </api>
    <api id="F:System.Windows.UIElement.KeyDownEvent">
      <topicdata group="api" />
      <apidata name="KeyDownEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="d0675568-ea0d-5f57-c047-5d3e4b7de06c" />
    </api>
    <api id="E:System.Windows.UIElement.KeyUp">
      <topicdata group="api" />
      <apidata name="KeyUp" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_KeyUp" />
      <remover name="remove_KeyUp" />
      <eventhandler>
        <type api="T:System.Windows.Input.KeyEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.KeyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="b8a60f50-ceb7-5f38-9c49-fe147dfafea7" />
    </api>
    <api id="F:System.Windows.UIElement.KeyUpEvent">
      <topicdata group="api" />
      <apidata name="KeyUpEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="64207975-5617-a1f6-089d-94e3e7da6446" />
    </api>
    <api id="E:System.Windows.UIElement.LostFocus">
      <topicdata group="api" />
      <apidata name="LostFocus" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LostFocus" />
      <remover name="remove_LostFocus" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="f3951325-bc5b-5fd5-0a4c-d1ee70bb7e99" />
    </api>
    <api id="E:System.Windows.UIElement.LostMouseCapture">
      <topicdata group="api" />
      <apidata name="LostMouseCapture" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LostMouseCapture" />
      <remover name="remove_LostMouseCapture" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="6a81e610-4fed-4ce5-f6ae-536739fc9d33" />
    </api>
    <api id="E:System.Windows.UIElement.ManipulationCompleted">
      <topicdata group="api" />
      <apidata name="ManipulationCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ManipulationCompleted" />
      <remover name="remove_ManipulationCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.ManipulationCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="72e7f230-7e5c-9ca9-242e-5d47fc7516d8" />
    </api>
    <api id="F:System.Windows.UIElement.ManipulationCompletedEvent">
      <topicdata group="api" />
      <apidata name="ManipulationCompletedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="deee365b-ba72-31c4-281a-87fa92941e19" />
    </api>
    <api id="E:System.Windows.UIElement.ManipulationDelta">
      <topicdata group="api" />
      <apidata name="ManipulationDelta" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ManipulationDelta" />
      <remover name="remove_ManipulationDelta" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.ManipulationDeltaEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="b6025302-a4f9-b3e4-7755-614315bd23a0" />
    </api>
    <api id="F:System.Windows.UIElement.ManipulationDeltaEvent">
      <topicdata group="api" />
      <apidata name="ManipulationDeltaEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="b7efe12e-1fbc-68c1-e54d-a181aeb86c08" />
    </api>
    <api id="E:System.Windows.UIElement.ManipulationStarted">
      <topicdata group="api" />
      <apidata name="ManipulationStarted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ManipulationStarted" />
      <remover name="remove_ManipulationStarted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.ManipulationStartedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="e9562e55-f432-544d-54f8-b0b94631bc6d" />
    </api>
    <api id="F:System.Windows.UIElement.ManipulationStartedEvent">
      <topicdata group="api" />
      <apidata name="ManipulationStartedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="7ea2a73f-f1ea-790a-92f1-a4576ec3ea4c" />
    </api>
    <api id="M:System.Windows.UIElement.Measure(System.Windows.Size)">
      <topicdata group="api" />
      <apidata name="Measure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="availableSize">
          <type api="T:System.Windows.Size" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="a4096c0e-6b26-b05d-8493-b2a0891a952f" />
    </api>
    <api id="E:System.Windows.UIElement.MouseEnter">
      <topicdata group="api" />
      <apidata name="MouseEnter" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseEnter" />
      <remover name="remove_MouseEnter" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="98345fd5-a088-8193-c482-810738b6d059" />
    </api>
    <api id="E:System.Windows.UIElement.MouseLeave">
      <topicdata group="api" />
      <apidata name="MouseLeave" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseLeave" />
      <remover name="remove_MouseLeave" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="0cb5c203-611c-bb5e-eaf5-7ee781da7276" />
    </api>
    <api id="E:System.Windows.UIElement.MouseLeftButtonDown">
      <topicdata group="api" />
      <apidata name="MouseLeftButtonDown" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseLeftButtonDown" />
      <remover name="remove_MouseLeftButtonDown" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="4d098f7d-8db0-8df2-0236-b17d8756aea3" />
    </api>
    <api id="F:System.Windows.UIElement.MouseLeftButtonDownEvent">
      <topicdata group="api" />
      <apidata name="MouseLeftButtonDownEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="9671768e-718b-b410-d660-cf9c0b389e40" />
    </api>
    <api id="E:System.Windows.UIElement.MouseLeftButtonUp">
      <topicdata group="api" />
      <apidata name="MouseLeftButtonUp" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseLeftButtonUp" />
      <remover name="remove_MouseLeftButtonUp" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseButtonEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseButtonEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="257c10f8-9376-79ab-1720-1d9c5f9dd490" />
    </api>
    <api id="F:System.Windows.UIElement.MouseLeftButtonUpEvent">
      <topicdata group="api" />
      <apidata name="MouseLeftButtonUpEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="fdb71ea8-790e-1337-a25d-155aedb74d14" />
    </api>
    <api id="E:System.Windows.UIElement.MouseMove">
      <topicdata group="api" />
      <apidata name="MouseMove" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseMove" />
      <remover name="remove_MouseMove" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="4243f98a-9639-bff9-d005-fae23a2ff065" />
    </api>
    <api id="E:System.Windows.UIElement.MouseWheel">
      <topicdata group="api" />
      <apidata name="MouseWheel" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MouseWheel" />
      <remover name="remove_MouseWheel" />
      <eventhandler>
        <type api="T:System.Windows.Input.MouseWheelEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.MouseWheelEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="6159e9eb-bcdd-2abd-b603-416dcd271299" />
    </api>
    <api id="M:System.Windows.UIElement.OnCreateAutomationPeer">
      <topicdata group="api" />
      <apidata name="OnCreateAutomationPeer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Windows.Automation.Peers.AutomationPeer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="2b927bae-2c3d-d360-e70e-6a1af07513b1" />
    </api>
    <api id="P:System.Windows.UIElement.Opacity">
      <topicdata group="api" />
      <apidata name="Opacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Opacity" />
      <setter name="set_Opacity" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="f03ba27c-9537-a00f-d0a1-5acd5f789d9d" />
    </api>
    <api id="P:System.Windows.UIElement.OpacityMask">
      <topicdata group="api" />
      <apidata name="OpacityMask" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OpacityMask" />
      <setter name="set_OpacityMask" />
      <returns>
        <type api="T:System.Windows.Media.Brush" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="2d75c924-9745-0df3-bd3c-fa8aa383a3c7" />
    </api>
    <api id="F:System.Windows.UIElement.OpacityMaskProperty">
      <topicdata group="api" />
      <apidata name="OpacityMaskProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="c801ac82-bcf4-c07d-499f-60e1a7b0dff5" />
    </api>
    <api id="F:System.Windows.UIElement.OpacityProperty">
      <topicdata group="api" />
      <apidata name="OpacityProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="58cbe074-4cdf-43b6-31a7-0e82e77adb32" />
    </api>
    <api id="P:System.Windows.UIElement.Projection">
      <topicdata group="api" />
      <apidata name="Projection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Projection" />
      <setter name="set_Projection" />
      <returns>
        <type api="T:System.Windows.Media.Projection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="a95f1c8a-1d3b-f246-02cf-02d258a2e6d5" />
    </api>
    <api id="F:System.Windows.UIElement.ProjectionProperty">
      <topicdata group="api" />
      <apidata name="ProjectionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="507a413e-5360-be50-56b8-5ad29ee6b036" />
    </api>
    <api id="M:System.Windows.UIElement.ReleaseMouseCapture">
      <topicdata group="api" />
      <apidata name="ReleaseMouseCapture" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="533c87d6-db15-bb5d-73be-d9743c974800" />
    </api>
    <api id="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="routedEvent">
          <type api="T:System.Windows.RoutedEvent" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="6a741a22-191b-b13e-338c-442dea38faf9" />
    </api>
    <api id="P:System.Windows.UIElement.RenderSize">
      <topicdata group="api" />
      <apidata name="RenderSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RenderSize" />
      <returns>
        <type api="T:System.Windows.Size" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="02850863-475f-3b61-515d-941d216389c2" />
    </api>
    <api id="P:System.Windows.UIElement.RenderTransform">
      <topicdata group="api" />
      <apidata name="RenderTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderTransform" />
      <setter name="set_RenderTransform" />
      <returns>
        <type api="T:System.Windows.Media.Transform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="cc701329-2d1b-a6dd-bb79-1ef16b8d80b8" />
    </api>
    <api id="P:System.Windows.UIElement.RenderTransformOrigin">
      <topicdata group="api" />
      <apidata name="RenderTransformOrigin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderTransformOrigin" />
      <setter name="set_RenderTransformOrigin" />
      <returns>
        <type api="T:System.Windows.Point" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="7e839bb0-0ed3-a636-de43-c3d87b52e7cc" />
    </api>
    <api id="F:System.Windows.UIElement.RenderTransformOriginProperty">
      <topicdata group="api" />
      <apidata name="RenderTransformOriginProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="9d3e308f-f63e-8371-a958-38ba86586f6d" />
    </api>
    <api id="F:System.Windows.UIElement.RenderTransformProperty">
      <topicdata group="api" />
      <apidata name="RenderTransformProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="2ab8ae12-02c9-7e48-6721-d19e92ab79d8" />
    </api>
    <api id="E:System.Windows.UIElement.Tap">
      <topicdata group="api" />
      <apidata name="Tap" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Tap" />
      <remover name="remove_Tap" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.GestureEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="970c6dbf-565e-7aae-eadd-dd8644452fa4" />
    </api>
    <api id="F:System.Windows.UIElement.TapEvent">
      <topicdata group="api" />
      <apidata name="TapEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="5d660a1f-f5a9-380c-957f-96f5b4e2371d" />
    </api>
    <api id="E:System.Windows.UIElement.TextInput">
      <topicdata group="api" />
      <apidata name="TextInput" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TextInput" />
      <remover name="remove_TextInput" />
      <eventhandler>
        <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="10b5eb65-c2e2-48e9-9f74-0ee3dac35cb7" />
    </api>
    <api id="F:System.Windows.UIElement.TextInputEvent">
      <topicdata group="api" />
      <apidata name="TextInputEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="cfac816b-54f5-d5da-3911-796d4b28e3bf" />
    </api>
    <api id="E:System.Windows.UIElement.TextInputStart">
      <topicdata group="api" />
      <apidata name="TextInputStart" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TextInputStart" />
      <remover name="remove_TextInputStart" />
      <eventhandler>
        <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="07afc5bd-db6a-f15a-27fe-44b23df04c0c" />
    </api>
    <api id="F:System.Windows.UIElement.TextInputStartEvent">
      <topicdata group="api" />
      <apidata name="TextInputStartEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="b9ddaa38-8479-30e8-c8c2-2566d0f6b948" />
    </api>
    <api id="E:System.Windows.UIElement.TextInputUpdate">
      <topicdata group="api" />
      <apidata name="TextInputUpdate" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TextInputUpdate" />
      <remover name="remove_TextInputUpdate" />
      <eventhandler>
        <type api="T:System.Windows.Input.TextCompositionEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Input.TextCompositionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="4eee7253-631f-9f08-c00a-fdd10286e1df" />
    </api>
    <api id="F:System.Windows.UIElement.TextInputUpdateEvent">
      <topicdata group="api" />
      <apidata name="TextInputUpdateEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="1987dd34-94a3-0b0a-ccf1-d0089021991a" />
    </api>
    <api id="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)">
      <topicdata group="api" />
      <apidata name="TransformToVisual" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="visual">
          <type api="T:System.Windows.UIElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="13457a38-0ee5-7a58-51e1-325c57b21ddb" />
    </api>
    <api id="M:System.Windows.UIElement.UpdateLayout">
      <topicdata group="api" />
      <apidata name="UpdateLayout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="023785b9-fd36-04d6-a39a-f12e58d6e5d2" />
    </api>
    <api id="P:System.Windows.UIElement.UseLayoutRounding">
      <topicdata group="api" />
      <apidata name="UseLayoutRounding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseLayoutRounding" />
      <setter name="set_UseLayoutRounding" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="99b05e4b-3a37-94bb-646f-931a56004d60" />
    </api>
    <api id="F:System.Windows.UIElement.UseLayoutRoundingProperty">
      <topicdata group="api" />
      <apidata name="UseLayoutRoundingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="2f0c3226-1139-c97a-311e-59ae16ad2771" />
    </api>
    <api id="P:System.Windows.UIElement.Visibility">
      <topicdata group="api" />
      <apidata name="Visibility" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Visibility" />
      <setter name="set_Visibility" />
      <returns>
        <type api="T:System.Windows.Visibility" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="dd62f269-fd47-bef2-fdfd-42c21c89825a" />
    </api>
    <api id="F:System.Windows.UIElement.VisibilityProperty">
      <topicdata group="api" />
      <apidata name="VisibilityProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.UIElement" ref="true" />
      </containers>
      <file name="d0c3d401-25cf-f6d8-87ff-8d16095097e2" />
    </api>
    <api id="T:System.Windows.VerticalAlignment">
      <topicdata group="api" />
      <apidata name="VerticalAlignment" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.VerticalAlignment.Top" />
        <element api="F:System.Windows.VerticalAlignment.Center" />
        <element api="F:System.Windows.VerticalAlignment.Bottom" />
        <element api="F:System.Windows.VerticalAlignment.Stretch" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c664158b-a017-f5b2-9711-7c7875574e6d" />
    </api>
    <api id="F:System.Windows.VerticalAlignment.Bottom">
      <topicdata group="api" notopic="" />
      <apidata name="Bottom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </containers>
      <file name="c8768fac-e240-d364-8064-bb3ac625ef7d" />
    </api>
    <api id="F:System.Windows.VerticalAlignment.Center">
      <topicdata group="api" notopic="" />
      <apidata name="Center" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </containers>
      <file name="2f570d37-d436-f771-c552-6dc5efb901e0" />
    </api>
    <api id="F:System.Windows.VerticalAlignment.Stretch">
      <topicdata group="api" notopic="" />
      <apidata name="Stretch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </containers>
      <file name="ff25860a-baa5-a903-33e1-bed3f872d101" />
    </api>
    <api id="F:System.Windows.VerticalAlignment.Top">
      <topicdata group="api" notopic="" />
      <apidata name="Top" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VerticalAlignment" ref="false" />
      </containers>
      <file name="7824f996-d7cc-ba1c-a571-49b709aec820" />
    </api>
    <api id="T:System.Windows.Visibility">
      <topicdata group="api" />
      <apidata name="Visibility" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Windows.Visibility.Visible" />
        <element api="F:System.Windows.Visibility.Collapsed" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="40d66826-6e19-d0dd-b3b6-92a880399301" />
    </api>
    <api id="F:System.Windows.Visibility.Collapsed">
      <topicdata group="api" notopic="" />
      <apidata name="Collapsed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Visibility" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Visibility" ref="false" />
      </containers>
      <file name="8ad7dcb5-3ce5-1659-35d1-79177a6cc059" />
    </api>
    <api id="F:System.Windows.Visibility.Visible">
      <topicdata group="api" notopic="" />
      <apidata name="Visible" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Visibility" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.Visibility" ref="false" />
      </containers>
      <file name="758bd102-371f-fdc2-45fe-607984e36cc8" />
    </api>
    <api id="T:System.Windows.VisualState">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.VisualState" />
      <apidata name="VisualState" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualState.#ctor" contentProperty="P:System.Windows.VisualState.Storyboard" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Storyboard</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bccbb091-87a6-6c88-47dd-b6f8b2f11532" />
    </api>
    <api id="AllMembers.T:System.Windows.VisualState">
      <topicdata name="VisualState" group="list" subgroup="members" typeTopicId="T:System.Windows.VisualState" />
      <apidata name="VisualState" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualState.#ctor" contentProperty="P:System.Windows.VisualState.Storyboard" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.VisualState.#ctor" />
        <element api="P:System.Windows.VisualState.Name" />
        <element api="P:System.Windows.VisualState.Storyboard" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" />
      </containers>
      <file name="7076377b-6cde-b6ed-fb51-f794e5a4640e" />
    </api>
    <api id="Methods.T:System.Windows.VisualState">
      <topicdata name="VisualState" group="list" subgroup="Methods" typeTopicId="T:System.Windows.VisualState" />
      <apidata name="VisualState" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualState.#ctor" contentProperty="P:System.Windows.VisualState.Storyboard" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" />
      </containers>
      <file name="ab752405-d729-cc3e-46c1-a01afc78d20c" />
    </api>
    <api id="Properties.T:System.Windows.VisualState">
      <topicdata name="VisualState" group="list" subgroup="Properties" typeTopicId="T:System.Windows.VisualState" />
      <apidata name="VisualState" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualState.#ctor" contentProperty="P:System.Windows.VisualState.Storyboard" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.VisualState.Name" />
        <element api="P:System.Windows.VisualState.Storyboard" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" />
      </containers>
      <file name="977165ed-70c6-9907-ec50-db8bd1ae7939" />
    </api>
    <api id="M:System.Windows.VisualState.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" ref="true" />
      </containers>
      <file name="f2b77020-4953-40ee-674e-d5020cc0ea32" />
    </api>
    <api id="P:System.Windows.VisualState.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" ref="true" />
      </containers>
      <file name="2d345ee2-cdd2-447d-c65b-c35984d021d3" />
    </api>
    <api id="P:System.Windows.VisualState.Storyboard">
      <topicdata group="api" />
      <apidata name="Storyboard" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Storyboard" />
      <setter name="set_Storyboard" />
      <returns>
        <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualState" ref="true" />
      </containers>
      <file name="6dd5e1b5-968a-130b-5ea4-f08144d8efd8" />
    </api>
    <api id="T:System.Windows.VisualStateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.VisualStateChangedEventArgs" />
      <apidata name="VisualStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateChangedEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="c8bf5fe7-d6c7-81d9-8a50-118885bded34" />
    </api>
    <api id="AllMembers.T:System.Windows.VisualStateChangedEventArgs">
      <topicdata name="VisualStateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Windows.VisualStateChangedEventArgs" />
      <apidata name="VisualStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateChangedEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.VisualStateChangedEventArgs.#ctor" />
        <element api="P:System.Windows.VisualStateChangedEventArgs.Control" />
        <element api="P:System.Windows.VisualStateChangedEventArgs.NewState" />
        <element api="P:System.Windows.VisualStateChangedEventArgs.OldState" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" />
      </containers>
      <file name="00ae1a42-48d0-3d40-8d7d-8b87cb7416c9" />
    </api>
    <api id="Methods.T:System.Windows.VisualStateChangedEventArgs">
      <topicdata name="VisualStateChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.VisualStateChangedEventArgs" />
      <apidata name="VisualStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateChangedEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" />
      </containers>
      <file name="aac72271-e243-e1f8-abab-fa290cd82acd" />
    </api>
    <api id="Properties.T:System.Windows.VisualStateChangedEventArgs">
      <topicdata name="VisualStateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.VisualStateChangedEventArgs" />
      <apidata name="VisualStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateChangedEventArgs.#ctor" />
      <elements>
        <element api="P:System.Windows.VisualStateChangedEventArgs.Control" />
        <element api="P:System.Windows.VisualStateChangedEventArgs.NewState" />
        <element api="P:System.Windows.VisualStateChangedEventArgs.OldState" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" />
      </containers>
      <file name="98fc1a2b-1954-b0de-a7d5-792b314b4baf" />
    </api>
    <api id="M:System.Windows.VisualStateChangedEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </containers>
      <file name="f25faa56-52d1-b074-3c8b-b629327109ab" />
    </api>
    <api id="P:System.Windows.VisualStateChangedEventArgs.Control">
      <topicdata group="api" />
      <apidata name="Control" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Control" />
      <setter name="set_Control" />
      <returns>
        <type api="T:System.Windows.Controls.Control" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </containers>
      <file name="7103cac0-6f46-d9b4-1315-f478c6ce2772" />
    </api>
    <api id="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <topicdata group="api" />
      <apidata name="NewState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NewState" />
      <setter name="set_NewState" />
      <returns>
        <type api="T:System.Windows.VisualState" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </containers>
      <file name="64871ea2-b226-22f4-3450-63877d60e1b9" />
    </api>
    <api id="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <topicdata group="api" />
      <apidata name="OldState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OldState" />
      <setter name="set_OldState" />
      <returns>
        <type api="T:System.Windows.VisualState" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </containers>
      <file name="57b30c51-d994-2704-71f5-13cf44e058d7" />
    </api>
    <api id="T:System.Windows.VisualStateGroup">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.VisualStateGroup" />
      <apidata name="VisualStateGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateGroup.#ctor" contentProperty="P:System.Windows.VisualStateGroup.States" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>States</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bec3cf90-0c38-3872-3636-e4adf39ee0f7" />
    </api>
    <api id="AllMembers.T:System.Windows.VisualStateGroup">
      <topicdata name="VisualStateGroup" group="list" subgroup="members" typeTopicId="T:System.Windows.VisualStateGroup" />
      <apidata name="VisualStateGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateGroup.#ctor" contentProperty="P:System.Windows.VisualStateGroup.States" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.VisualStateGroup.#ctor" />
        <element api="P:System.Windows.VisualStateGroup.CurrentState" />
        <element api="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
        <element api="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
        <element api="P:System.Windows.VisualStateGroup.Name" />
        <element api="P:System.Windows.VisualStateGroup.States" />
        <element api="P:System.Windows.VisualStateGroup.Transitions" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" />
      </containers>
      <file name="bc633272-cb71-13f7-9bb9-d8b6e45e7247" />
    </api>
    <api id="Methods.T:System.Windows.VisualStateGroup">
      <topicdata name="VisualStateGroup" group="list" subgroup="Methods" typeTopicId="T:System.Windows.VisualStateGroup" />
      <apidata name="VisualStateGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateGroup.#ctor" contentProperty="P:System.Windows.VisualStateGroup.States" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" />
      </containers>
      <file name="24d56ba4-247d-38bc-d086-9255893a457e" />
    </api>
    <api id="Properties.T:System.Windows.VisualStateGroup">
      <topicdata name="VisualStateGroup" group="list" subgroup="Properties" typeTopicId="T:System.Windows.VisualStateGroup" />
      <apidata name="VisualStateGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateGroup.#ctor" contentProperty="P:System.Windows.VisualStateGroup.States" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.VisualStateGroup.CurrentState" />
        <element api="P:System.Windows.VisualStateGroup.Name" />
        <element api="P:System.Windows.VisualStateGroup.States" />
        <element api="P:System.Windows.VisualStateGroup.Transitions" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" />
      </containers>
      <file name="8930cf64-0e88-b38f-e8bb-f65195d3c1bb" />
    </api>
    <api id="Events.T:System.Windows.VisualStateGroup">
      <topicdata name="VisualStateGroup" group="list" subgroup="Events" typeTopicId="T:System.Windows.VisualStateGroup" />
      <apidata name="VisualStateGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.VisualStateGroup.#ctor" contentProperty="P:System.Windows.VisualStateGroup.States" />
      <elements>
        <element api="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
        <element api="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" />
      </containers>
      <file name="b639c284-5592-10e0-931f-e74ac50dd999" />
    </api>
    <api id="M:System.Windows.VisualStateGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="1770f0bb-4f42-42ad-2a1f-bc2aac6867a7" />
    </api>
    <api id="P:System.Windows.VisualStateGroup.CurrentState">
      <topicdata group="api" />
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentState" />
      <returns>
        <type api="T:System.Windows.VisualState" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="4d4fe4dd-4f84-f72f-4065-7f84702f4fd4" />
    </api>
    <api id="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <topicdata group="api" />
      <apidata name="CurrentStateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentStateChanged" />
      <remover name="remove_CurrentStateChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="e339c20a-3a65-e5ba-3413-eac73b2742ec" />
    </api>
    <api id="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <topicdata group="api" />
      <apidata name="CurrentStateChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentStateChanging" />
      <remover name="remove_CurrentStateChanging" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.VisualStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="05e078f3-c422-b41d-9541-7374b3a31b3b" />
    </api>
    <api id="P:System.Windows.VisualStateGroup.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="10f6af4f-0ba9-d2de-1fdc-7009d22d7b0e" />
    </api>
    <api id="P:System.Windows.VisualStateGroup.States">
      <topicdata group="api" />
      <apidata name="States" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_States" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="c89064d6-70e2-a279-b26c-457c510f33e6" />
    </api>
    <api id="P:System.Windows.VisualStateGroup.Transitions">
      <topicdata group="api" />
      <apidata name="Transitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Transitions" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateGroup" ref="true" />
      </containers>
      <file name="bbbbcc2f-9ce7-f6d6-6299-b87f33efe2d7" />
    </api>
    <api id="T:System.Windows.VisualStateManager">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <file name="1b56125c-9fc9-8d67-2c82-74bb2c1cc4b8" />
    </api>
    <api id="AllMembers.T:System.Windows.VisualStateManager">
      <topicdata name="VisualStateManager" group="list" subgroup="members" typeTopicId="T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.VisualStateManager.#ctor" />
        <element api="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
        <element api="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
        <element api="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
        <element api="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
        <element api="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" />
        <element api="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
        <element api="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)" />
        <element api="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)" />
        <element api="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" />
      </containers>
      <file name="8b70f2c3-7196-2b0b-c518-60a4bd5e1ec1" />
    </api>
    <api id="Methods.T:System.Windows.VisualStateManager">
      <topicdata name="VisualStateManager" group="list" subgroup="Methods" typeTopicId="T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
        <element api="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
        <element api="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" />
        <element api="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
        <element api="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)" />
        <element api="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)" />
        <element api="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" />
      </containers>
      <file name="2b513013-3bfc-dfb1-1474-310010b9418b" />
    </api>
    <api id="Properties.T:System.Windows.VisualStateManager">
      <topicdata name="VisualStateManager" group="list" subgroup="Properties" typeTopicId="T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" />
      </containers>
      <file name="1e23face-2920-ace2-51b0-cc150e798060" />
    </api>
    <api id="Fields.T:System.Windows.VisualStateManager">
      <topicdata name="VisualStateManager" group="list" subgroup="Fields" typeTopicId="T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <elements>
        <element api="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" />
      </containers>
      <file name="be1197dd-5fc8-a704-a1cf-c817a79ffd7f" />
    </api>
    <api id="AttachedProperties.T:System.Windows.VisualStateManager">
      <topicdata name="VisualStateManager" group="list" subgroup="AttachedProperties" subsubgroup="AttachedProperties" typeTopicId="T:System.Windows.VisualStateManager" />
      <apidata name="VisualStateManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualStateManager.#ctor" />
      <elements>
        <element api="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" />
      </containers>
      <file name="25c89b94-9876-b5ec-f67f-ad8d08b8370b" />
    </api>
    <api id="M:System.Windows.VisualStateManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="8ccd40e4-1010-bc36-2d18-9ff33bbba6cb" />
    </api>
    <api id="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <topicdata group="api" />
      <apidata name="CustomVisualStateManager" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomVisualStateManager" />
      <setter name="set_CustomVisualStateManager" />
      <returns>
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
            <type api="T:System.Windows.VisualStateManager" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
            <type api="T:System.Windows.VisualStateManager" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
            <type api="T:System.Windows.VisualStateManager" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
      <file name="885a4ff6-4468-bcc7-8b04-93054ced6a56" />
    </api>
    <api id="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <topicdata group="api" />
      <apidata name="CustomVisualStateManagerProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="e470c773-90cf-c8ec-f679-020c5c62e016" />
    </api>
    <api id="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <topicdata group="api" />
      <apidata name="GetCustomVisualStateManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="e0a9d978-9e9d-7e3d-759e-c8021e2d38d9" />
    </api>
    <api id="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <topicdata group="api" />
      <apidata name="GetVisualStateGroups" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="ff1a33b8-a22d-56fb-84bd-9a5ff8344f78" />
    </api>
    <api id="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GoToState" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="control">
          <type api="T:System.Windows.Controls.Control" ref="true" />
        </parameter>
        <parameter name="stateName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="useTransitions">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="f9d18c98-b251-b454-b790-09a894cf2fda" />
    </api>
    <api id="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GoToStateCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="control">
          <type api="T:System.Windows.Controls.Control" ref="true" />
        </parameter>
        <parameter name="templateRoot">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </parameter>
        <parameter name="stateName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="group">
          <type api="T:System.Windows.VisualStateGroup" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Windows.VisualState" ref="true" />
        </parameter>
        <parameter name="useTransitions">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="effa98a5-cdd5-ac89-bc1f-3a5454e6a806" />
    </api>
    <api id="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <topicdata group="api" />
      <apidata name="RaiseCurrentStateChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stateGroup">
          <type api="T:System.Windows.VisualStateGroup" ref="true" />
        </parameter>
        <parameter name="oldState">
          <type api="T:System.Windows.VisualState" ref="true" />
        </parameter>
        <parameter name="newState">
          <type api="T:System.Windows.VisualState" ref="true" />
        </parameter>
        <parameter name="control">
          <type api="T:System.Windows.Controls.Control" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="d5b63984-4928-23c5-ac65-759291f16e57" />
    </api>
    <api id="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <topicdata group="api" />
      <apidata name="RaiseCurrentStateChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stateGroup">
          <type api="T:System.Windows.VisualStateGroup" ref="true" />
        </parameter>
        <parameter name="oldState">
          <type api="T:System.Windows.VisualState" ref="true" />
        </parameter>
        <parameter name="newState">
          <type api="T:System.Windows.VisualState" ref="true" />
        </parameter>
        <parameter name="control">
          <type api="T:System.Windows.Controls.Control" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="a67f0e8c-36c5-6381-6eae-30b67ccdd8dc" />
    </api>
    <api id="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <topicdata group="api" />
      <apidata name="SetCustomVisualStateManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Windows.VisualStateManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualStateManager" ref="true" />
      </containers>
      <file name="9495fd26-8b91-3fc5-a620-bb163cfd625f" />
    </api>
    <api id="T:System.Windows.VisualTransition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Windows.VisualTransition" />
      <apidata name="VisualTransition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualTransition.#ctor" contentProperty="P:System.Windows.VisualTransition.Storyboard" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Storyboard</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c592981e-5654-587a-d0b8-83b74798f793" />
    </api>
    <api id="AllMembers.T:System.Windows.VisualTransition">
      <topicdata name="VisualTransition" group="list" subgroup="members" typeTopicId="T:System.Windows.VisualTransition" />
      <apidata name="VisualTransition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualTransition.#ctor" contentProperty="P:System.Windows.VisualTransition.Storyboard" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.VisualTransition.#ctor" />
        <element api="P:System.Windows.VisualTransition.From" />
        <element api="P:System.Windows.VisualTransition.GeneratedDuration" />
        <element api="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
        <element api="P:System.Windows.VisualTransition.Storyboard" />
        <element api="P:System.Windows.VisualTransition.To" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" />
      </containers>
      <file name="73e789e8-30f2-43ac-30c4-cf46630c1e4a" />
    </api>
    <api id="Methods.T:System.Windows.VisualTransition">
      <topicdata name="VisualTransition" group="list" subgroup="Methods" typeTopicId="T:System.Windows.VisualTransition" />
      <apidata name="VisualTransition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualTransition.#ctor" contentProperty="P:System.Windows.VisualTransition.Storyboard" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.DependencyObject.CheckAccess" />
        <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" />
      </containers>
      <file name="c8e85fcb-0a47-8665-ff72-f8b0b98c9a34" />
    </api>
    <api id="Properties.T:System.Windows.VisualTransition">
      <topicdata name="VisualTransition" group="list" subgroup="Properties" typeTopicId="T:System.Windows.VisualTransition" />
      <apidata name="VisualTransition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.VisualTransition.#ctor" contentProperty="P:System.Windows.VisualTransition.Storyboard" />
      <elements>
        <element api="P:System.Windows.DependencyObject.Dispatcher" />
        <element api="P:System.Windows.VisualTransition.From" />
        <element api="P:System.Windows.VisualTransition.GeneratedDuration" />
        <element api="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
        <element api="P:System.Windows.VisualTransition.Storyboard" />
        <element api="P:System.Windows.VisualTransition.To" />
      </elements>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" />
      </containers>
      <file name="a6684a92-efe6-3da4-1fa0-2c0ec7ec1698" />
    </api>
    <api id="M:System.Windows.VisualTransition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="a3ea3ed8-e529-ebf3-262d-3f752f9b76b8" />
    </api>
    <api id="P:System.Windows.VisualTransition.From">
      <topicdata group="api" />
      <apidata name="From" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_From" />
      <setter name="set_From" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="a66f0141-a62b-6368-4dfb-c56377a11077" />
    </api>
    <api id="P:System.Windows.VisualTransition.GeneratedDuration">
      <topicdata group="api" />
      <apidata name="GeneratedDuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GeneratedDuration" />
      <setter name="set_GeneratedDuration" />
      <returns>
        <type api="T:System.Windows.Duration" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="38152c11-0ab1-8907-b9b3-650069f3ceed" />
    </api>
    <api id="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <topicdata group="api" />
      <apidata name="GeneratedEasingFunction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GeneratedEasingFunction" />
      <setter name="set_GeneratedEasingFunction" />
      <returns>
        <type api="T:System.Windows.Media.Animation.IEasingFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="f5204678-3418-9093-db08-f96b55307db2" />
    </api>
    <api id="P:System.Windows.VisualTransition.Storyboard">
      <topicdata group="api" />
      <apidata name="Storyboard" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Storyboard" />
      <setter name="set_Storyboard" />
      <returns>
        <type api="T:System.Windows.Media.Animation.Storyboard" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="c6841e5f-71b4-9db3-6779-ba8c99e43d8a" />
    </api>
    <api id="P:System.Windows.VisualTransition.To">
      <topicdata group="api" />
      <apidata name="To" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_To" />
      <setter name="set_To" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows" module="System.Windows" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.6.0 (4.7.50915.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.Windows" />
        <type api="T:System.Windows.VisualTransition" ref="true" />
      </containers>
      <file name="864cee47-a967-7d02-a084-e2085ebfc0e2" />
    </api>
  </apis>
</reflection>