<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel">
      <assemblydata version="2.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.50116.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.5.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Xml.Serialization">
      <assemblydata version="2.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Serialization.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Serialization.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Serialization.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30508.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30508.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\silverlightpublickey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel">
      <topicdata group="api" />
      <apidata name="System.ServiceModel" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.ICommunicationObject" />
        <element api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
        <element api="T:System.ServiceModel.CommunicationException" />
        <element api="T:System.ServiceModel.ProtocolException" />
        <element api="T:System.ServiceModel.ServerTooBusyException" />
        <element api="T:System.ServiceModel.ServiceActivationException" />
        <element api="T:System.ServiceModel.QuotaExceededException" />
        <element api="T:System.ServiceModel.ActionNotSupportedException" />
        <element api="T:System.ServiceModel.EndpointNotFoundException" />
        <element api="T:System.ServiceModel.OperationFormatStyle" />
        <element api="T:System.ServiceModel.FaultException" />
        <element api="T:System.ServiceModel.FaultException`1" />
        <element api="T:System.ServiceModel.MessageHeaderException" />
        <element api="T:System.ServiceModel.OperationContext" />
        <element api="T:System.ServiceModel.OperationContextScope" />
        <element api="T:System.ServiceModel.ClientBase`1" />
        <element api="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />
        <element api="T:System.ServiceModel.ClientBase`1.EndOperationDelegate" />
        <element api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
        <element api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
        <element api="T:System.ServiceModel.IExtensibleObject`1" />
        <element api="T:System.ServiceModel.IContextChannel" />
        <element api="T:System.ServiceModel.IClientChannel" />
        <element api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
        <element api="T:System.ServiceModel.EndpointAddress" />
        <element api="T:System.ServiceModel.EndpointAddressBuilder" />
        <element api="T:System.ServiceModel.EnvelopeVersion" />
        <element api="T:System.ServiceModel.FaultCode" />
        <element api="T:System.ServiceModel.FaultReason" />
        <element api="T:System.ServiceModel.FaultReasonText" />
        <element api="T:System.ServiceModel.IExtension`1" />
        <element api="T:System.ServiceModel.IExtensionCollection`1" />
        <element api="T:System.ServiceModel.InvalidMessageContractException" />
        <element api="T:System.ServiceModel.BasicHttpBinding" />
        <element api="T:System.ServiceModel.BasicHttpMessageCredentialType" />
        <element api="T:System.ServiceModel.BasicHttpSecurity" />
        <element api="T:System.ServiceModel.BasicHttpSecurityMode" />
        <element api="T:System.ServiceModel.DataContractFormatAttribute" />
        <element api="T:System.ServiceModel.FaultContractAttribute" />
        <element api="T:System.ServiceModel.MessageContractMemberAttribute" />
        <element api="T:System.ServiceModel.MessageBodyMemberAttribute" />
        <element api="T:System.ServiceModel.MessageContractAttribute" />
        <element api="T:System.ServiceModel.MessageParameterAttribute" />
        <element api="T:System.ServiceModel.OperationContractAttribute" />
        <element api="T:System.ServiceModel.ServiceContractAttribute" />
        <element api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
        <element api="T:System.ServiceModel.ChannelFactory" />
        <element api="T:System.ServiceModel.ChannelFactory`1" />
        <element api="T:System.ServiceModel.ExceptionDetail" />
        <element api="T:System.ServiceModel.CommunicationObjectAbortedException" />
        <element api="T:System.ServiceModel.CommunicationObjectFaultedException" />
        <element api="T:System.ServiceModel.CommunicationState" />
        <element api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </elements>
      <file name="08071cdc-eae3-7918-45b7-5acfc2a4d80d" />
    </api>
    <api id="T:System.ServiceModel.ActionNotSupportedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bdea6876-81c9-0257-b02d-7f8c5b8824cb" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.ActionNotSupportedException.#ctor">
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="3fe981db-d5a9-be79-430d-07cb52d64a94" />
    </api>
    <api id="Methods.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="4a4c0998-002a-3d65-0c03-51796e32c444" />
    </api>
    <api id="Properties.T:System.ServiceModel.ActionNotSupportedException">
      <topicdata name="ActionNotSupportedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name="ActionNotSupportedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" />
      </containers>
      <file name="2108c3f9-0577-3e94-0a35-5477852720ca" />
    </api>
    <api id="Overload:System.ServiceModel.ActionNotSupportedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ActionNotSupportedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="fbf21f3e-6bb1-53ca-bfd7-3005aaaceed3" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="80e84995-ee4c-06cf-3ffb-eeb4acda5ead" />
    </api>
    <api id="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ActionNotSupportedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
      </containers>
      <file name="55909242-7dd7-2c08-c54f-4deac67366fa" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpBinding">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ba4ca80d-2c59-05f6-d585-40dc11aec95d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.#ctor">
          <element api="M:System.ServiceModel.BasicHttpBinding.#ctor" />
          <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
        </element>
        <element api="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="P:System.ServiceModel.BasicHttpBinding.TextEncoding" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="5964106f-b919-0326-bccb-2a2da3fd9619" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
        <element api="Overload:System.ServiceModel.BasicHttpBinding.BuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="Overload:System.ServiceModel.BasicHttpBinding.CanBuildChannelFactory">
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
          <element api="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
        </element>
        <element api="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="05eb2262-e977-6629-7cbd-bf752e437fda" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpBinding">
      <topicdata name="BasicHttpBinding" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpBinding" />
      <apidata name="BasicHttpBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
        <element api="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
        <element api="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Scheme" />
        <element api="P:System.ServiceModel.BasicHttpBinding.Security" />
        <element api="P:System.ServiceModel.BasicHttpBinding.TextEncoding" />
        <element api="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.MessageVersion" />
        <element api="P:System.ServiceModel.Channels.Binding.Name" />
        <element api="P:System.ServiceModel.Channels.Binding.Namespace" />
        <element api="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
        <element api="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" />
      </containers>
      <file name="18e53c38-a04a-94b4-9daf-eeaaf2878856" />
    </api>
    <api id="Overload:System.ServiceModel.BasicHttpBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpBinding" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.BasicHttpBinding.#ctor" />
        <element api="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="b4d755df-ba41-1b2d-0cc0-486ea399ad04" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpBinding.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="18158ce7-e76b-36ba-9c8e-54a18e3e57c1" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.BasicHttpBinding.#ctor" />
      <parameters>
        <parameter name="securityMode">
          <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="ffc15f73-8fab-b792-9fea-1801c4330cf9" />
    </api>
    <api id="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <topicdata group="api" />
      <apidata name="CreateBindingElements" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Channels.BindingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="b0e4a13b-b2b9-dc96-59d9-26d0fcc03bcc" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <topicdata group="api" />
      <apidata name="EnableHttpCookieContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableHttpCookieContainer" />
      <setter name="set_EnableHttpCookieContainer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="0ab37d84-2516-7c65-6024-f4eacaa1fa11" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <topicdata group="api" />
      <apidata name="EnvelopeVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvelopeVersion" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="d002b0e1-64d1-7531-a663-6a6c75f98dd0" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <topicdata group="api" />
      <apidata name="MaxBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferSize" />
      <setter name="set_MaxBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="807edaaa-74ae-e440-f4a6-4b57920b4704" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="4320b447-6ed6-bfc4-7725-09b1e8568f51" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.Binding.Scheme">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="e8aa51b2-204b-0d68-f60c-e393967a6913" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.Security">
      <topicdata group="api" />
      <apidata name="Security" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Security" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="a611db3e-ba0e-4fbd-4880-647d83f5acd7" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <topicdata group="api" />
      <apidata name="TextEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextEncoding" />
      <setter name="set_TextEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpBinding" ref="true" />
      </containers>
      <file name="f9e48282-fd0f-be32-c3ad-18b1b3d27158" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <topicdata group="api" />
      <apidata name="BasicHttpMessageCredentialType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />
        <element api="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="42b24a4e-299f-8cbd-4551-11590de858f3" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <topicdata group="api" notopic="" />
      <apidata name="Certificate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </containers>
      <file name="21d80667-3502-6ed1-ccfa-7e451e70da82" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <topicdata group="api" notopic="" />
      <apidata name="UserName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpMessageCredentialType" ref="false" />
      </containers>
      <file name="8d4cb467-c099-c784-8363-9af2d4f37747" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpSecurity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="6e0e1734-b47f-de5c-2d5a-46daff6afe48" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.BasicHttpSecurity.Mode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="e6e2e95d-d2b1-8505-338d-c5687d30ca49" />
    </api>
    <api id="Methods.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="96adc684-3ef9-f3c1-49be-bfed79ae6286" />
    </api>
    <api id="Properties.T:System.ServiceModel.BasicHttpSecurity">
      <topicdata name="BasicHttpSecurity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.BasicHttpSecurity" />
      <apidata name="BasicHttpSecurity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.BasicHttpSecurity.Mode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" />
      </containers>
      <file name="07a87e35-8b77-1a5d-c928-fb3354da6743" />
    </api>
    <api id="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurity" ref="true" />
      </containers>
      <file name="f6449123-caf6-5926-e895-005bf456de24" />
    </api>
    <api id="T:System.ServiceModel.BasicHttpSecurityMode">
      <topicdata group="api" />
      <apidata name="BasicHttpSecurityMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.None" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.Transport" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />
        <element api="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="997e0649-754d-1707-8ab6-96477a6b46cf" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="27d23183-6dfb-1a9e-10fc-1dc87dc951d7" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <topicdata group="api" notopic="" />
      <apidata name="Transport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="e385d59a-8ec6-9f7b-c9d7-f53ab0ebe698" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <topicdata group="api" notopic="" />
      <apidata name="TransportCredentialOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="005d2490-19a3-08e4-1a73-93ace5450f40" />
    </api>
    <api id="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <topicdata group="api" notopic="" />
      <apidata name="TransportWithMessageCredential" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.BasicHttpSecurityMode" ref="false" />
      </containers>
      <file name="d58a17a0-9eae-5885-cc0d-a3c5679fc48d" />
    </api>
    <api id="T:System.ServiceModel.ChannelFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="9aa300ca-d210-2ba5-2ea3-d1dd3000d09a" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.#ctor" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateDescription" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="af226b3c-3278-bcfd-5024-9427c5caf6bd" />
    </api>
    <api id="Methods.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateDescription" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="92e45f87-862a-efb8-a4fe-ddb122f02274" />
    </api>
    <api id="Properties.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="9101bdad-0eeb-a8e4-d780-e837880b6ad6" />
    </api>
    <api id="Events.T:System.ServiceModel.ChannelFactory">
      <topicdata name="ChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ChannelFactory" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" />
      </containers>
      <file name="b4232639-fc41-4850-3183-e0cfe561c7b1" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint">
      <topicdata name="InitializeEndpoint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="c65e6fd4-a379-d077-b228-61cfa2a5c209" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="3f85381b-08a5-185a-3e22-1f87c5d26487" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="6ae27f52-bacc-042b-3369-983742a6f42a" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="6181b045-1d95-9712-48ad-967536372d47" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <topicdata group="api" />
      <apidata name="CreateFactory" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="17f638ce-add7-0a5d-3bcf-f8964798afdf" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Credentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="db7051e4-61b0-46fa-7202-3baabedd98f0" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <topicdata group="api" />
      <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="afa14c00-2109-518e-6881-531c2381745c" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <topicdata group="api" />
      <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultOpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="b1af871a-a7eb-f967-ac57-1a449997bbfa" />
    </api>
    <api id="P:System.ServiceModel.ChannelFactory.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="a7963f41-381b-39e3-89dc-2603c9887833" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <topicdata group="api" />
      <apidata name="EnsureOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="572e56bc-4348-2ff0-5b28-a62754eaaa08" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
          <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="e5f82c67-a675-aa8d-8c3a-88a143eb26b6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="f7457103-bd66-ca28-e878-a0b229167d4d" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="InitializeEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.ChannelFactory.InitializeEndpoint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="1343d3d4-3f79-05a2-5ba4-26a84a026488" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="ae79892c-257f-b557-d062-73757dcebb7f" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="2b29479e-ecb3-9b55-6878-ee5ea0ec5aee" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="3b588bf3-9b92-c333-826f-9edd990b78ad" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="9c0262cb-23dd-179f-da73-39162186e3e8" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="724c7810-cffe-2147-f9b2-d3968219fea6" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="1d95b1a5-d5ce-03f8-bfbd-fe03dd7ab917" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="25e3f741-9246-9ef5-86c7-a7f11bd38945" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpened">
      <topicdata group="api" />
      <apidata name="OnOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="82aea114-6f3d-6334-58c0-2aa39cd9547d" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.OnOpening">
      <topicdata group="api" />
      <apidata name="OnOpening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="ad5c4e44-e4ee-a3e0-7c4b-88e754931c1c" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
      </containers>
      <file name="13b45999-75c3-3c23-7634-794e73c0384f" />
    </api>
    <api id="T:System.ServiceModel.ChannelFactory`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TChannel" />
      </templates>
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
          </specialization>
        </type>
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ca002fe9-0b84-c44a-2bf9-d4355c0a01ef" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.#ctor">
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="a9fb71ae-cbf8-8af2-0f66-de5e8208a73a" />
    </api>
    <api id="Methods.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory.CreateFactory" />
        <element api="M:System.ServiceModel.ChannelFactory.EnsureOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.GetProperty``1" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.InitializeEndpoint">
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory.OnAbort" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpened" />
        <element api="M:System.ServiceModel.ChannelFactory.OnOpening" />
        <element api="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateDescription" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.ChannelFactory`1.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="192b2245-7ca8-50d9-5ed8-e46581bfb790" />
    </api>
    <api id="Properties.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ChannelFactory.Credentials" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ChannelFactory.Endpoint" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="76a04f7d-5556-d9b8-87d0-ff75a0cd9821" />
    </api>
    <api id="Events.T:System.ServiceModel.ChannelFactory`1">
      <topicdata name="ChannelFactory" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="ChannelFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TChannel" />
      </templates>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" />
      </containers>
      <file name="f133d9fe-4ce6-9dc4-fddd-a1309a1c903a" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="37086a5f-5e18-84f4-0c25-dce92421c459" />
    </api>
    <api id="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <topicdata name="CreateChannel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ChannelFactory`1" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="3af6f42c-2b64-58c5-37e1-43d19b2f7ca9" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="0eb1ebfa-62db-0cf4-1364-75a3d3de118e" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="709dab09-3939-e7d1-32cc-180c8b5f9cbb" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ChannelFactory`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="05d0afb1-70bf-1708-9067-8abaace5ac01" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="to">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="dd5216a6-6d25-f8f9-90de-e512a164aedd" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ChannelFactory`1.CreateChannel" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="to">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="via">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
          <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true">
            <specialization>
              <template name="TChannel" index="0" api="T:System.ServiceModel.ChannelFactory`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="fc3d6803-71cf-ff82-934e-2dcec84fdee1" />
    </api>
    <api id="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
      </containers>
      <file name="526a8a08-4817-10de-b416-e198bbe32f2f" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="84daf9b6-3947-d140-b2fc-2a23ab7f0ba0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ClientBase`1.#ctor">
          <element api="M:System.ServiceModel.ClientBase`1.#ctor" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="462314ca-4736-b150-1c85-3ae8a77b842e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.Abort" />
        <element api="M:System.ServiceModel.ClientBase`1.CreateChannel" />
        <element api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
        <element api="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="2fa3006a-ec9e-8cf1-4d27-ef8b91cb3789" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.Channel" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelFactory" />
        <element api="P:System.ServiceModel.ClientBase`1.ClientCredentials" />
        <element api="P:System.ServiceModel.ClientBase`1.Endpoint" />
        <element api="P:System.ServiceModel.ClientBase`1.InnerChannel" />
        <element api="P:System.ServiceModel.ClientBase`1.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="16e9112b-7920-0ce1-5d08-120f4815e02f" />
    </api>
    <api id="Events.T:System.ServiceModel.ClientBase`1">
      <topicdata name="ClientBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ClientBase`1" />
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TChannel">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" />
      </containers>
      <file name="6019f50c-bf2a-8cdc-8df3-07a81a8404c3" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.#ctor" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="7899806e-059a-b9d7-7b31-e1616860abc1" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="8323c777-a052-36de-d695-42e40613e24b" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="71722acd-863b-2e02-5cf5-797f79271140" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="15206788-c925-7d42-e2f4-5d21920c8243" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open" />
        <element api="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="284fe053-23b6-59e5-5c3e-46f0ce9ca7de" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="f5d0648e-4373-f593-4c6e-395b0d74ed35" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="17fc6d7d-2cca-9eb8-2c2d-a86c0e404a87" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="8e11fe50-5194-f756-891c-96f7949e1585" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="bae7e702-a609-9d49-e523-2abc03ac75d7" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.ClientBase`1.#ctor" />
      <parameters>
        <parameter name="endpointConfigurationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="remoteAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fbf7fa36-da88-7280-2291-8a53775e0656" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="922cb03d-a4ab-677c-13a2-69afa323e65b" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.Channel">
      <topicdata group="api" />
      <apidata name="Channel" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Channel" />
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fab49b06-8301-3c6d-4bee-64d078bf71d1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
          <specialization>
            <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="ca7e1b70-5012-1e35-f739-9d4d3b5478e1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <topicdata group="api" />
      <apidata name="ClientCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCredentials" />
      <returns>
        <type api="T:System.ServiceModel.Description.ClientCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="dc5ae659-013d-e16b-f0eb-8e685d11af20" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <topicdata group="api" />
      <apidata name="CreateChannel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="1938527e-87e1-22b9-73c7-2183b23d3d93" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.Endpoint">
      <topicdata group="api" />
      <apidata name="Endpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoint" />
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="71b156fb-937b-2e7d-fc8d-ced8789c8bae" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <topicdata group="api" />
      <apidata name="GetDefaultValueForInitialization" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="2a12b4c6-9fac-b810-8376-f288b310e112" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <topicdata group="api" />
      <apidata name="InnerChannel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerChannel" />
      <returns>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="20ca964b-0c1e-f0ed-b6d2-1e3d745b66c2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginOperationDelegate">
          <type api="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" ref="true">
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
              </specialization>
            </type>
          </type>
        </parameter>
        <parameter name="inValues">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="endOperationDelegate">
          <type api="T:System.ServiceModel.ClientBase`1.EndOperationDelegate" ref="true">
            <type api="T:System.ServiceModel.ClientBase`1" ref="true">
              <specialization>
                <template name="TChannel" index="0" api="T:System.ServiceModel.ClientBase`1" />
              </specialization>
            </type>
          </type>
        </parameter>
        <parameter name="operationCompletedCallback">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="3219417a-95d2-1b6e-5b73-f65adf22671b" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="f65b5ed7-3e85-ab1a-00c2-2ac742327abf" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="07a9bea0-af88-116c-4e51-b3ff648b048f" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="c3ea19e4-acfe-4bb8-bd0a-b492c3f84883" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="efb5de5d-a6b2-0915-b905-6267584b1cd1" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="6cb0b618-fa44-7d8b-755f-cbca43b00a33" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="7b74ed5b-aba0-6799-9d69-d61053050f5e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="26e3cf54-53a6-14b2-e619-794c010ad116" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="ccf4fd90-bf9e-7266-6f8c-63b015bad5c1" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="be25b35c-2d49-0799-a118-942264a99c37" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="bc4d414a-4bf9-4ca0-1352-a0ee68fafa2e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="4fe12627-23c0-decc-bd1d-922d64fafeb7" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="2b2930d0-bd5e-56dc-4a5b-c1362060923e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="3da784f1-5c88-c6a2-7e05-b0eac0fe5766" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="c0b861a2-5dd9-332c-bf55-34bf047a6972" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="4701600a-2594-5955-1920-86ebb81b03ac" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="fc66893f-0b1a-8201-121d-e6a2cff3e6f2" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <topicdata group="api" />
      <apidata name="BeginOperationDelegate" group="type" subgroup="delegate" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <parameters>
        <parameter name="inValues">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="466ac9ca-1f3a-2548-62c4-a6a2ebf398f5" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="9545ab07-8ede-8e9b-4e12-67c68ae9e000" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="8ae2fb71-0160-2d6c-f18e-0337f1037a08" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
          <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="fa104b10-86d2-9d71-99d0-34b55eb0a857" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId" />
        <element api="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="2522be06-3abb-b776-8f5e-257ab7276d46" />
    </api>
    <api id="Events.T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <topicdata name="ChannelBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="ChannelBase" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened" />
        <element api="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      </containers>
      <file name="21c350cd-4a36-118a-9cbd-aad6188f8def" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend">
      <topicdata name="BeginSend" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e348fd77-5d21-eb24-7dda-9d58beecc0cd" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send">
      <topicdata name="Send" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Send" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1d44c972-570b-b44f-19f0-a5ce00ff9002" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest">
      <topicdata name="BeginRequest" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f0363a09-a7bd-7650-3afd-62b069018b59" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request">
      <topicdata name="Request" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Request" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="63d41c59-3961-365a-c87f-29dce9b201c6" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8d631610-6f42-a5b0-ab61-e695451c87f0" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="467620bd-ec62-681e-ea79-71c8a407d777" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="565b1813-e7d1-22cb-5c9c-3e244ad42e7e" />
    </api>
    <api id="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
        <element api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1a98638d-e18e-7140-0cc9-0407f564580b" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="client">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true">
            <specialization>
              <template name="T" index="1" api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="14935fb9-2876-0b12-ebf3-6a7568a15bb9" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="1f3e0820-f4a2-ba41-efce-e0159dd27da2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="015e523c-d93d-bb2f-1179-db605ac836ef" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="483728dc-6930-4c6f-510a-d7b3b074d038" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <topicdata group="api" eiiName="IChannel.GetProperty" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <templates>
        <template name="TProperty">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="TProperty" index="0" api="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="10ea346d-c89e-41e7-8e0e-38d858146b62" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IOutputChannel.BeginSend" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="71e40ce2-7dc3-59b5-9bd3-5887bfc90221" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IOutputChannel.BeginSend" />
      <apidata name="BeginSend" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d91b5a6e-05a4-fe6c-7731-e7c0c7cc4286" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <topicdata group="api" eiiName="IOutputChannel.EndSend" />
      <apidata name="EndSend" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="b34222ff-eb65-1242-0d00-99e89af2438c" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <topicdata group="api" eiiName="IOutputChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f4d9a1d9-144c-99bc-112f-9aedc5bbc63c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <topicdata group="api" eiiName="IOutputChannel.Send" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="9e4b3918-89c5-209d-b1c1-cad1848a7519" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <topicdata group="api" eiiName="IOutputChannel.Send" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="faa7bfc6-4949-18a0-6212-3d72954a630d" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <topicdata group="api" eiiName="IOutputChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IOutputChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IOutputChannel.Via">
          <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e4ec5899-7733-282b-64cf-81735c40f5c7" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IRequestChannel.BeginRequest" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c32984b7-cba3-8c7e-f63d-7e3e30c79b3e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IRequestChannel.BeginRequest" />
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8e32834e-ecdf-337b-4989-5d3046ed023c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <topicdata group="api" eiiName="IRequestChannel.EndRequest" />
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="574424da-2be0-cd07-ac45-76dd4d650378" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <topicdata group="api" eiiName="IRequestChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="02ae9fa5-48fd-466f-cf52-f924c32c09f1" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <topicdata group="api" eiiName="IRequestChannel.Request" />
      <apidata name="Request" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="5caa5ade-6a4d-29bf-e3d0-a39f1db4051d" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <topicdata group="api" eiiName="IRequestChannel.Request" />
      <apidata name="Request" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f4a54736-19b9-ee9f-f2a8-9cacfa20e245" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <topicdata group="api" eiiName="IRequestChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.Channels.IRequestChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.Channels.IRequestChannel.Via">
          <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="70e7e72d-4b52-11ee-df3f-dd1fbfd514ec" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <topicdata group="api" eiiName="IClientChannel.AllowInitializationUI" />
      <apidata name="AllowInitializationUI" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <setter name="set_System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="97cfa40f-c701-1248-475f-ad594ab80b99" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IClientChannel.BeginDisplayInitializationUI" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c4904eb2-922d-403e-c249-51727b7fab86" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <topicdata group="api" eiiName="IClientChannel.DidInteractiveInitialization" />
      <apidata name="DidInteractiveInitialization" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="ec03c56d-bcef-61aa-26f1-add4bd256dd8" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <topicdata group="api" eiiName="IClientChannel.DisplayInitializationUI" />
      <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="729aba36-4efd-5fb0-1087-905f8c5248de" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" eiiName="IClientChannel.EndDisplayInitializationUI" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="7ab13797-3b47-b44b-31b8-3639724178bb" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <topicdata group="api" eiiName="IClientChannel.UnknownMessageReceived" />
      <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <remover name="remove_System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d8cf885c-f9be-c62e-98ea-fdd22413dce0" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <topicdata group="api" eiiName="IClientChannel.Via" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IClientChannel.Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IClientChannel.Via">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="947d25eb-aa9b-8026-2397-e5d083c9d278" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <topicdata group="api" eiiName="ICommunicationObject.Abort" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Abort">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="86a1daa3-bebd-3818-ab3e-b0fd4df5c425" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="f6273d35-1b42-2c19-f782-8df1884573f2" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginClose" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="66a33a24-45f8-f562-17a0-1c1989fe6ac6" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="6ad3b256-fe3c-c75d-9dd5-7baea7686fa6" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ICommunicationObject.BeginOpen" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="cc32dc91-3aee-3cdd-1f53-f29154bbcf14" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="54886133-1ed5-856a-004e-81660d8d997e" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Close" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0abecfad-7b08-67d6-f294-89591ef2301d" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <topicdata group="api" eiiName="ICommunicationObject.Closed" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closed" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closed">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="df835cdd-df8f-49c4-ac37-0a85a0ecde19" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <topicdata group="api" eiiName="ICommunicationObject.Closing" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Closing" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Closing">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="32cc9457-fc0a-1bf6-dcf5-2fb69cea582c" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndClose" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="b80f5bc2-3bb2-2279-92fd-4c46f24ef147" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <topicdata group="api" eiiName="ICommunicationObject.EndOpen" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="3e27c9c3-46ba-d620-1a61-8dc917e39a6f" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <topicdata group="api" eiiName="ICommunicationObject.Faulted" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Faulted" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="5afab39d-2c3b-2283-2f67-ec518dadc22d" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0116b3b6-df96-79b1-a496-50f7b2c3ff89" />
    </api>
    <api id="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <topicdata group="api" eiiName="ICommunicationObject.Open" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e11ed9a9-00a8-b66b-c396-0ea9abeea0dd" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <topicdata group="api" eiiName="ICommunicationObject.Opened" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opened" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opened">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="c85fdb65-a6f2-e9c9-cf0c-2a66fa8d0cd9" />
    </api>
    <api id="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <topicdata group="api" eiiName="ICommunicationObject.Opening" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ServiceModel.ICommunicationObject.Opening" />
      <remover name="remove_System.ServiceModel.ICommunicationObject.Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ServiceModel.ICommunicationObject.Opening">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="91420b0d-1a87-879b-4059-e16e111d04b1" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <topicdata group="api" eiiName="ICommunicationObject.State" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.ICommunicationObject.State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.ICommunicationObject.State">
          <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="8d1dc907-c3ca-d47c-cddc-dedab2c7a55a" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <topicdata group="api" eiiName="IContextChannel.AllowOutputBatching" />
      <apidata name="AllowOutputBatching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IContextChannel.AllowOutputBatching" />
      <setter name="set_System.ServiceModel.IContextChannel.AllowOutputBatching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="693bb3bb-db88-3d17-2be4-0ea129772b05" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <topicdata group="api" eiiName="IContextChannel.InputSession" />
      <apidata name="InputSession" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.InputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IInputSession" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.InputSession">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="d0910c2f-7c14-db11-a4e2-ae851d4fbcdc" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <topicdata group="api" eiiName="IContextChannel.LocalAddress" />
      <apidata name="LocalAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.LocalAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.LocalAddress">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="93abd4e8-4504-bd5b-bcc0-1103f8a72c34" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <topicdata group="api" eiiName="IContextChannel.OperationTimeout" />
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ServiceModel.IContextChannel.OperationTimeout" />
      <setter name="set_System.ServiceModel.IContextChannel.OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.OperationTimeout">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="2b482d08-6bea-48e8-8b5b-0466155f981e" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <topicdata group="api" eiiName="IContextChannel.OutputSession" />
      <apidata name="OutputSession" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.OutputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IOutputSession" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.OutputSession">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="989dbc8c-9831-2e37-88f3-4b22f727ff3d" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <topicdata group="api" eiiName="IContextChannel.RemoteAddress" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.RemoteAddress">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="ad4c57db-9316-27a9-8cdd-280231f819d4" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <topicdata group="api" eiiName="IContextChannel.SessionId" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IContextChannel.SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IContextChannel.SessionId">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="e48cb930-c930-62d8-8d2b-1d9b9149dfe9" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions">
      <topicdata group="api" eiiName="IExtensibleObject.Extensions" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;.Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
          <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.IContextChannel" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="0ba59902-b6d5-4e8b-9052-b2eb0c8f7077" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <topicdata group="api" />
      <apidata name="EndOperationDelegate" group="type" subgroup="delegate" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="a7859b3c-ba00-037a-855b-c2d1b522c4b0" />
    </api>
    <api id="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
      </containers>
      <file name="1a44a5ff-48a1-3171-fce5-dc58aa97db40" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="fc6c0ddc-827d-3e7c-c592-6c0263f1a19e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="d27f9c9e-bdae-ef9e-f498-e656b1faf5d9" />
    </api>
    <api id="Properties.T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <topicdata name="InvokeAsyncCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      <apidata name="InvokeAsyncCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" />
      </containers>
      <file name="5e691fc0-0b87-dd8a-f90b-b163ff4f29a3" />
    </api>
    <api id="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <topicdata group="api" />
      <apidata name="Results" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Results" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </containers>
      <file name="057713c3-07f9-205c-4488-0998b1a8796d" />
    </api>
    <api id="T:System.ServiceModel.CommunicationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.ProtocolException" ref="true" />
          <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
          <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
          <type api="T:System.ServiceModel.ActionNotSupportedException" ref="true" />
          <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
          <type api="T:System.ServiceModel.FaultException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
          <type api="T:System.ServiceModel.Security.MessageSecurityException" ref="true" />
          <type api="T:System.ServiceModel.Security.SecurityAccessDeniedException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="35dcb44a-92dc-8392-03c9-8355b727cdea" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.CommunicationException.#ctor">
          <element api="M:System.ServiceModel.CommunicationException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="cebc0ceb-6443-e3dd-e729-7042c79c0a09" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="caa5c9e4-8084-f696-12e1-0bed1ccfd6a7" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationException">
      <topicdata name="CommunicationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationException" />
      <apidata name="CommunicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" />
      </containers>
      <file name="99606676-b6f8-d33e-14a3-67efd00ef945" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="94e70189-04b8-2448-9ecb-5a7be10df0b4" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="4a953ce6-2435-4e3c-f6a3-8faaac81d6c9" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="7f372670-90c2-f8b4-e55d-71aef104ee50" />
    </api>
    <api id="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationException" ref="true" />
      </containers>
      <file name="ffbd1397-39a4-1b93-0dd3-2dd6bc870a89" />
    </api>
    <api id="T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="473a7fce-e113-ef5e-6893-14cfc4668756" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="59bb2b21-053d-5a9a-bd3e-e82ece3e1bac" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="acd3ecad-caef-70ad-c166-765edabce3c0" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationObjectAbortedException">
      <topicdata name="CommunicationObjectAbortedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name="CommunicationObjectAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" />
      </containers>
      <file name="7bf1618c-3972-d50f-118b-0a7f9a434570" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectAbortedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="a16f6869-5548-0321-2ee1-dd9b7679966b" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="d9e0c42c-4897-8237-f084-3f1c9a3fb6a8" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="39a62e46-0c9a-83b7-0440-c8e2053c14a0" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectAbortedException" ref="true" />
      </containers>
      <file name="345dba9c-5a29-76e7-ec7c-2fc9109ae747" />
    </api>
    <api id="T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="44e2be6e-baf4-ae80-4a10-c50dacb25ff6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="e237922c-d956-518b-c720-2a370454f183" />
    </api>
    <api id="Methods.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="e65a88fc-904c-b47d-8776-b4864969f4b5" />
    </api>
    <api id="Properties.T:System.ServiceModel.CommunicationObjectFaultedException">
      <topicdata name="CommunicationObjectFaultedException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name="CommunicationObjectFaultedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" />
      </containers>
      <file name="034166f0-a797-d95d-3e81-ee0af39b061f" />
    </api>
    <api id="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.CommunicationObjectFaultedException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="ed516a86-550b-3ec2-7965-5a8e378bcc6e" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="3e589246-2287-e1b4-9877-439e4adfe5a5" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="513f3a18-286d-4e21-4084-122765a977f9" />
    </api>
    <api id="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.CommunicationObjectFaultedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationObjectFaultedException" ref="true" />
      </containers>
      <file name="7a7eefb5-e6d5-9779-a8c5-3ae07599f3fa" />
    </api>
    <api id="T:System.ServiceModel.CommunicationState">
      <topicdata group="api" />
      <apidata name="CommunicationState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.CommunicationState.Created" />
        <element api="F:System.ServiceModel.CommunicationState.Opening" />
        <element api="F:System.ServiceModel.CommunicationState.Opened" />
        <element api="F:System.ServiceModel.CommunicationState.Closing" />
        <element api="F:System.ServiceModel.CommunicationState.Closed" />
        <element api="F:System.ServiceModel.CommunicationState.Faulted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="065ba994-daca-bc6c-0283-ecfced568bdd" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="eec1069f-92de-d48f-e07e-4695b7a7ce9c" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Closing">
      <topicdata group="api" notopic="" />
      <apidata name="Closing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="66ab149c-3fdd-0be4-3c51-7a3799a04241" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Created">
      <topicdata group="api" notopic="" />
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="f90e988b-56bd-8a5d-e28b-cb13ee0367dd" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="5ec0863e-e1d1-aea9-f380-9f988ce46454" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Opened">
      <topicdata group="api" notopic="" />
      <apidata name="Opened" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="9fef05cd-4699-793e-b614-06e705d65842" />
    </api>
    <api id="F:System.ServiceModel.CommunicationState.Opening">
      <topicdata group="api" notopic="" />
      <apidata name="Opening" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </containers>
      <file name="6c734dd1-a4f8-defd-1828-36edd79346b2" />
    </api>
    <api id="T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a707c65f-2e34-9b9e-a3ff-2ec369a40eee" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
        <element api="P:System.ServiceModel.DataContractFormatAttribute.Style" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="e2572ba6-4b01-6197-11f4-8f0202dd6948" />
    </api>
    <api id="Methods.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="05759cd4-8b7a-03a7-1d17-989cddf2b1d4" />
    </api>
    <api id="Properties.T:System.ServiceModel.DataContractFormatAttribute">
      <topicdata name="DataContractFormatAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DataContractFormatAttribute" />
      <apidata name="DataContractFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DataContractFormatAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DataContractFormatAttribute.Style" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" />
      </containers>
      <file name="9322cfe1-206b-1137-8c75-3b7cb135e619" />
    </api>
    <api id="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" ref="true" />
      </containers>
      <file name="4a1d89b5-62d0-9d35-9b7e-ca5a62b56336" />
    </api>
    <api id="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <topicdata group="api" />
      <apidata name="Style" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Style" />
      <setter name="set_Style" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.DataContractFormatAttribute" ref="true" />
      </containers>
      <file name="404d6a8b-0b75-6a6d-cff9-ea2a3308f979" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddress">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8c1d339a-b6c6-799a-2cd4-4993cf0e4a91" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.EndpointAddress.#ctor">
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
          <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
        </element>
        <element api="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
        <element api="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointAddress.GetHashCode" />
        <element api="P:System.ServiceModel.EndpointAddress.Headers" />
        <element api="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
        <element api="P:System.ServiceModel.EndpointAddress.IsNone" />
        <element api="P:System.ServiceModel.EndpointAddress.NoneUri" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddress.ToString" />
        <element api="P:System.ServiceModel.EndpointAddress.Uri" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="8947f21b-7f57-fb56-512e-25554808d870" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
        <element api="M:System.ServiceModel.EndpointAddress.GetHashCode" />
        <element api="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
        <element api="M:System.ServiceModel.EndpointAddress.ToString" />
        <element api="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="5cf42d6a-d0fb-90fa-92fb-7b93d85a7d9f" />
    </api>
    <api id="Operators.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="7eb550c7-b95b-e5c9-3ead-8d3d36bcd690" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointAddress">
      <topicdata name="EndpointAddress" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointAddress" />
      <apidata name="EndpointAddress" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
        <element api="P:System.ServiceModel.EndpointAddress.Headers" />
        <element api="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
        <element api="P:System.ServiceModel.EndpointAddress.IsNone" />
        <element api="P:System.ServiceModel.EndpointAddress.NoneUri" />
        <element api="P:System.ServiceModel.EndpointAddress.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" />
      </containers>
      <file name="daeb3370-c29e-8fd4-99dd-6d939f1a95b1" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddress.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddress" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
        <element api="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="740e5ce9-7a02-9482-7aed-b4b53186d08e" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="90e4f6d0-e5cf-f77b-fca3-373a493a7689" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddress.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="addressHeaders" params="true">
          <arrayOf rank="1">
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a769e52b-d569-5402-692e-072d71bfda7f" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <topicdata group="api" />
      <apidata name="AnonymousUri" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AnonymousUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="f23c4a46-ef34-ed2f-a945-ecce4e98f5b0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="d5c8a604-7fd1-89c5-a0cd-53d45f4c856b" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="ec80cda8-f769-2ff9-a5dc-5c66a81f003e" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="414d1aa9-8943-183c-ef57-e41f738142e4" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.ServiceModel.Channels.AddressHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="47abc5b2-3dc8-41e9-1b70-9d57ae56422a" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <topicdata group="api" />
      <apidata name="IsAnonymous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAnonymous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="5f085b94-09a5-6011-e163-584046611b55" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.IsNone">
      <topicdata group="api" />
      <apidata name="IsNone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNone" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="557b5673-2e37-fd5b-e721-ceb0dd889961" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.NoneUri">
      <topicdata group="api" />
      <apidata name="NoneUri" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NoneUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="0e08b474-72f4-41af-cf2d-c8a117e2a0c3" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address1">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="address2">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="8356de4b-af01-8a61-64cb-b95bb165d1a0" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address1">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="address2">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="ad323e91-519d-c1a8-7580-66dce588efda" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="88274524-ef81-3c29-4e00-16a7a5c5d1e9" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="48a707f8-1945-f98a-c9c9-f6de09dce2de" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddress.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="a03dd2cb-7d10-8d93-7e30-ca907af1966f" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <topicdata group="api" />
      <apidata name="WriteContentsTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="addressingVersion">
          <type api="T:System.ServiceModel.Channels.AddressingVersion" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </containers>
      <file name="7a7c0b6f-857b-86fe-9cb6-d3c297285036" />
    </api>
    <api id="T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1c7f4e04-6431-a471-0792-4aa3daa06d65" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor">
          <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
          <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)" />
        </element>
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Headers" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="181be8c7-d076-fe62-50ec-9f82a78b69af" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="683245f6-bbd6-9f67-284a-21ca7e2b0a28" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointAddressBuilder">
      <topicdata name="EndpointAddressBuilder" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name="EndpointAddressBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Headers" />
        <element api="P:System.ServiceModel.EndpointAddressBuilder.Uri" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" />
      </containers>
      <file name="7a706bc4-2437-82c5-23c7-897185b899a5" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointAddressBuilder" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor" />
        <element api="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="e187ed36-36f0-41c2-d6f2-3edfbb888fda" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="95ff0b5b-8313-d00c-e183-095db7a51430" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointAddressBuilder.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="6be20554-ecd9-cc5e-561d-c5d5cb9372d8" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Channels.AddressHeader" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="08b3d112-49cc-5994-d9f5-56cffa6f0f9e" />
    </api>
    <api id="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <topicdata group="api" />
      <apidata name="ToEndpointAddress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="6b3a2703-f704-fbdb-f217-3953f17ec4c6" />
    </api>
    <api id="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Uri" />
      <setter name="set_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointAddressBuilder" ref="true" />
      </containers>
      <file name="fbb33bdd-cb0f-e5ae-e958-7468b41d186b" />
    </api>
    <api id="T:System.ServiceModel.EndpointNotFoundException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="8a213e01-e7a1-7e04-baaf-a33d42d29994" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.EndpointNotFoundException.#ctor">
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="c003ffdb-2401-a237-bfae-d4cb6ac53c6f" />
    </api>
    <api id="Methods.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="bb92a6eb-1a9f-ebac-5254-5b4eea20b735" />
    </api>
    <api id="Properties.T:System.ServiceModel.EndpointNotFoundException">
      <topicdata name="EndpointNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name="EndpointNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" />
      </containers>
      <file name="f6cc6ce9-2578-113f-b805-f769d9b80beb" />
    </api>
    <api id="Overload:System.ServiceModel.EndpointNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.EndpointNotFoundException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor" />
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="a0e0a8aa-a2c2-cd71-e998-73f490fac71e" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="9971c5cf-eb9d-4333-a27c-a2173040433b" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="90059571-bcc0-e6f7-6dc2-2d5ac40d2f6a" />
    </api>
    <api id="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.EndpointNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EndpointNotFoundException" ref="true" />
      </containers>
      <file name="c2f8c929-726e-2f8c-6060-36d682b0cddb" />
    </api>
    <api id="T:System.ServiceModel.EnvelopeVersion">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bfb46bd6-0fdd-8a6f-fd7c-693c27d84327" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues" />
        <element api="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue" />
        <element api="P:System.ServiceModel.EnvelopeVersion.None" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap11" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap12" />
        <element api="M:System.ServiceModel.EnvelopeVersion.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="07e57254-db93-4f2c-dfb5-9f504880ad98" />
    </api>
    <api id="Methods.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues" />
        <element api="M:System.ServiceModel.EnvelopeVersion.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="cb17a05c-1148-3273-2b84-bd0c48bb4b34" />
    </api>
    <api id="Properties.T:System.ServiceModel.EnvelopeVersion">
      <topicdata name="EnvelopeVersion" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.EnvelopeVersion" />
      <apidata name="EnvelopeVersion" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue" />
        <element api="P:System.ServiceModel.EnvelopeVersion.None" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap11" />
        <element api="P:System.ServiceModel.EnvelopeVersion.Soap12" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" />
      </containers>
      <file name="a0bcffa2-7ea4-5e3c-84c2-23cce0514c16" />
    </api>
    <api id="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <topicdata group="api" />
      <apidata name="GetUltimateDestinationActorValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="f02dfa4d-732f-99ac-c11b-8518e1707b77" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <topicdata group="api" />
      <apidata name="NextDestinationActorValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextDestinationActorValue" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="48f34872-9a7b-1552-74f5-d54bb942d19c" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_None" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="287200ab-aec6-163f-92ea-3bcdf32cde76" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <topicdata group="api" />
      <apidata name="Soap11" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Soap11" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="3cc9381b-5bcd-6ac0-18a0-a393f1e3a0dd" />
    </api>
    <api id="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <topicdata group="api" />
      <apidata name="Soap12" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Soap12" />
      <returns>
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="26c0300d-6bf5-431c-4ab9-a35547572a64" />
    </api>
    <api id="M:System.ServiceModel.EnvelopeVersion.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.EnvelopeVersion" ref="true" />
      </containers>
      <file name="2b94d265-bab8-dba9-1835-139a5e1de43b" />
    </api>
    <api id="T:System.ServiceModel.ExceptionDetail">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="098a0a7c-1f53-f8bb-2c15-a4163a006ba9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)" />
        <element api="P:System.ServiceModel.ExceptionDetail.InnerException" />
        <element api="P:System.ServiceModel.ExceptionDetail.Message" />
        <element api="P:System.ServiceModel.ExceptionDetail.StackTrace" />
        <element api="M:System.ServiceModel.ExceptionDetail.ToString" />
        <element api="P:System.ServiceModel.ExceptionDetail.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="34396c63-91a2-cb23-3f41-feab4ba0ba93" />
    </api>
    <api id="Methods.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.ExceptionDetail.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="429228d2-cbf5-f042-e686-907395352c64" />
    </api>
    <api id="Properties.T:System.ServiceModel.ExceptionDetail">
      <topicdata name="ExceptionDetail" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ExceptionDetail" />
      <apidata name="ExceptionDetail" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ExceptionDetail.InnerException" />
        <element api="P:System.ServiceModel.ExceptionDetail.Message" />
        <element api="P:System.ServiceModel.ExceptionDetail.StackTrace" />
        <element api="P:System.ServiceModel.ExceptionDetail.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" />
      </containers>
      <file name="fe633c93-2124-8a53-ef65-871ee9542838" />
    </api>
    <api id="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <file name="308a0557-6f63-7391-6ef4-6808edb60799" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.InnerException">
      <topicdata group="api" />
      <apidata name="InnerException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerException" />
      <returns>
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8316fa5c-20c7-14f2-46ce-f1095e8aff0f" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cc246a10-fcf2-8b62-a453-262786d232c4" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c45ec4ed-82e5-7a0a-8f76-f5d03472d0f1" />
    </api>
    <api id="M:System.ServiceModel.ExceptionDetail.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <file name="8123415b-4892-b816-7a0b-f57b05f7d764" />
    </api>
    <api id="P:System.ServiceModel.ExceptionDetail.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ExceptionDetail" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="8b426505-f70a-c0b2-d3b7-c9e1d561a97a" />
    </api>
    <api id="T:System.ServiceModel.FaultCode">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="187e2ff7-3d50-cf13-1a2d-199d39922873" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.FaultCode.#ctor">
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)" />
          <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)" />
        </element>
        <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)" />
        <element api="P:System.ServiceModel.FaultCode.IsPredefinedFault" />
        <element api="P:System.ServiceModel.FaultCode.IsReceiverFault" />
        <element api="P:System.ServiceModel.FaultCode.IsSenderFault" />
        <element api="P:System.ServiceModel.FaultCode.Name" />
        <element api="P:System.ServiceModel.FaultCode.Namespace" />
        <element api="P:System.ServiceModel.FaultCode.SubCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="0a93bb0f-7ae2-323f-da3c-7e5c613eb749" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="e3ea857b-4527-cac5-172e-9e92b417b257" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultCode">
      <topicdata name="FaultCode" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultCode" />
      <apidata name="FaultCode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultCode.IsPredefinedFault" />
        <element api="P:System.ServiceModel.FaultCode.IsReceiverFault" />
        <element api="P:System.ServiceModel.FaultCode.IsSenderFault" />
        <element api="P:System.ServiceModel.FaultCode.Name" />
        <element api="P:System.ServiceModel.FaultCode.Namespace" />
        <element api="P:System.ServiceModel.FaultCode.SubCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" />
      </containers>
      <file name="d15ccdea-35c9-6120-0fa1-2c8c6c408a81" />
    </api>
    <api id="Overload:System.ServiceModel.FaultCode.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultCode" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)" />
        <element api="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="6891f34d-9f41-51ae-251d-1eadc7008be5" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="e7b03a95-e284-96a1-ce06-2deda149a94a" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="9c711548-a3c2-b53a-744e-a5c2fbe790e8" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="19f7c897-1081-0c22-6578-dabcf82694c0" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultCode.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="2278b7f0-3190-1199-73b9-30ea0f7114ea" />
    </api>
    <api id="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <topicdata group="api" />
      <apidata name="CreateSenderFaultCode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subCode">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="74bf23c9-3901-09ab-d33f-9e718d59787d" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <topicdata group="api" />
      <apidata name="IsPredefinedFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPredefinedFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="50aab688-befa-fd07-a6c0-6a0cb32a247d" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <topicdata group="api" />
      <apidata name="IsReceiverFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReceiverFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="1c525f49-1dff-748c-e612-be7a640d95b9" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.IsSenderFault">
      <topicdata group="api" />
      <apidata name="IsSenderFault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSenderFault" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="06a654da-cf1e-7c4f-6833-a5d0da66a3fe" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="b80f8f3d-bceb-2439-800b-7ce23aef8f6f" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="bd753dc2-cea6-463d-0f4d-03f56eb67cc6" />
    </api>
    <api id="P:System.ServiceModel.FaultCode.SubCode">
      <topicdata group="api" />
      <apidata name="SubCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubCode" />
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </containers>
      <file name="b23b4f57-8cc8-0b46-6b8b-81ecdd3ab222" />
    </api>
    <api id="T:System.ServiceModel.FaultContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ffd47d89-8d92-9ca3-6957-9ca73d140131" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Action" />
        <element api="P:System.ServiceModel.FaultContractAttribute.DetailType" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Name" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="2ccceb19-597e-4b0b-c208-fe40c39e57fd" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="b435d1c2-5dc1-7d28-02d0-2c43ab1ecc6d" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultContractAttribute">
      <topicdata name="FaultContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultContractAttribute" />
      <apidata name="FaultContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultContractAttribute.Action" />
        <element api="P:System.ServiceModel.FaultContractAttribute.DetailType" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Name" />
        <element api="P:System.ServiceModel.FaultContractAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" />
      </containers>
      <file name="ff797219-f809-8d19-00cb-ef4698fed57f" />
    </api>
    <api id="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="detailType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="d371854e-a553-1073-6529-98a329fd26b9" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="5b99f3e1-1f52-b0d6-0c64-f922695cb6cf" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <topicdata group="api" />
      <apidata name="DetailType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DetailType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="37bd3dc6-b141-52ec-acde-cf151c9bc2c2" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="6eb44cc1-174a-6cc9-54d9-02d89fdb092a" />
    </api>
    <api id="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultContractAttribute" ref="true" />
      </containers>
      <file name="2ef9fed7-c366-081f-6379-663f5ec22a78" />
    </api>
    <api id="T:System.ServiceModel.FaultException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.FaultException`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="ab1b8b90-a2a5-2fcd-85c0-8e8fae1e3107" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.FaultException.#ctor">
          <element api="M:System.ServiceModel.FaultException.#ctor" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)" />
          <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
        </element>
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="Overload:System.ServiceModel.FaultException.CreateFault">
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
        </element>
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="8215a6d2-3304-8834-6363-3cb0c85e9ef0" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.FaultException.CreateFault">
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
          <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
        </element>
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="eda134de-a87c-6f42-fe29-4a0bb015869d" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultException">
      <topicdata name="FaultException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultException" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.FaultException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" />
      </containers>
      <file name="5f7f1847-6f62-82de-4003-2c92825af994" />
    </api>
    <api id="Overload:System.ServiceModel.FaultException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultException.#ctor" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)" />
        <element api="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="bf440d65-a47b-7c38-9558-7cbc84e69e30" />
    </api>
    <api id="Overload:System.ServiceModel.FaultException.CreateFault">
      <topicdata name="CreateFault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])" />
        <element api="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="ab341a1e-157c-dc89-6e21-fe736e70d386" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="12d9f03d-656e-9636-9270-b4cdbdfb0131" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="fault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="e1d797a7-8c04-7796-1005-d3a2269de449" />
    </api>
    <api id="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultException.#ctor" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="0f1bb9d6-0f77-a162-d6f1-44ff51bb3a14" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="4bf6305a-e016-ecfb-9ce4-499a128096c4" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Code">
      <topicdata group="api" />
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Code" />
      <returns>
        <type api="T:System.ServiceModel.FaultCode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="0e86f1b9-e3ce-5ce4-e217-d136551935ae" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <topicdata group="api" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultException.CreateFault" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageFault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="faultDetailTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="cea801bc-9593-48f3-27d1-253f921a0f76" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <topicdata group="api" />
      <apidata name="CreateFault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.FaultException.CreateFault" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageFault">
          <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
        </parameter>
        <parameter name="faultDetailTypes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="27ef2d31-c685-1e6a-7751-72c9411523a2" />
    </api>
    <api id="M:System.ServiceModel.FaultException.CreateMessageFault">
      <topicdata group="api" />
      <apidata name="CreateMessageFault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageFault" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="04f0b73d-575c-d61e-ef7b-a0df736ff709" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="2cbedd5d-2f89-4169-42a5-a61296a3c6fc" />
    </api>
    <api id="P:System.ServiceModel.FaultException.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException" ref="true" />
      </containers>
      <file name="f540f57f-c09c-6066-5b98-10b850c86936" />
    </api>
    <api id="T:System.ServiceModel.FaultException`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.FaultException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TDetail" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bb03a521-d12b-606f-5f62-dca0c1fe23aa" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)" />
        <element api="P:System.ServiceModel.FaultException`1.Detail" />
        <element api="M:System.ServiceModel.FaultException`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="40ad26a5-116e-f319-4419-4bab44e14d41" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.FaultException.CreateMessageFault" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.FaultException`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="27023d5a-14eb-a860-0243-234c41fe8c23" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultException`1">
      <topicdata name="FaultException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultException`1" />
      <apidata name="FaultException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TDetail" />
      </templates>
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.ServiceModel.FaultException.Action" />
        <element api="P:System.ServiceModel.FaultException.Code" />
        <element api="P:System.ServiceModel.FaultException.Message" />
        <element api="P:System.ServiceModel.FaultException.Reason" />
        <element api="P:System.ServiceModel.FaultException`1.Detail" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" />
      </containers>
      <file name="fa15b37f-5a29-2c11-2fcf-59063d09d19b" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="detail">
          <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.ServiceModel.FaultReason" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.ServiceModel.FaultCode" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="9d7c56a0-251f-2fd0-48dc-0c27f201a620" />
    </api>
    <api id="P:System.ServiceModel.FaultException`1.Detail">
      <topicdata group="api" />
      <apidata name="Detail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Detail" />
      <returns>
        <template name="TDetail" index="0" api="T:System.ServiceModel.FaultException`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="069d482f-3b02-57e6-ac75-7b081c300e4b" />
    </api>
    <api id="M:System.ServiceModel.FaultException`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultException`1" ref="true" />
      </containers>
      <file name="b140a9ad-b5a8-34a2-198b-bbf0c9ce014e" />
    </api>
    <api id="T:System.ServiceModel.FaultReason">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="79c69dfd-08bc-4e17-be7c-882c61c3a1b5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultReason.#ctor">
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)" />
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})" />
          <element api="M:System.ServiceModel.FaultReason.#ctor(System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.ServiceModel.FaultReason.ToString" />
        <element api="P:System.ServiceModel.FaultReason.Translations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="7c4ea7e4-f847-c92f-768c-4c3beb1475e6" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
          <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.ServiceModel.FaultReason.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="8f428e63-ed95-95da-717f-a75f775ff7df" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultReason">
      <topicdata name="FaultReason" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultReason" />
      <apidata name="FaultReason" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultReason.Translations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" />
      </containers>
      <file name="7d6f9922-09bf-2d9d-3474-8da754c9e4a3" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReason.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)" />
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})" />
        <element api="M:System.ServiceModel.FaultReason.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="46dcd0aa-6dd6-cc5d-2425-f056dae82e64" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <topicdata name="GetMatchingTranslation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReason" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation" />
        <element api="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="683ce5c1-1128-60ab-1e40-cff6d79d1a49" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="translations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="755c62d8-5e33-2b23-94a1-8aeb2ab3fbdd" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="translation">
          <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="3b4d8cb6-1afe-3e7a-88a9-a9dc8ad8b560" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReason.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="93336f86-2475-cc65-0da5-4b2ce6929e38" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <topicdata group="api" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="1ea03cfd-81ff-6a12-8486-2b11a41a584d" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetMatchingTranslation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.FaultReason.GetMatchingTranslation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="d59b80b3-0048-57bf-9749-570421656c0b" />
    </api>
    <api id="M:System.ServiceModel.FaultReason.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="9adcf41f-a1c4-e390-ad8b-db580715e7df" />
    </api>
    <api id="P:System.ServiceModel.FaultReason.Translations">
      <topicdata group="api" />
      <apidata name="Translations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Translations" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReason" ref="true" />
      </containers>
      <file name="fc710ca1-3202-95d4-3b34-6e7296736cea" />
    </api>
    <api id="T:System.ServiceModel.FaultReasonText">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="c13404c7-9b90-adb5-7600-485f44fbbc87" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.FaultReasonText.#ctor">
          <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String)" />
          <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)" />
        <element api="P:System.ServiceModel.FaultReasonText.Text" />
        <element api="P:System.ServiceModel.FaultReasonText.XmlLang" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="1245ab57-b00d-ba32-3f36-265159dee408" />
    </api>
    <api id="Methods.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="559f9a07-bb48-f3db-ae37-45f5fbf44563" />
    </api>
    <api id="Properties.T:System.ServiceModel.FaultReasonText">
      <topicdata name="FaultReasonText" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.FaultReasonText" />
      <apidata name="FaultReasonText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.FaultReasonText.Text" />
        <element api="P:System.ServiceModel.FaultReasonText.XmlLang" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" />
      </containers>
      <file name="32cf115d-3b7c-fb05-3a53-7231e116ef6f" />
    </api>
    <api id="Overload:System.ServiceModel.FaultReasonText.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.FaultReasonText" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String)" />
        <element api="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="e9d665b8-d3a0-9041-8cb6-6f307d175d99" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReasonText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="5694dd39-1fcf-51c8-01c2-d35fdc1ec773" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.FaultReasonText.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xmlLang">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="4b13f054-4969-d932-0a41-3a68ee15fc42" />
    </api>
    <api id="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="cb5bf251-5bc9-48fd-23af-12297384dcb8" />
    </api>
    <api id="P:System.ServiceModel.FaultReasonText.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="0d2c7bc8-0415-14a7-bc27-239208a2d1ce" />
    </api>
    <api id="P:System.ServiceModel.FaultReasonText.XmlLang">
      <topicdata group="api" />
      <apidata name="XmlLang" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlLang" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.FaultReasonText" ref="true" />
      </containers>
      <file name="3c5e92fa-664b-00c7-7cbd-3e175e271c3c" />
    </api>
    <api id="T:System.ServiceModel.IClientChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="30d06757-c5d5-084c-a90f-947a68d0c3d1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
        <element api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
        <element api="P:System.ServiceModel.IClientChannel.Via" />
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IClientChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IClientChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="51b0558c-17d0-6582-17bf-a605bf62c28f" />
    </api>
    <api id="Methods.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IDisposable.Dispose" />
        <element api="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
        <element api="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IClientChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IClientChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IClientChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="55c144d2-01f0-0c0e-2d61-da23dfc6c7d8" />
    </api>
    <api id="Properties.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
        <element api="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
        <element api="P:System.ServiceModel.IClientChannel.Via" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="ec8e621d-127a-852a-592e-ad10d9e1e08f" />
    </api>
    <api id="Events.T:System.ServiceModel.IClientChannel">
      <topicdata name="IClientChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IClientChannel" />
      <apidata name="IClientChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" />
      </containers>
      <file name="82b05030-530c-8de0-c186-aed861e17442" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <topicdata group="api" />
      <apidata name="AllowInitializationUI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowInitializationUI" />
      <setter name="set_AllowInitializationUI" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="4be31c4e-e2e5-ebf4-f628-c9bcf660ff05" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="e73f1c49-90b2-79e7-8388-a1b27b193f8d" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <topicdata group="api" />
      <apidata name="DidInteractiveInitialization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DidInteractiveInitialization" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="d56027aa-7747-9ba6-6569-264ebbc43992" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <topicdata group="api" />
      <apidata name="DisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="1384f467-4c99-1c3f-b039-041527035d2b" />
    </api>
    <api id="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="19dfb37c-2dc7-8ff9-9d73-daadc6243a13" />
    </api>
    <api id="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <topicdata group="api" />
      <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownMessageReceived" />
      <remover name="remove_UnknownMessageReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="bf29928d-14aa-6246-94ce-6a1ada30e705" />
    </api>
    <api id="P:System.ServiceModel.IClientChannel.Via">
      <topicdata group="api" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </containers>
      <file name="04cf6df0-43a6-3090-eb3f-b095180fe475" />
    </api>
    <api id="T:System.ServiceModel.ICommunicationObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        <type api="T:System.ServiceModel.ChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelFactory" ref="true" />
        <type api="T:System.ServiceModel.Channels.IChannelFactory`1" ref="true" />
        <type api="T:System.ServiceModel.Channels.IInputChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IDuplexChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IDuplexSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IInputSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IOutputSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.IRequestSessionChannel" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelFactoryBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelFactoryBase`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="35d6181b-b099-1178-3cd0-77770629b3a4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="fac992d2-b0f9-ad5a-1d45-e0d591c1e2cb" />
    </api>
    <api id="Methods.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.ICommunicationObject.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.ICommunicationObject.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="dedde500-81b1-fbaa-7522-e27956fad035" />
    </api>
    <api id="Properties.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="ff73429b-1d2f-b318-5ba3-b77fb2e91a24" />
    </api>
    <api id="Events.T:System.ServiceModel.ICommunicationObject">
      <topicdata name="ICommunicationObject" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.ICommunicationObject" />
      <apidata name="ICommunicationObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" />
      </containers>
      <file name="5ab7e152-ee97-a842-4a92-4f3b580b7d5c" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.BeginClose">
      <topicdata name="BeginClose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="53eaa0fd-856f-3036-2efb-d8507150a9ac" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.BeginOpen">
      <topicdata name="BeginOpen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7ebeebbf-ebb7-46eb-cef3-0802c7af3038" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.Close">
      <topicdata name="Close" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="Close" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Close" />
        <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7cb71311-d6ee-9661-f01d-dbb165826f66" />
    </api>
    <api id="Overload:System.ServiceModel.ICommunicationObject.Open">
      <topicdata name="Open" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ICommunicationObject" />
      <apidata name="Open" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Open" />
        <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="b3749f71-8690-0ee7-c15c-ad3c23233907" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="0f3803b5-a2ff-8c2f-c378-a9fe88b8ce1c" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="aaa6a08c-25e7-3352-9506-273f21528431" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginClose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="36b76a90-dc81-5b9d-eaa1-c2e0d662f220" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="b810633b-82e9-381d-d420-663014f8fd97" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginOpen" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="cbfb6449-99e8-9c54-d0ca-67ab0d5ab046" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Close" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="4ab13a35-b102-fd1e-7685-2f4f1d01907c" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Close" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="7ad1173a-74e9-da38-d57c-521c2cd82bbb" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Closed">
      <topicdata group="api" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closed" />
      <remover name="remove_Closed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="8539a714-4f20-71fe-362c-c349c26550c0" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Closing">
      <topicdata group="api" />
      <apidata name="Closing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closing" />
      <remover name="remove_Closing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="c5e17516-8345-4ad0-001b-24d0aee1c5ba" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndClose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="116c32db-f4a1-ae09-ffd5-2a85b20a096d" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndOpen" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="3dff5503-adf5-91df-9abf-6ed951a943b4" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Faulted">
      <topicdata group="api" />
      <apidata name="Faulted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Faulted" />
      <remover name="remove_Faulted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="f5da50e4-6628-7345-7e58-e6b3db391ae8" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Open" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="00ca7b52-fded-12be-8a88-9c1ae630599f" />
    </api>
    <api id="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.ICommunicationObject.Open" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="683322f8-f007-e9ac-eeff-c1a8e737549d" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Opened">
      <topicdata group="api" />
      <apidata name="Opened" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opened" />
      <remover name="remove_Opened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="9e2c3fd7-06b1-680c-d72f-fc819c17d8e4" />
    </api>
    <api id="E:System.ServiceModel.ICommunicationObject.Opening">
      <topicdata group="api" />
      <apidata name="Opening" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Opening" />
      <remover name="remove_Opening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="95482116-9e0c-dd59-81f9-79da224a9fa6" />
    </api>
    <api id="P:System.ServiceModel.ICommunicationObject.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.ServiceModel.CommunicationState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
      </containers>
      <file name="8b8ad28b-d689-86e9-6be1-dc0b7f1f3491" />
    </api>
    <api id="T:System.ServiceModel.IContextChannel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ServiceModel.Channels.IChannel" ref="true" />
        <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IContextChannel" ref="true" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="cacba962-c4a7-5114-30bb-d16acbdf7170" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="Overload:System.ServiceModel.IContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="0e4f73cb-0f58-e28a-3796-25df0de3fbf4" />
    </api>
    <api id="Methods.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.ICommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.IContextChannel.BeginClose">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.BeginOpen">
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.IContextChannel.Close">
          <element api="M:System.ServiceModel.ICommunicationObject.Close" />
          <element api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="Overload:System.ServiceModel.IContextChannel.Open">
          <element api="M:System.ServiceModel.ICommunicationObject.Open" />
          <element api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="a0265e92-696a-4ad4-4cae-8cd101e885b4" />
    </api>
    <api id="Properties.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ICommunicationObject.State" />
        <element api="P:System.ServiceModel.IContextChannel.AllowOutputBatching" />
        <element api="P:System.ServiceModel.IContextChannel.InputSession" />
        <element api="P:System.ServiceModel.IContextChannel.LocalAddress" />
        <element api="P:System.ServiceModel.IContextChannel.OperationTimeout" />
        <element api="P:System.ServiceModel.IContextChannel.OutputSession" />
        <element api="P:System.ServiceModel.IContextChannel.RemoteAddress" />
        <element api="P:System.ServiceModel.IContextChannel.SessionId" />
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="cae2df48-14b4-0bf5-0427-7bccbe79b123" />
    </api>
    <api id="Events.T:System.ServiceModel.IContextChannel">
      <topicdata name="IContextChannel" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.IContextChannel" />
      <apidata name="IContextChannel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ICommunicationObject.Closed" />
        <element api="E:System.ServiceModel.ICommunicationObject.Closing" />
        <element api="E:System.ServiceModel.ICommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opened" />
        <element api="E:System.ServiceModel.ICommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" />
      </containers>
      <file name="4ddd4723-61ee-fe5b-d5e5-aaf2d0efe2ff" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <topicdata group="api" />
      <apidata name="AllowOutputBatching" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowOutputBatching" />
      <setter name="set_AllowOutputBatching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="75f5beaa-4c95-1d79-8e87-ecec9b8758d2" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.InputSession">
      <topicdata group="api" />
      <apidata name="InputSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IInputSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="af112b4a-88a5-908d-31b6-5ca48b9ea2e7" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.LocalAddress">
      <topicdata group="api" />
      <apidata name="LocalAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocalAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="72a69d0b-e815-d1b4-7480-7451684e15d6" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <topicdata group="api" />
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationTimeout" />
      <setter name="set_OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="0479daf4-2fb6-62b3-71d7-2e73eaed308f" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.OutputSession">
      <topicdata group="api" />
      <apidata name="OutputSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OutputSession" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IOutputSession" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="9098bb10-a324-04fd-19c1-dedfa4b671a6" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <topicdata group="api" />
      <apidata name="RemoteAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="6078b0bd-ed7d-e9da-e476-4297ce2a0553" />
    </api>
    <api id="P:System.ServiceModel.IContextChannel.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SessionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
      </containers>
      <file name="be24d9c8-8bea-696d-a802-03701f59044f" />
    </api>
    <api id="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelBase" ref="true" />
        <type api="T:System.ServiceModel.Channels.ChannelManagerBase" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="17e44d57-fad7-d4cd-8647-c2aed6a9ae09" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata name="IDefaultCommunicationTimeouts" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      </containers>
      <file name="df2858dc-b7e1-5839-08e5-389198c8a491" />
    </api>
    <api id="Properties.T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <topicdata name="IDefaultCommunicationTimeouts" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      <apidata name="IDefaultCommunicationTimeouts" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout" />
        <element api="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" />
      </containers>
      <file name="213c547b-24e9-46fa-8238-287c116713e6" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <topicdata group="api" />
      <apidata name="CloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_CloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="568cc085-74ed-1e55-b712-d9cfbd134f56" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <topicdata group="api" />
      <apidata name="OpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="a4663fc9-139f-5b08-0552-efc7141388ac" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <topicdata group="api" />
      <apidata name="ReceiveTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ReceiveTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="a6ebaf95-9cd7-d646-95d4-3a60b9b937b8" />
    </api>
    <api id="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <topicdata group="api" />
      <apidata name="SendTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SendTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
      </containers>
      <file name="fbe01b7d-ba81-c7c8-dbd4-87d3eeeebf33" />
    </api>
    <api id="T:System.ServiceModel.IExtensibleObject`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:System.ServiceModel.ClientBase`1.ChannelBase`1" ref="true">
          <type api="T:System.ServiceModel.ClientBase`1" ref="true" />
        </type>
        <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        <type api="T:System.ServiceModel.IClientChannel" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3463381d-25f2-e146-c967-f14c87692322" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtensibleObject`1">
      <topicdata name="IExtensibleObject" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" />
      </containers>
      <file name="4f5b908c-884f-1fb8-0baa-46035cf7c598" />
    </api>
    <api id="Properties.T:System.ServiceModel.IExtensibleObject`1">
      <topicdata name="IExtensibleObject" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IExtensibleObject`1" />
      <apidata name="IExtensibleObject" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.IExtensibleObject`1.Extensions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" />
      </containers>
      <file name="18a568fe-9214-0720-0809-a013d583605a" />
    </api>
    <api id="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ServiceModel.IExtensibleObject`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true" />
      </containers>
      <file name="652dc42f-d278-2c30-0bc4-f8b085b1c93a" />
    </api>
    <api id="T:System.ServiceModel.IExtension`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="06adbb7a-14a9-5199-10d0-e5f3a13dc8c0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtension`1">
      <topicdata name="IExtension" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.ServiceModel.IExtension`1.Attach(`0)" />
        <element api="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" />
      </containers>
      <file name="12e0fa55-fb9b-88eb-d056-1311fc1744d8" />
    </api>
    <api id="Methods.T:System.ServiceModel.IExtension`1">
      <topicdata name="IExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IExtension`1" />
      <apidata name="IExtension" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.ServiceModel.IExtension`1.Attach(`0)" />
        <element api="M:System.ServiceModel.IExtension`1.Detach(`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" />
      </containers>
      <file name="e5b80ea1-4b67-ee97-e3d0-685d7f5415b0" />
    </api>
    <api id="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" ref="true" />
      </containers>
      <file name="6e0dec15-dc30-3896-e48b-bc04a251e579" />
    </api>
    <api id="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="owner">
          <template name="T" index="0" api="T:System.ServiceModel.IExtension`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtension`1" ref="true" />
      </containers>
      <file name="e5a0cc21-d09f-5989-07de-7bc1647c23b8" />
    </api>
    <api id="T:System.ServiceModel.IExtensionCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="0848751d-01f0-3c99-9d8f-c0938f4af6e1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
        <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="57277a7c-dd83-d807-4611-a3613af1fa46" />
    </api>
    <api id="Methods.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0})" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.Subscribe``1(System.Collections.Generic.IEnumerable{``0},System.IObserver{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="Subscribe" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="observer">
              <type api="T:System.IObserver`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IDisposable" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.Phone.Reactive.Observable.ToObservable``1(System.Collections.Generic.IEnumerable{``0},Microsoft.Phone.Reactive.IScheduler)" source="extension" overload="true">
          <apidata name="ToObservable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="scheduler">
              <type api="T:Microsoft.Phone.Reactive.IScheduler" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IObservable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.Observable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.IExtension`1" ref="true">
                      <specialization>
                        <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.IExtension`1" ref="true">
                        <specialization>
                          <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.IExtension`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.IExtension`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.IExtension`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.IExtension`1" ref="true">
                  <specialization>
                    <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
        <element api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="e3e4822f-c18a-a435-c4d9-e852684d2bf2" />
    </api>
    <api id="Properties.T:System.ServiceModel.IExtensionCollection`1">
      <topicdata name="IExtensionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.IExtensionCollection`1" />
      <apidata name="IExtensionCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ServiceModel.IExtensionCollection`1" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" />
      </containers>
      <file name="655095b9-d2f6-d3c5-92bc-3df9ade9569b" />
    </api>
    <api id="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <template name="E" index="0" api="M:System.ServiceModel.IExtensionCollection`1.Find``1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true" />
      </containers>
      <file name="9ff63901-875d-6e00-3ac2-9675cb79fce4" />
    </api>
    <api id="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="E" />
      </templates>
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <template name="E" index="0" api="M:System.ServiceModel.IExtensionCollection`1.FindAll``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true" />
      </containers>
      <file name="2048ddac-9676-73d3-0283-26424cc74203" />
    </api>
    <api id="T:System.ServiceModel.InvalidMessageContractException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="1e9d9fa6-39c3-590d-64a7-b4c9d574072d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.InvalidMessageContractException.#ctor">
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="5b087a8e-093a-a1b0-a719-73f5b0e1e7af" />
    </api>
    <api id="Methods.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="8d65aed2-ad4d-89f4-bdb2-9c91f4707ad4" />
    </api>
    <api id="Properties.T:System.ServiceModel.InvalidMessageContractException">
      <topicdata name="InvalidMessageContractException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name="InvalidMessageContractException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" />
      </containers>
      <file name="223291d3-cbbb-30ab-4b82-3a4e0baae394" />
    </api>
    <api id="Overload:System.ServiceModel.InvalidMessageContractException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.InvalidMessageContractException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor" />
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="8ea96790-fa40-2e33-b1df-731e739e10d8" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="7759994b-1878-e375-fb80-125f7c06d91d" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="0f67204a-f6e9-012d-ee14-14c0ecad4109" />
    </api>
    <api id="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.InvalidMessageContractException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.InvalidMessageContractException" ref="true" />
      </containers>
      <file name="b31469c3-ab17-17cc-30ff-2bc44002325c" />
    </api>
    <api id="T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="fe26fdc5-897c-4339-fa1d-aa60a4682980" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageBodyMemberAttribute.Order" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="b0ffcf48-6b43-f25c-2eec-4163a2eb0cc7" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="7ffe57cc-b39e-ddc6-d64d-fb02c299dbcf" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageBodyMemberAttribute">
      <topicdata name="MessageBodyMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageBodyMemberAttribute" />
      <apidata name="MessageBodyMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageBodyMemberAttribute.Order" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" />
      </containers>
      <file name="07c83ac6-27bf-51d8-8ffd-2231567001eb" />
    </api>
    <api id="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
      </containers>
      <file name="44d4e057-744e-de37-5bc6-62e1a16ec8d3" />
    </api>
    <api id="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Order" />
      <setter name="set_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
      </containers>
      <file name="21638a9c-eebd-5190-6b85-4414df6c5b20" />
    </api>
    <api id="T:System.ServiceModel.MessageContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6455b317-a2f1-b1e8-07c5-05775027c36f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="d9323e97-ab19-efe9-07be-fc71a41897b8" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="8f564652-e3a1-9ab0-0e6c-073f6a65ffea" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageContractAttribute">
      <topicdata name="MessageContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageContractAttribute" />
      <apidata name="MessageContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageContractAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageContractAttribute.IsWrapped" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperName" />
        <element api="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" />
      </containers>
      <file name="ad7489b1-cf40-e7c7-96e3-2b489b37b93f" />
    </api>
    <api id="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="935a2682-47dd-8452-907d-828bd19d2aec" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <topicdata group="api" />
      <apidata name="IsWrapped" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsWrapped" />
      <setter name="set_IsWrapped" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="bad7abaa-75a1-551d-b617-6b157ac94925" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <topicdata group="api" />
      <apidata name="WrapperName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WrapperName" />
      <setter name="set_WrapperName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="ffb12c72-a062-0352-48e4-d8e665dd3f23" />
    </api>
    <api id="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <topicdata group="api" />
      <apidata name="WrapperNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WrapperNamespace" />
      <setter name="set_WrapperNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
      </containers>
      <file name="3e7b2725-b6c8-ef58-9231-52a40180345d" />
    </api>
    <api id="T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MessageBodyMemberAttribute" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f47b57ba-ed2f-30ca-eabb-0f8c09d7870d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="a81e7cd4-28e5-e2e9-95df-6eecbab12377" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="6839d4f5-bdec-82f7-a643-b2115bfe1790" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageContractMemberAttribute">
      <topicdata name="MessageContractMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageContractMemberAttribute" />
      <apidata name="MessageContractMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
        <element api="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" />
      </containers>
      <file name="0b52a1a5-93cd-1b7f-3541-66f8c3596953" />
    </api>
    <api id="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="8419f3ba-942f-d5d4-7a11-11c3212b173e" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="83489e1a-5eb3-a1ad-e294-6428857b2dd7" />
    </api>
    <api id="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageContractMemberAttribute" ref="true" />
      </containers>
      <file name="be2dcebe-96cd-ecff-fcd1-8717b8d0a5a0" />
    </api>
    <api id="T:System.ServiceModel.MessageHeaderException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ProtocolException" ref="true" />
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="f7416605-9b9c-0e15-fca1-f24fd9b6227f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.MessageHeaderException.#ctor">
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)" />
          <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)" />
        </element>
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderName" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderNamespace" />
        <element api="P:System.ServiceModel.MessageHeaderException.IsDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="b82f6f15-57c6-3f49-5d51-b142eac955f4" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="a45e9b7c-8697-73a5-8ef0-7e0e21037173" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageHeaderException">
      <topicdata name="MessageHeaderException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageHeaderException" />
      <apidata name="MessageHeaderException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.MessageHeaderException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderName" />
        <element api="P:System.ServiceModel.MessageHeaderException.HeaderNamespace" />
        <element api="P:System.ServiceModel.MessageHeaderException.IsDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" />
      </containers>
      <file name="53b7f678-dba1-acd1-f072-b7d184e7ca4d" />
    </api>
    <api id="Overload:System.ServiceModel.MessageHeaderException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageHeaderException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)" />
        <element api="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="38670388-3af9-b713-a4d9-57e4b1421caf" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="1ed29948-7c5d-751c-6c84-fe0f482f9a1e" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="bcac8ff3-92c0-7070-3524-401bfa080c10" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="858c1c82-79f4-f671-046c-dae831fbb888" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="e10954d3-5c9c-2521-2780-fdb80e5c09de" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="235f50f7-74b9-911e-e988-25ab1cac20d8" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="40d4c345-6d12-3ad2-91c4-bcf860eb7205" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDuplicate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="cbfc7835-d246-9382-f1fd-7a4993493d57" />
    </api>
    <api id="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.MessageHeaderException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="headerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="5a9d0f87-41b2-2e0e-6c89-a9661e31cde4" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <topicdata group="api" />
      <apidata name="HeaderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HeaderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="036be137-f612-aac6-fa1c-6073c173c1ed" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <topicdata group="api" />
      <apidata name="HeaderNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HeaderNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="e9398bb0-c09c-22d2-1683-1b2ff59583aa" />
    </api>
    <api id="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <topicdata group="api" />
      <apidata name="IsDuplicate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDuplicate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
      </containers>
      <file name="c4022a48-8568-37fc-8d20-bf21eaba0e80" />
    </api>
    <api id="T:System.ServiceModel.MessageParameterAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0843a798-7355-2e66-dd34-e214cf4afa3c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
        <element api="P:System.ServiceModel.MessageParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="03edba34-e7dc-0f44-28ed-3a6f44b2b45a" />
    </api>
    <api id="Methods.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="de925407-3f37-0b2c-63ee-c738e3672b25" />
    </api>
    <api id="Properties.T:System.ServiceModel.MessageParameterAttribute">
      <topicdata name="MessageParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.MessageParameterAttribute" />
      <apidata name="MessageParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.MessageParameterAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.MessageParameterAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" />
      </containers>
      <file name="5ccc4cdd-0b31-4afe-9612-ee35867f0da2" />
    </api>
    <api id="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" ref="true" />
      </containers>
      <file name="ce6b5e4a-94a5-5503-d2db-7cbbb5877356" />
    </api>
    <api id="P:System.ServiceModel.MessageParameterAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.MessageParameterAttribute" ref="true" />
      </containers>
      <file name="ed8457cc-f188-ceea-0b93-90d6be070c08" />
    </api>
    <api id="T:System.ServiceModel.OperationContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="5288166f-e62a-ea6e-e57f-0c0e23794387" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
        <element api="P:System.ServiceModel.OperationContext.Current" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
        <element api="P:System.ServiceModel.OperationContext.IsUserContext" />
        <element api="E:System.ServiceModel.OperationContext.OperationCompleted" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.RequestContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="45cfc803-e5a0-561f-74cc-ea32b33a45ec" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="8c276a16-5be0-06d6-a16c-e34a45ffc8ca" />
    </api>
    <api id="Properties.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.OperationContext.Current" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
        <element api="P:System.ServiceModel.OperationContext.IsUserContext" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
        <element api="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
        <element api="P:System.ServiceModel.OperationContext.RequestContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="d572dc2b-e8fe-22c1-4f93-9861ab417740" />
    </api>
    <api id="Events.T:System.ServiceModel.OperationContext">
      <topicdata name="OperationContext" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.OperationContext" />
      <apidata name="OperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.OperationContext.OperationCompleted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" />
      </containers>
      <file name="19dc1513-7220-dc54-8944-de8460c4f955" />
    </api>
    <api id="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="bea79c4a-adac-6268-863c-25abe462462f" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="7b762d4a-ba7e-b1e5-e9cd-35dd826a0472" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <topicdata group="api" />
      <apidata name="IncomingMessageHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageHeaders" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="f3c616b4-1172-ec0f-5d45-c64b4ea1ef5e" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <topicdata group="api" />
      <apidata name="IncomingMessageProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageProperties" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="2418b6c1-7e74-f004-5eac-27edeb841c80" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <topicdata group="api" />
      <apidata name="IncomingMessageVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncomingMessageVersion" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="9fb43978-2ebc-6011-8fde-cee3e8054563" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.IsUserContext">
      <topicdata group="api" />
      <apidata name="IsUserContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsUserContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="7d8d6ec6-74df-f7a6-2ce9-5d00eab49e06" />
    </api>
    <api id="E:System.ServiceModel.OperationContext.OperationCompleted">
      <topicdata group="api" />
      <apidata name="OperationCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OperationCompleted" />
      <remover name="remove_OperationCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="93a768b3-f862-0a99-3146-c41e2806cda6" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <topicdata group="api" />
      <apidata name="OutgoingMessageHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingMessageHeaders" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="0ad69f7c-a124-73e2-4a9a-ea6a10abd2d7" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <topicdata group="api" />
      <apidata name="OutgoingMessageProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OutgoingMessageProperties" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="f50c3619-e9a3-e406-e333-07d175de9ec0" />
    </api>
    <api id="P:System.ServiceModel.OperationContext.RequestContext">
      <topicdata group="api" />
      <apidata name="RequestContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestContext" />
      <setter name="set_RequestContext" />
      <returns>
        <type api="T:System.ServiceModel.Channels.RequestContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContext" ref="true" />
      </containers>
      <file name="fc477850-0aeb-777e-8561-93f01c35c4a7" />
    </api>
    <api id="T:System.ServiceModel.OperationContextScope">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a2dc610d-747b-2285-3955-22cf4a44faea" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContextScope">
      <topicdata name="OperationContextScope" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.OperationContextScope.#ctor">
          <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
          <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
        </element>
        <element api="M:System.ServiceModel.OperationContextScope.Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" />
      </containers>
      <file name="7566afd6-f576-60b0-e567-e9b076bcd3f9" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContextScope">
      <topicdata name="OperationContextScope" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContextScope" />
      <apidata name="OperationContextScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContextScope.Dispose" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" />
      </containers>
      <file name="b09b73f3-67c7-c586-3964-d8043ef9f4ef" />
    </api>
    <api id="Overload:System.ServiceModel.OperationContextScope.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContextScope" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="d4191e1f-dbc1-ec46-ab0b-728019c921b8" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OperationContextScope.#ctor" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="e18a35cf-6f11-2df2-4ab7-e2d0e41bde5f" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.OperationContextScope.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.ServiceModel.OperationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="630e31bb-2c6f-4641-3939-6dfc37eaab11" />
    </api>
    <api id="M:System.ServiceModel.OperationContextScope.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContextScope" ref="true" />
      </containers>
      <file name="d676758d-ace5-2b06-23d3-f299b199097c" />
    </api>
    <api id="T:System.ServiceModel.OperationContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="660ed223-8c13-6635-13c9-3a40d4ab14c5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.OperationContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Action" />
        <element api="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Name" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="f17bcaaf-79d5-7522-0de7-ee86636b7066" />
    </api>
    <api id="Methods.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="7d9e843c-5692-f933-6349-d4881f87ae84" />
    </api>
    <api id="Properties.T:System.ServiceModel.OperationContractAttribute">
      <topicdata name="OperationContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.OperationContractAttribute" />
      <apidata name="OperationContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.OperationContractAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.OperationContractAttribute.Action" />
        <element api="P:System.ServiceModel.OperationContractAttribute.AsyncPattern" />
        <element api="P:System.ServiceModel.OperationContractAttribute.IsOneWay" />
        <element api="P:System.ServiceModel.OperationContractAttribute.Name" />
        <element api="P:System.ServiceModel.OperationContractAttribute.ReplyAction" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" />
      </containers>
      <file name="2556a065-519d-89a8-5076-bf93e5230e4e" />
    </api>
    <api id="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="abc7aa18-10c9-395a-2b14-99695a0ecc2a" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="03e6483a-1017-e895-eb03-40f428cd94ea" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <topicdata group="api" />
      <apidata name="AsyncPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsyncPattern" />
      <setter name="set_AsyncPattern" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="8f30a5e2-5dad-68f0-d98a-cd99bb7eb1c6" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="a6f50cda-0543-ed3d-2801-3bdf736a2cfb" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="90e30377-ee14-3d23-8c48-c48890664098" />
    </api>
    <api id="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <topicdata group="api" />
      <apidata name="ReplyAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplyAction" />
      <setter name="set_ReplyAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
      </containers>
      <file name="f403677e-05eb-283f-81a0-4f874e07fc0b" />
    </api>
    <api id="T:System.ServiceModel.OperationFormatStyle">
      <topicdata group="api" />
      <apidata name="OperationFormatStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.OperationFormatStyle.Document" />
        <element api="F:System.ServiceModel.OperationFormatStyle.Rpc" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="bfd24c6b-f2de-a13c-76d0-555adb8855e4" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatStyle.Document">
      <topicdata group="api" notopic="" />
      <apidata name="Document" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </containers>
      <file name="c94bd5b7-42c9-59e4-1496-1985c54db651" />
    </api>
    <api id="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <topicdata group="api" notopic="" />
      <apidata name="Rpc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.OperationFormatStyle" ref="false" />
      </containers>
      <file name="c2bfafc6-41d4-3f88-b7f2-c58bbc64f6ba" />
    </api>
    <api id="T:System.ServiceModel.ProtocolException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.MessageHeaderException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="29881e86-a2d3-54e4-d82e-bb73b324b365" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.ProtocolException.#ctor">
          <element api="M:System.ServiceModel.ProtocolException.#ctor" />
          <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="6b99e77d-ed1d-0046-7531-e4dd5f28380e" />
    </api>
    <api id="Methods.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="8de5f823-87fe-1de2-9ce7-956adfadac2f" />
    </api>
    <api id="Properties.T:System.ServiceModel.ProtocolException">
      <topicdata name="ProtocolException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ProtocolException" />
      <apidata name="ProtocolException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ProtocolException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" />
      </containers>
      <file name="2a1b5747-7fb7-eb0e-03dd-f9d5cad324c8" />
    </api>
    <api id="Overload:System.ServiceModel.ProtocolException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ProtocolException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ProtocolException.#ctor" />
        <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="9d6fcd25-de62-7c36-58e1-8482d4d68fbf" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="f8cbd5c7-5ea2-782e-3fd6-e75053a80859" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="097e45d7-9445-f5de-85d5-8205cd9571c7" />
    </api>
    <api id="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ProtocolException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ProtocolException" ref="true" />
      </containers>
      <file name="f35b130b-6acd-20b2-4162-13702a083860" />
    </api>
    <api id="T:System.ServiceModel.QuotaExceededException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="3e5e01e5-7157-23b9-8b62-e87b75559bc8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.QuotaExceededException.#ctor">
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor" />
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="edfa6667-c91e-4d26-39c8-ffcbd3d89b16" />
    </api>
    <api id="Methods.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="3f3bd13a-12dd-ca44-fd6b-c41ead4e35d7" />
    </api>
    <api id="Properties.T:System.ServiceModel.QuotaExceededException">
      <topicdata name="QuotaExceededException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.QuotaExceededException" />
      <apidata name="QuotaExceededException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.QuotaExceededException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" />
      </containers>
      <file name="89bc35e1-f685-62cd-f4b5-2f1e8256bbdf" />
    </api>
    <api id="Overload:System.ServiceModel.QuotaExceededException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.QuotaExceededException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor" />
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="55ae4b1b-1d73-76ae-3476-151c44e9b33d" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="d32fefac-34d9-6c17-2b19-c4277d13db6a" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="c7808277-3aa4-1ebf-a954-a94e618e3593" />
    </api>
    <api id="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.QuotaExceededException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.QuotaExceededException" ref="true" />
      </containers>
      <file name="e42c8486-bee9-885b-f210-1f59f95fa786" />
    </api>
    <api id="T:System.ServiceModel.ServerTooBusyException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="2da5ea05-a090-f3c6-90bc-20d29c601f72" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.ServerTooBusyException.#ctor">
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor" />
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="41e3325c-0d63-10b3-71b7-668e89bf4037" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="47844500-027a-0e78-f568-ab0786faa1c0" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServerTooBusyException">
      <topicdata name="ServerTooBusyException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServerTooBusyException" />
      <apidata name="ServerTooBusyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServerTooBusyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" />
      </containers>
      <file name="85bccd34-d41a-02df-3e8e-b593584c30b3" />
    </api>
    <api id="Overload:System.ServiceModel.ServerTooBusyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServerTooBusyException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor" />
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="cda4ed2b-3c84-98cb-67a4-4f4a425eba79" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="d2c33d4d-9df0-bdb9-eaf0-281b5af4bb32" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="945fd782-a138-d743-6e7d-40b9179ed50b" />
    </api>
    <api id="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServerTooBusyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServerTooBusyException" ref="true" />
      </containers>
      <file name="c68559b3-4b60-86f6-0675-cc9d9f8ffd11" />
    </api>
    <api id="T:System.ServiceModel.ServiceActivationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="a3c94023-79a5-968c-b444-863aad0e44e1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.ServiceActivationException.#ctor">
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor" />
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="9b2248be-bb9d-3dad-3a9d-638478cca0ab" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:Microsoft.Phone.Reactive.ExceptionExtensions.PrepareForRethrow(System.Exception)" source="extension">
          <apidata name="PrepareForRethrow" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.Phone.Reactive" module="Microsoft.Phone.Reactive" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.Phone.Reactive" />
            <type api="T:Microsoft.Phone.Reactive.ExceptionExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="9ed5e5fc-a56a-a258-ada9-56621e76d896" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceActivationException">
      <topicdata name="ServiceActivationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceActivationException" />
      <apidata name="ServiceActivationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceActivationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" />
      </containers>
      <file name="f64b1490-76da-af33-a9e3-ba17dc16f63e" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceActivationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceActivationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor" />
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="cbf842f3-94b5-af87-c8f3-952040daf03b" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="fc697796-29eb-1848-72a3-11055588d2eb" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="09204208-191d-e2ea-f926-8094416ed272" />
    </api>
    <api id="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceActivationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceActivationException" ref="true" />
      </containers>
      <file name="89955b08-d995-88b8-b52a-8d8b6f431bb6" />
    </api>
    <api id="T:System.ServiceModel.ServiceContractAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6ec087ce-d2bc-722c-7632-4bdc64210a29" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="f7b6d56d-5584-f926-b86f-d282481ec518" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="7ab3707b-d130-3294-1116-3b1f23562978" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceContractAttribute">
      <topicdata name="ServiceContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceContractAttribute" />
      <apidata name="ServiceContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Name" />
        <element api="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" />
      </containers>
      <file name="501a5236-72d7-5919-8288-571d12f0d1f1" />
    </api>
    <api id="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="796619ab-6b2a-4928-3d30-808645e31db3" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <topicdata group="api" />
      <apidata name="CallbackContract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CallbackContract" />
      <setter name="set_CallbackContract" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="675e24e1-52fa-50c0-2215-b34470e9ad04" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <topicdata group="api" />
      <apidata name="ConfigurationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigurationName" />
      <setter name="set_ConfigurationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="4a99e0f6-5a81-4151-059c-d8ce018fd320" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="819680b3-82f9-6758-53a2-966af01a82e1" />
    </api>
    <api id="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
      </containers>
      <file name="5c521378-9957-9fd8-d69d-e8a8c1b2c6ef" />
    </api>
    <api id="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b810ede4-b572-baaf-91d6-869f8fef8f67" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor">
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
          <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="24e74c39-4f73-e0b6-4afe-8f392aafc23c" />
    </api>
    <api id="Methods.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="eec1e6c5-49c3-c73e-72b9-02f0261ffb81" />
    </api>
    <api id="Properties.T:System.ServiceModel.ServiceKnownTypeAttribute">
      <topicdata name="ServiceKnownTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name="ServiceKnownTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
        <element api="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" />
      </containers>
      <file name="75673bd1-2ed0-cdd2-0721-197220db8f82" />
    </api>
    <api id="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.ServiceKnownTypeAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
        <element api="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="32501f32-a84c-2528-f741-0945f135b8a4" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="270794ca-67c7-e945-4d78-6f606913b5bd" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="declaringType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="6f11c7cf-ca8e-f41e-4931-711c07baae36" />
    </api>
    <api id="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.ServiceKnownTypeAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="9ea3fbf1-23c4-306b-dcb4-a15f573831a3" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <topicdata group="api" />
      <apidata name="DeclaringType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DeclaringType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="479c97af-3759-98ea-99ad-69e1e4428a0f" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="203ca0e0-9204-4402-d181-53b9a8d8c1f7" />
    </api>
    <api id="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.ServiceKnownTypeAttribute" ref="true" />
      </containers>
      <file name="429eaf84-64f2-2051-1b56-df5c173345c3" />
    </api>
    <api id="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <file name="eba72d01-7a26-627e-fc5a-876761f25d4f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="0851b2cb-836b-f5d7-16b3-8a15decb7d2b" />
    </api>
    <api id="Methods.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="512f628d-3849-f0f8-b1d0-5fbf68b38edc" />
    </api>
    <api id="Properties.T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <topicdata name="UnknownMessageReceivedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      <apidata name="UnknownMessageReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" />
      </containers>
      <file name="4a361bd3-a2cc-abda-4fc2-50f6699fb3b9" />
    </api>
    <api id="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (5.0.50116.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
      </containers>
      <file name="9f028020-8899-2e57-a031-5cd8f24313a8" />
    </api>
    <api id="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="39b9e809-4742-2f86-19e6-07ecdafc5a61" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults" />
      </elements>
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="f4ff96cf-b5dd-754d-968a-55147fdee05b" />
    </api>
    <api id="Methods.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="ec6158e5-448d-1211-6616-f0b08f2fb41e" />
    </api>
    <api id="Properties.T:System.ServiceModel.XmlSerializerFormatAttribute">
      <topicdata name="XmlSerializerFormatAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      <apidata name="XmlSerializerFormatAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults" />
      </elements>
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" />
      </containers>
      <file name="c23ca850-cdd6-7e09-1154-6529e17a8aa4" />
    </api>
    <api id="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="8fe9bb8e-edc3-ff36-d7c7-ec6e6e7877f6" />
    </api>
    <api id="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <topicdata group="api" />
      <apidata name="SupportFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SupportFaults" />
      <setter name="set_SupportFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Serialization" module="System.Xml.Serialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30508.0" />
        </library>
        <namespace api="N:System.ServiceModel" />
        <type api="T:System.ServiceModel.XmlSerializerFormatAttribute" ref="true" />
      </containers>
      <file name="8dcb855c-deae-50a1-d687-a214dad6be4e" />
    </api>
  </apis>
</reflection>