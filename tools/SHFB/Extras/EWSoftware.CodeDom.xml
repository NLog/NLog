<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EWSoftware.CodeDom</name>
    </assembly>
    <members>
        <member name="T:EWSoftware.CodeDom.CSharpCodeProviderWithDocs">
            <summary>
            This is a custom C# code provider that is able to output an individual
            XML comments file for each unit that is compiled to a folder of your
            choice.
            </summary>
            <remarks>This changes the default behavior which overwrites the
            comments file on each invocation and dumps it into the temporary
            ASP.NET compilation folder.
            
            <p/>A <c>/docpath:[path]</c> option should be added to the
            <c>compilerOptions</c> attribute in the <b>Web.config</b> file to
            specify the path to which the XML comments files will be written.
            The filenames will match the assembly names generated by the
            compiler.</remarks>
            <example>
            <code lang="xml" title="Example Compiler Configuration">
            <![CDATA[
            <configuration>
                <system.codedom>
                  <compilers>
                    <!-- For C# -->
                    <compiler language="c#;cs;csharp" extension=".cs"
                      compilerOptions="/docpath:C:\Publish\Doc"
                      type="EWSoftware.CodeDom.CSharpCodeProviderWithDocs,
                          EWSoftware.CodeDom, Version=1.0.0.0, Culture=neutral,
                          PublicKeyToken=d633d7d5b41cbb65" />
                  </compilers>
                </system.codedom>
            </configuration>]]>
            </code>
            </example>
        </member>
        <member name="M:EWSoftware.CodeDom.CSharpCodeProviderWithDocs.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:EWSoftware.CodeDom.CSharpCodeProviderWithDocs.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            This constructor is passed a provider options dictionary
            </summary>
            <param name="providerOptions">The provider options</param>
        </member>
        <member name="M:EWSoftware.CodeDom.CSharpCodeProviderWithDocs.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <inheritdoc />
        </member>
        <member name="M:EWSoftware.CodeDom.CSharpCodeProviderWithDocs.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:EWSoftware.CodeDom.CSharpCodeProviderWithDocs.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <inheritdoc />
        </member>
        <member name="T:EWSoftware.CodeDom.CodeProviderHelper">
            <summary>
            This is a helper class that contains items common to all of the code
            providers.
            </summary>
        </member>
        <member name="M:EWSoftware.CodeDom.CodeProviderHelper.ReplaceDocPathOption(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <summary>
            This is used to extract the "/docpath" parameter from the
            compiler options and set the XML comments compiler option.
            </summary>
            <param name="options">The compiler parameters</param>
            <param name="additionalOptions">Other command line options to add
            or null if there are none.</param>
            <remarks>If a "/docpath" option is not found, no comments will be
            produced for the compiled items.</remarks>
        </member>
        <member name="T:EWSoftware.CodeDom.VBCodeProviderWithDocs">
            <summary>
            This is a custom VB.NET code provider that is able to output an
            individual XML comments file for each unit that is compiled to a folder
            of your choice.
            </summary>
            <remarks>This changes the default behavior which overwrites the
            comments file on each invocation and/or dumps them into the temporary
            ASP.NET compilation folder.
            
            <p/>A <c>/docpath:[path]</c> option should be added to the
            <c>compilerOptions</c> attribute in the <b>Web.config</b> file to
            specify the path to which the XML comments files will be written.
            The filenames will match the assembly names generated by the
            compiler.</remarks>
            <example>
            <code lang="xml" title="Example Compiler Configuration">
            <![CDATA[
            <configuration>
                <system.codedom>
                  <compilers>
                    <!-- For VB.NET -->
                    <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb"
                      compilerOptions="/docpath:C:\Publish\Doc"
                      type="EWSoftware.CodeDom.VBCodeProviderWithDocs,
                          EWSoftware.CodeDom, Version=1.0.0.0, Culture=neutral,
                          PublicKeyToken=d633d7d5b41cbb65" />
                  </compilers>
                </system.codedom>
            </configuration>]]>
            </code>
            </example>
        </member>
        <member name="M:EWSoftware.CodeDom.VBCodeProviderWithDocs.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:EWSoftware.CodeDom.VBCodeProviderWithDocs.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            This constructor is passed a provider options dictionary
            </summary>
            <param name="providerOptions">The provider options</param>
        </member>
        <member name="M:EWSoftware.CodeDom.VBCodeProviderWithDocs.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
            <inheritdoc />
        </member>
        <member name="M:EWSoftware.CodeDom.VBCodeProviderWithDocs.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <inheritdoc />
        </member>
        <member name="M:EWSoftware.CodeDom.VBCodeProviderWithDocs.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
            <inheritdoc />
        </member>
    </members>
</doc>
