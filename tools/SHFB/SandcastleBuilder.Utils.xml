<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilder.Utils</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager">
            <summary>
            This class is used to interact with the Help Library Manager to install and uninstall Microsoft Help
            Viewer files.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>Help Viewer 1.0 will be used</remarks>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.#ctor(System.Version)">
            <summary>
            Constructor
            </summary>
            <param name="version">The help viewer version to use for all operations</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.DefaultCatalogName(System.Version)">
            <summary>
            This is used to get the default MS Help Viewer 2.x catalog name based on the help viewer version
            </summary>
            <param name="viewerVersion">The help viewer version</param>
            <returns>The default catalog name for the related help viewer version or null if it could not be
            determined.</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.FindLocaleFor(System.String,System.String)">
            <summary>
            This is used to find the installed locale of the specified product version for Help Viewer 1.0
            </summary>
            <param name="product">The product for which to get the locale.</param>
            <param name="version">The version of the product for which to get the locale.</param>
            <returns>The locale found for the specified product.  If not found, it returns null.</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.FindLocaleFor(System.String)">
            <summary>
            This is used to find the installed locale of the specified product version for Help Viewer 2.x
            </summary>
            <param name="catalogName">The catalogName for which to get the locale</param>
            <returns>The locale found for the specified catalog.  If not found, it returns null.</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpContentFileInstalled(System.String)">
            <summary>
            This is used to see if the specified content file is installed
            </summary>
            <param name="contentFilename">The filename for which to check</param>
            <returns>True if the file is installed, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.RunAsNormalUser(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            Run the Help Library Content Manager as a normal user
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <param name="windowStyle">The window style to use</param>
            <returns>The Help Library Manager exit code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.RunAsAdministrator(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            Run the Help Library Content Manager as an administrator
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <param name="windowStyle">The window style to use</param>
            <returns>The Help Library Manager exit code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LaunchInteractive(System.String)">
            <summary>
            Launch the help content manager for interactive use
            </summary>
            <param name="arguments">The command line arguments to pass to it</param>
            <remarks>This always runs it as an administrator on Vista and above.</remarks>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LocalStorePath">
            <summary>
            This read-only property returns the path to the local store folder.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpViewerInstallPath">
            <summary>
            This read-only property returns the path to the MS Help Viewer installation folder
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpLibraryManagerPath">
            <summary>
            This read-only property returns the path to the Help Library Manager executable
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.HelpViewerPath">
            <summary>
            This read-only property returns the path to the MS Help Viewer application
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManager.LocalStoreInitialized">
            <summary>
            This read-only property is used to see if the local store has been initialized
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException">
            <summary>
            This exception class is thrown to report problems with the Help Library Manager operation
            </summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Success">
            <summary>The operation was successful.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HelpLibraryManagerNotFound">
            <summary>The Help Library Manager was not found.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HelpLibraryManagerAlreadyRunning">
            <summary>The Help Library Manager is already running.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.LocalStoreNotInitialized">
            <summary>The local store is not initialized.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingCommandLineArgument">
            <summary>A required command line argument is missing.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.CatalogNotInstalled">
            <summary>The catalog is not installed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.UnknownError">
            <summary>An unknown error occurred in the Help Library Manager launcher.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidCmdArgs">
            <summary>One or more command line arguments was missing or invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingOrInvalidAppConfig">
            <summary>The application configuration file for HLM was missing or invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnMachineLock">
            <summary>The help content store could not be locked for update.  This error typically
            occurs when the content is locked for update by another process.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.MissingCatalogInfo">
            <summary>Files required to install content for a new product were not found.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidCatalogInfo">
            <summary>Files required to install content for a new product were invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSettingLocalStore">
            <summary>The path specified for the /content switch is invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.InvalidHelpLocation">
            <summary>The local content store is in an invalid state.  This error occurs when the
            directory permissions do not allow writing, or a required file is missing from the
            directory.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.NoBooksToInstall">
            <summary>The arguments passed to HLM did not result in content being installed or removed.
            This can occur when the content is already installed or has already been removed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSilentUninstall">
            <summary>The removal of content failed.  Detailed information can be found in the event log
            and in the installation log.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnSilentInstall">
            <summary>The installation of content failed.  Detailed information can be found in the event
            log and in the installation log.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.NonAdminSetsLocalStoreOnSilentMode">
            <summary>A non-admin user is trying to initialize the store using the /silent switch.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailureToElevate">
            <summary>Failed to elevate with administrative privileges.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HV2InvalidCmdArgs">
            <summary>One or more command line arguments was missing or invalid.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnFetchingOnlineContent">
            <summary>Failed while fetching online content.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnFetchingContentFromDisk">
            <summary>Failed while fetching content from disk.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnFetchingInstalledBooks">
            <summary>Failed while fetching installed books.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.NoBooksToUninstall">
            <summary>The arguments passed to HLM did not result in content being removed.  This can occur when
            the content has already been removed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.HV2NoBooksToInstall">
            <summary>The arguments passed to HLM did not result in content being installed.  This can occur when
            the content is already installed.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnUninstall">
            <summary>Failed on uninstall operation.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnInstall">
            <summary>Failed on install operation.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnMove">
            <summary>Failed on move operation.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnUpdate">
            <summary>Failed on update operation.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.FailOnRefresh">
            <summary>Failed on refresh operation.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Canceled">
            <summary>The operation was canceled.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.ContentManagementDisabled">
            <summary>Content management has been disabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.OnlineHelpPreferenceDisabled">
            <summary>Online help preference has been disabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.UpdateAlreadyRunning">
            <summary>Another update is already running.</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Others">
            <summary>An unknown error occurred.</summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Version,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="version">The help viewer version to which the error applies</param>
            <param name="errorCode">The error code associated with the exception</param>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Version,System.Int32,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="version">The help viewer version to which the error applies</param>
            <param name="errorCode">The error code associated with the exception</param>
            <param name="additionalInfo">Additional information for the error message</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.ErrorMessageForCode(System.Version,System.Int32)">
            <summary>
            Return a descriptive error message for the specified error code
            </summary>
            <param name="version">The help viewer version to which the error code applies</param>
            <param name="code">The error code</param>
            <returns>A descriptive error message for the error code</returns>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.Version">
            <summary>
            This read-only property returns the help viewer version to which the error code applies
            </summary>
        </member>
        <member name="P:SandcastleBuilder.MicrosoftHelpViewer.HelpLibraryManagerException.ErrorCode">
            <summary>
            This read-only property returns the error code
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.UnsafeNativeMethods">
            <summary>
            This internal class is used for access to some Win32 API functions.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.UnsafeNativeMethods.GetRegistryValue(System.String,System.String)">
            <summary>
            This is used to try and find the specified registry key value in the 64 bit part
            of the registry. If not found, an attempt is made to try and find it in the 32 bit
            part of the registry.
            </summary>
            <param name="registryKeyPath">The registry key path to find</param>
            <param name="valueName">The value name to find</param>
            <returns>The value in the named registry key value</returns>
            <remarks>This method uses an API call that is unsupported on Windows 2000.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.ApiEntryType">
            <summary>
            This public enumerated type defines the API entry types that can be removed from the reflection
            information file.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.None">
            <summary>An unknown entry</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Namespace">
            <summary>A namespace</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Class">
            <summary>A class</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Structure">
            <summary>An interface</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Interface">
            <summary>An interface</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Enumeration">
            <summary>An enumeration</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Delegate">
            <summary>A delegate</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Constructor">
            <summary>A constructor</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Method">
            <summary>A method</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Operator">
            <summary>An operator</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Property">
            <summary>A property</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Event">
            <summary>An event</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ApiEntryType.Field">
            <summary>A field</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildAssemblerVerbosity">
            <summary>
            This public enumerated type defines the build assembler tool verbosity levels
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAssemblerVerbosity.AllMessages">
            <summary>Report all messages (the default)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAssemblerVerbosity.OnlyWarningsAndErrors">
            <summary>Only warning and error messages</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAssemblerVerbosity.OnlyErrors">
            <summary>Only error messages</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.BuildComponentConfiguration">
            <summary>
            This class is used to contain a build component's configuration and enabled state
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.BuildComponentConfiguration.#ctor(System.Boolean,System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="enabled">The enabled state</param>
            <param name="configuration">The configuration</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.BuildComponentConfiguration.Enabled">
            <summary>
            This is used to get or set the build component's enabled state
            </summary>
            <value>If set to false, the component will not be used in the build</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.BuildComponentConfiguration.Configuration">
            <summary>
            This is used to get or set the component's configuration information
            </summary>
            <value>This should be an XML fragment.  The root node should be named <c>component</c> with an
            <c>id</c> attribute that names the component</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute">
            <summary>
            This is a custom version of the <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> that contains metadata for the help file
            builder plug-ins.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">The required plug-in ID</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.Id">
            <summary>
            This read-only property is used to get the plug-in ID
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.IsConfigurable">
            <summary>
            This is used to get or set whether or not the plug-in is configurable
            </summary>
            <value>If not specified, the default is false</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.IsHidden">
            <summary>
            This is used to indicate whether or not the plug-in is hidden in the project plug-in property page
            </summary>
            <value>If set to true, the plug-in is hidden in the project plug-in property page and cannot
            be added to the project.  If false, the default, it can be added to projects.  This is useful for
            presentation style dependency plug-ins that have no configurable elements and thus do not need to be
            manually added to the project to override settings.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.RunsInPartialBuild">
            <summary>
            This is used to get or set whether or not the plug-in runs in partial builds
            </summary>
            <value>If not specified, the default is false</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.Description">
            <summary>
            This is used to get or set a brief description of the plug-in
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.Version">
            <summary>
            This is used to get or set the plug-in version number
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.HelpFileBuilderPlugInExportAttribute.Copyright">
            <summary>
            This is used to get or set copyright information for the plug-in
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata">
            <summary>
            This class defines the metadata for a Sandcastle Help File Builder build process plug-in
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.Id">
            <summary>
            This read-only property returns the ID for the plug-in
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.IsHidden">
            <summary>
            This read-only property returns true if the plug-in is hidden in the project plug-in property page
            </summary>
            <value>If this returns true, the plug-in is hidden in the project plug-in property page and cannot
            be added to the project.  If false, the default, it can be added to projects.  This is useful for
            presentation style dependency plug-ins that have no configurable elements and thus do not need to be
            manually added to the project to override settings.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.IsConfigurable">
            <summary>
            This read-only property returns true if the plug-in is configurable or false if it is not
            </summary>
            <value>If this returns true, the <see cref="M:SandcastleBuilder.Utils.BuildComponent.IPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)"/> method will be called to allow
            the user to configure the plug-in's settings when requested.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.RunsInPartialBuild">
            <summary>
            This read-only property returns true if the plug-in should run in a partial build or false if it
            should not.
            </summary>
            <value>If this returns false, the plug-in will not be loaded when a partial build is performed.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.Description">
            <summary>
            This read-only property returns a brief description of the plug-in
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.Version">
            <summary>
            This read-only property returns the version of the plug-in
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.Copyright">
            <summary>
            This read-only property returns the copyright information for the plug-in
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation">
            <summary>
            This is used to represent a framework XML comments file location
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation.Folder">
            <summary>The folder location</summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation.Wildcard">
            <summary>The wildcard to use</summary>
            <value>If not specified, "*.xml" is assumed.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation.CacheFilename">
            <summary>Cache filename for the cached build components</summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation.CanHaveLocalizedVersion">
            <summary>
            Specify true if the XML comments can have localized versions in
            a language sub-folder.
            </summary>
            <value>The default is false to not check for language-specific
            versions of the XML comments files.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.FrameworkCommentsFileLocation.Recurse">
            <summary>
            Specify true to recurse this folder for additional comments files
            or false to only look in the given folder.
            </summary>
            <value>The default is false to no recurse sub-folders</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.PartialBuildType">
            <summary>
            This public enumerated type defines the partial build types
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.PartialBuildType.None">
            <summary>The build will run to completion</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.PartialBuildType.GenerateReflectionInfo">
            <summary>The build will stop after generating reflection information</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.PartialBuildType.TransformReflectionInfo">
            <summary>The build will stop after applying the document model XSL transformation</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement">
            <summary>
            This class handles substitution tag replacement in build template files
            </summary>
            <remarks><para>Replacement tags appear in the form of a tag name prefixed with an '@' and enclosed in
            curly braces (<c>{@PropertyName}</c>).  An optional format specifier is also allowed if needed such
            as for date formatting (<c>{@BuildDate:MMMM d, yyyy}</c>).</para>
            
            <para>Methods in this class tagged with the <see cref="T:SandcastleBuilder.Utils.Design.SubstitutionTagAttribute"/> attribute represent
            substitution tags that require additional handling.  For simple types that require no special handling
            and those that require only minor changes, the value returned by
            <see cref="M:SandcastleBuilder.Utils.SandcastleProject.ReplacementValueFor(System.String)"/> is used and there is no corresponding method in this
            class.</para></remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Constructor
            </summary>
            <param name="currentBuild">The current build for which to perform substitution tag replacement</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TransformText(System.String,System.Object[])">
            <summary>
            Transform the specified template text by replacing the substitution tags with the corresponding
            project property values.
            </summary>
            <param name="templateText">The template text to transform</param>
            <param name="args">An optional list of arguments to format into the  template before transforming it</param>
            <returns>The transformed text</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TransformTemplate(System.String,System.String,System.String)">
            <summary>
            Transform the specified template file by inserting the necessary values into the substitution tags
            and saving it to the destination folder.
            </summary>
            <param name="templateFile">The template file to transform</param>
            <param name="sourceFolder">The folder where the template is located</param>
            <param name="destFolder">The folder in which to save the transformed file</param>
            <returns>The path to the transformed file</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.OnFieldMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a substitution tag with a value from the project
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.AppDataFolder">
            <summary>
            The application data folder
            </summary>
            <returns>The application data folder.  This folder should exist if used.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.LocalDataFolder">
            <summary>
            The local data folder
            </summary>
            <returns>The local data folder.  This folder may not exist and we may need to create it.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.SHFBFolder">
            <summary>
            The help file builder folder
            </summary>
            <returns>The help file builder folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ComponentsFolder">
            <summary>
            The components folder
            </summary>
            <returns>The components folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ProjectFolder">
            <summary>
            The current build's help file builder project folder
            </summary>
            <returns>The current build's help file builder project folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncProjectFolder">
            <summary>
            The current build's HTML encoded help file builder project folder
            </summary>
            <returns>The current build's HTML encoded help file builder project folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.OutputFolder">
            <summary>
            The current build's output folder
            </summary>
            <returns>The current build's output folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncOutputFolder">
            <summary>
            The current build's HTML encoded output folder
            </summary>
            <returns>The current build's HTML encoded output folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.WorkingFolder">
            <summary>
            The current build's working folder
            </summary>
            <returns>The current build's working folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncWorkingFolder">
            <summary>
            The current build's HTML encoded working folder
            </summary>
            <returns>The current build's HTML encoded working folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HHCPath">
            <summary>
            The HTML Help 1 compiler path
            </summary>
            <returns>The HTML Help 1 compiler path</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ResourceItemsFolder">
            <summary>
            The resource items folder
            </summary>
            <returns>The resource items folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Help1Folder">
            <summary>
            The HTML Help 1 output folder
            </summary>
            <returns>The HTML Help 1 output folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.WebsiteFolder">
            <summary>
            The website output folder
            </summary>
            <returns>The website output folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ComponentLocations">
            <summary>
            The MEF component locations
            </summary>
            <returns>The MEF component locations</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HelpFormatOutputPaths">
            <summary>
            The help format output paths
            </summary>
            <returns>The help format output paths</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.SandcastlePath">
            <summary>
            The old Sandcastle Tools path (obsolete)
            </summary>
            <returns>This is obsolete but will still appear in the older component and plug-in configurations.
            Throw an exception that describes what to do to fix it.  Eventually, this can be removed.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.PresentationPath">
            <summary>
            The presentation style folder
            </summary>
            <returns>The presentation style folder</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.DocModelTransformation">
            <summary>
            The document model XSL transformation filename
            </summary>
            <returns>The document model XSL transformation filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.DocModelTransformationParameters">
            <summary>
            The document model XSL transformation parameters
            </summary>
            <returns>The document model XSL transformation parameters</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TocTransformation">
            <summary>
            The intermediate TOC XSL transformation filename
            </summary>
            <returns>The intermediate TOC XSL transformation filename</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TocTransformParameters">
            <summary>
            The intermediate TOC XSL transformation parameters
            </summary>
            <returns>The intermediate TOC XSL transformation parameters</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CodeSnippetGrouping">
            <summary>
            The code snippet grouping option
            </summary>
            <returns>The intermediate TOC XSL transformation parameters</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TransformComponentArguments">
            <summary>
            The Transform Component argument list
            </summary>
            <returns>The Transform Component argument list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HRefFormat">
            <summary>
            The HREF format for reference links
            </summary>
            <returns>The HREF format for reference links</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TargetFrameworkIdentifier">
            <summary>
            The target framework identifier (platform)
            </summary>
            <returns>The target framework identifier</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.FrameworkVersion">
            <summary>
            The full framework version
            </summary>
            <returns>The full framework version</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.FrameworkVersionShort">
            <summary>
            The short framework version (Major.Minor)
            </summary>
            <returns>The short framework version</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.FrameworkReflectionDataFolder">
            <summary>
            The framework reflection data folder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.BuildAssemblerVerbosity">
            <summary>
            Build assembler verbosity
            </summary>
            <returns>The build assembler verbosity</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncHelpName">
            <summary>
            The HTML encoded help name
            </summary>
            <returns>The HTML encoded help name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ScriptHelpTitle">
            <summary>
            The script help title
            </summary>
            <returns>This is used when the title is passed as a parameter to a JavaScript function.  Single
            quotes in the value are escaped and the value is HTML encoded.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.UrlEncHelpTitle">
            <summary>
            The URL encoded help title
            </summary>
            <returns>Only &amp;, &lt;, &gt;, and " are replaced for now</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.RootNamespaceTitle">
            <summary>
            The root namespace title element
            </summary>
            <returns>If not set, it returns the localized title element include as the value</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.NamespaceGrouping">
            <summary>
            The namespace grouping setting if supported
            </summary>
            <returns>The namespace grouping option enabled state</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.LangId">
            <summary>
            The language ID
            </summary>
            <returns>The language ID</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Language">
            <summary>
            The language locale ID and native name
            </summary>
            <returns>The language locale ID and native name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Locale">
            <summary>
            The locale in lowercase
            </summary>
            <returns>The locale ID in lowercase</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.LocaleMixedCase">
            <summary>
            The locale in mixed case
            </summary>
            <returns>The locale ID in mixed case</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Copyright">
            <summary>
            The copyright include item if wanted
            </summary>
            <returns>The include copyright info if there is a copyright HREF or copyright text</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CopyrightInfo">
            <summary>
            The copyright information
            </summary>
            <returns>The copyright information based on whether the HREF and/or text is specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncCopyrightInfo">
            <summary>
            The HTML encoded copyright info
            </summary>
            <returns>The HTML encoded copyright info based on whether the HREF and/or text is specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncCopyrightHref">
            <summary>
            The HTML encoded copyright link
            </summary>
            <returns>The HTML encoded copyright link if specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CopyrightText">
            <summary>
            The copyright text
            </summary>
            <returns>The copyright text if specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncCopyrightText">
            <summary>
            The HTML encoded copyright text
            </summary>
            <returns>The HTML encoded copyright text if specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Comments">
            <summary>
            The "Send comments" include item
            </summary>
            <returns>Include the "send comments" line if feedback e-mail address is specified</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.UrlEncFeedbackEMailAddress">
            <summary>
            The URL encoded feedback e-mail address
            </summary>
            <returns>The URL encoded feedback e-mail address</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncFeedbackEMailAddress">
            <summary>
            The HTML encoded feedback e-mail address
            </summary>
            <returns>The HTML encoded feedback e-mail address.  If link text is specified, it will be used instead.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Preliminary">
            <summary>
            The "preliminary" warning in the header text
            </summary>
            <returns>Include the "preliminary" warning in the header text if wanted</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.SdkLinkTarget">
            <summary>
            The SDK link target
            </summary>
            <returns>The SDK link target converted to lowercase and prefixed with an underscore</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.SyntaxFilters">
            <summary>
            The syntax filter generator settings
            </summary>
            <returns>The syntax filter generator settings</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.SyntaxFiltersDropDown">
            <summary>
            The syntax filter language settings for the Transform Component
            </summary>
            <returns>The syntax filter language settings for the Transform Component.  It is not technically a
            dropdown anymore but I can't be bothered to go change it everywhere.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.BinaryTOC">
            <summary>
            The binary TOC option
            </summary>
            <returns>The binary TOC option as a "Yes" or "No" value</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.WindowOptions">
            <summary>
            The help window options
            </summary>
            <returns>Currently, we use a default set of options and only allow showing or hiding the Favorites tab</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HelpViewerSetupName">
            <summary>
            The help viewer setup name
            </summary>
            <returns>Help viewer setup names cannot contain periods so we'll replace them with underscores.  The
            value is also HTML encoded.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CatalogName">
            <summary>
            The catalog name
            </summary>
            <returns>The catalog name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.VendorName">
            <summary>
            The vendor name
            </summary>
            <returns>The vendor name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncVendorName">
            <summary>
            The HTML encoded vendor name
            </summary>
            <returns>The HTML encoded vendor name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ProductTitle">
            <summary>
            The product title
            </summary>
            <returns>The product title</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlEncProductTitle">
            <summary>
            The HTML encoded product title
            </summary>
            <returns>The HTML encoded product title</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TopicVersion">
            <summary>
            The topic version
            </summary>
            <returns>The topic version</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TocParentId">
            <summary>
            The table of contents parent ID
            </summary>
            <returns>The table of contents parent ID</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ApiTocParentId">
            <summary>
            The API table of contents parent ID
            </summary>
            <returns>The API table of contents parent ID.  If null, empty, or it starts with '*', it is parented
            to the root node</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TocParentVersion">
            <summary>
            The table of contents parent version
            </summary>
            <returns>The table of contents parent version</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HtmlTOC">
            <summary>
            The HTML table of contents for websites
            </summary>
            <returns>The HTML table of contents for websites</returns>
            <remarks>If the legacy web content is ever removed, this handler and its related method,
            <see cref="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.AppendTocEntry(System.Xml.XPath.XPathNodeIterator,System.Text.StringBuilder)"/>, can be removed</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ApiFilter">
            <summary>
            The API filter settings
            </summary>
            <returns>The API filter settings.  In a partial build used to get API info for the API filter
            designer, the filter is suppressed and will not be used.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.FrameworkCommentList">
            <summary>
            Framework comments file list (data elements)
            </summary>
            <returns>The framework comments file list in <c>data</c> elements</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ImportFrameworkCommentList">
            <summary>
            Framework comments file list (import elements)
            </summary>
            <returns>The framework comments file list in <c>import</c> elements</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CommentFileList">
            <summary>
            XML comments file list
            </summary>
            <returns>The XML comments file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.InheritedCommentFileList">
            <summary>
            XML comments file list for inherited documentation generation
            </summary>
            <returns>The XML comments file list for inherited documentation generation</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.Help1xProjectFiles">
            <summary>
            Help 1 project file list
            </summary>
            <returns>The help 1 project file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.CodeSnippetsFiles">
            <summary>
            Code snippets file list
            </summary>
            <returns>The code snippets file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ReferenceLinkNamespaceFiles">
            <summary>
            Reference link namespace file list
            </summary>
            <returns>The reference link namespace file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ResourceItemFiles">
            <summary>
            Resource items file list
            </summary>
            <returns>The resource items file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.TokenFiles">
            <summary>
            Token file list
            </summary>
            <returns>The token file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.XamlConfigFiles">
            <summary>
            XAML configuration file list
            </summary>
            <returns>The XAML configuration file list</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.BuildDate">
            <summary>
            The build date
            </summary>
            <returns>The build date.  An optional format can be applied to the result.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.DefaultTopic">
            <summary>
            The default topic ID
            </summary>
            <returns>The default topic ID</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.WebDefaultTopic">
            <summary>
            The default topic ID for websites
            </summary>
            <returns>The default topic ID with backslashes converted to forward slashes</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ProjectNodeName">
            <summary>
            The project node name
            </summary>
            <returns>The project node name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ProjectNodeIdOptional">
            <summary>
            The optional project node ID
            </summary>
            <returns>The project node ID or an empty string if the Root Namespace Container is not enabled</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.ProjectNodeIdRequired">
            <summary>
            The required project node ID
            </summary>
            <returns>The project node ID (always returns the ID)</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.AddXamlSyntaxData">
            <summary>
            Add XAML syntax data transformation setting
            </summary>
            <returns>The "Add XAML syntax data" transformation setting.  If the XAML syntax generator is present,
            add XAML syntax data to the reflection file.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.UniqueId">
            <summary>
            Unique ID
            </summary>
            <returns>A unique ID for the project and current user</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.FrameworkCommentList(System.Boolean)">
            <summary>
            This is used to generate an appropriate list of entries that represent .NET Framework comments file
            locations for the various configuration files.
            </summary>
            <param name="forImport">True if for import, false if not.  If true, it returns a list of the files
            as <c>import</c> elements.  If false, it returns them in <c>data</c> elements.</param>
            <returns>The list of framework comments file sources in the appropriate format</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.HelpProjectFileList(System.String,Sandcastle.Core.HelpFileFormats)">
            <summary>
            This returns a complete list of files for inclusion in the compiled help file
            </summary>
            <param name="folder">The folder to expand</param>
            <param name="format">The help file format</param>
            <returns>The full list of all files for the help project</returns>
            <remarks>The help file list is expanded to ensure that we get all additional content including all
            nested subfolders.  The <paramref name="format"/> parameter determines the format of the returned
            file list.  For HTML Help 1, it returns a list of the filenames.  For all others, it returns the list
            formatted with the necessary XML markup.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.SubstitutionTagReplacement.AppendTocEntry(System.Xml.XPath.XPathNodeIterator,System.Text.StringBuilder)">
            <summary>
            This is called to recursively append the child nodes to the HTML table of contents in the specified
            string builder.
            </summary>
            <param name="entries">The list over which to iterate recursively</param>
            <param name="tableOfContents">The string builder to which the entries are appended</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.TaskRunner">
            <summary>
            This class is used to execute external tasks such as MSBuild
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Constructor
            </summary>
            <param name="currentBuild">The current build for which to execute tasks</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.RunProject(System.String,System.Boolean)">
            <summary>
            Run the specified MSBuild project
            </summary>
            <param name="projectFile">The project file to run</param>
            <param name="minimalOutput">True for minimal output, false for normal output</param>
            <remarks>A standard set of command line options will be used (<c>/nologo /clp:NoSummary</c>) along
            with the given verbosity level.  The 64-bit version of MSBuild will be used if available on 64-bit
            systems.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.Run32BitProject(System.String,System.Boolean)">
            <summary>
            Run the specified MSBuild project using the 32-bit version of MSBuild
            </summary>
            <param name="projectFile">The project file to run</param>
            <param name="minimalOutput">True for minimal output, false for normal output</param>
            <remarks>A standard set of command line options will be used (<c>/nologo /clp:NoSummary</c>) along
            with the given verbosity level.  Silverlight build targets are only available for 32-bit builds
            regardless of the framework version and require the 32-bit version of MSBuild in order to load the
            targets files correctly.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.Run(System.String,System.String,System.String)">
            <summary>
            This is used to run a step in the build process
            </summary>
            <param name="processFilename">The process to execute.</param>
            <param name="targetFile">An optional target file that the process will operate on such as an MSBuild
            project file.</param>
            <param name="arguments">An optional set of arguments to pass to the process</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.TerminateProcessAndChildren(System.Diagnostics.Process)">
            <summary>
            Terminate the current process and any known child processes if they're still alive
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.TaskRunner.ReadOutputStream(System.IO.StreamReader)">
            <summary>
            This is used to capture output from the given process stream
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildItemMetadata">
            <summary>
            This class holds a set of constants that define build item metadata names
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.BuildAction">
            <summary>Build action</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.IncludePath">
            <summary>Include item</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.HintPath">
            <summary>File reference hint path</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.LinkPath">
            <summary>Linked item path</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.ProjectGuid">
            <summary>Project GUID item</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.Name">
            <summary>Project name item</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.ReferenceOutputAssembly">
            <summary>Reference output assembly item</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.Configuration">
            <summary>Configuration setting</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.Platform">
            <summary>Platform setting</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.OutDir">
            <summary>Output directory setting</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.ProjectName">
            <summary>Project name setting</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.ImageId">
            <summary>Image ID</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.AlternateText">
            <summary>Alternate text</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.CopyToMedia">
            <summary>Copy to media folder</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildItemMetadata.SortOrder">
            <summary>Sort order</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ContentFile">
            <summary>
            This represents a content file such as a token file, code snippet file, image, etc.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ContentFile.#ctor(SandcastleBuilder.Utils.FilePath)">
            <summary>
            Constructor
            </summary>
            <param name="filePath">The full path to the content file</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.BasePathProvider">
            <summary>
            This read-only property is used to get the base path provider
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.Filename">
            <summary>
            This read-only property is used to get the content filename without the path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.FullPath">
            <summary>
            This is used to get or set the full path to the content file
            </summary>
            <remarks>This returns the path to the file's true location.  For linked items, this path will differ
            from the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.LinkPath"/> which returns the project-relative location.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.PersistablePath">
            <summary>
            This read-only property is used to get the persistable path to the content item (the path relative
            to the project folder)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.LinkPath">
            <summary>
            This is used to get or set the link path to the content file (the project-relative location)
            </summary>
            <remarks>For linked items, this will be the location of the file within the project.  For files
            outside the project folder, this will not match the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.FullPath"/> property value.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.SortOrder">
            <summary>
            This is used to get or set the sort order for site map and content layout files
            </summary>
            <value>For other file types, this will always return zero</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ContentFile.ContentFileProvider">
            <summary>
            This is used to get or set a provider that can be used to obtain content files from a project or some
            other source.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.IContentFileProvider">
            <summary>
            This interface is implemented to provide content files from a help file builder project or some other
            source.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.IContentFileProvider.ContentFiles(SandcastleBuilder.Utils.BuildAction)">
            <summary>
            This returns an enumerable list of content files of the given type contained in the project or
            some other source.
            </summary>
            <param name="buildAction">The build action of the items to retrieve</param>
            <returns>An enumerable list of content files of the given type if any are found in the project or
            some other source.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.SubstitutionTagAttribute">
            <summary>
            This attribute is used to mark substitution tag replacement methods
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuilderException">
            <summary>
            This exception class is thrown by the application if it encounters an
            unrecoverable error.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor">
            <summary>
            Default constructor.
            </summary>
            <overloads>There are six overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String,System.String)">
            <summary>
            This constructor takes an error code and a message string
            </summary>
            <param name="code">The error code.  The suggested format is
            one to four letters to identify the component or process followed
            by four digits, zero padded to the left, with no spaces.</param>
            <param name="message">The exception message</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            This constructor takes an error code, a message string, and an
            inner exception.
            </summary>
            <param name="code">The error code.  The suggested format is
            one to four letters to identify the component or process followed
            by four digits, zero padded to the left, with no spaces.</param>
            <param name="message">The exception message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor for use with
            <see cref="T:System.Runtime.Serialization.ISerializable"/>.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context object</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuilderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This implements the <see cref="T:System.Runtime.Serialization.ISerializable"/>
            interface and adds the error code to the serialization information.
            </summary>
            <param name="info">The serialization info object</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuilderException.ErrorCode">
            <summary>
            Get the error code associated with the exception
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.BuildProcess">
            <summary>
            This class is used to handle all aspects of the build process in a separate thread
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.DetermineApiContentPlacement">
            <summary>
            This is used to determine the best placement for the API content based on the project settings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MergeConceptualAndAdditionalContentTocInfo">
            <summary>
            This is used to merge the conceptual content table of contents with any additional content table of
            contents information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CopySiteMapFiles(SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            This is used to copy site map files to the help format output folders including those for any child
            site map entries.
            </summary>
            <param name="site">The site entry containing the files to copy</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CombineIntermediateTocFiles">
            <summary>
            This combines the conceptual and API intermediate TOC files into one file ready for transformation to
            the help format-specific TOC file formats and, if necessary, determines the default topic.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CopyAdditionalContent">
            <summary>
            This is called to copy the additional content files to the help format content folders
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CopyStandardHelpContent">
            <summary>
            This is called to copy the standard content files (icons, scripts, style sheets, and other standard
            presentation style content) to the help output folders.
            </summary>
            <remarks>This creates the base folder <strong>Output\</strong> and one folder for each help file
            format.  It then copies the stock icon, script, and style sheet files from the defined presentation
            style help content folders.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.RecursiveCopy(System.String,System.String,System.Int32@)">
            <summary>
            This copies files from the specified source folder to the specified destination folder.  If any
            subfolders are found below the source folder and the wildcard is "*.*", the subfolders are also
            copied recursively.
            </summary>
            <param name="sourcePath">The source path from which to copy</param>
            <param name="destPath">The destination path to which to copy</param>
            <param name="fileCount">A reference to the file count variable</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.GenerateWebsite">
            <summary>
            This is used to generate the website helper files and copy the output to the project output folder
            ready for use as a website.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.EnsureOutputFoldersExist(System.String)">
            <summary>
            This is used to ensure that all output folders exist based on the selected help file format(s)
            </summary>
            <param name="subFolder">The subfolder name or null to ensure that the base folders exist.</param>
            <remarks>This creates the named folder under the help format specific folder beneath the
            <strong>.\Output</strong> folder.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.GenerateNamespaceSummaries">
            <summary>
            This is called to generate the namespace summary file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.AddNamespaceComments(System.Xml.XmlNode,System.String)">
            <summary>
            Add project or namespace comments
            </summary>
            <param name="member">The member node to modify.</param>
            <param name="summaryText">The summary text to add.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.GetReferencedNamespaces(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This is used to get an enumerable list of unique namespaces from the given reflection data file
            </summary>
            <param name="reflectionInfoFile">The reflection data file to search for namespaces</param>
            <param name="validNamespaces">An enumerable list of valid namespaces</param>
            <returns>An enumerable list of unique namespaces</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.LoadPlugIns">
            <summary>
            Load and initialize the plug-ins used by this project
            </summary>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if a requested plug-in is not found</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ExecutePlugIns(SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors)">
            <summary>
            Execute all plug-ins that need to execute in the given build step that have the given execution
            behavior.
            </summary>
            <param name="behavior">The execution behavior</param>
            <returns>True if at least one plug-in was executed or false if no plug-ins were executed.</returns>
            <remarks>Plug-ins will execute based on their execution priority.  Those with a higher priority value
            will execute before those with a lower value.  Plug-ins with identical priority values may execute
            in any order within their group.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ExecuteBeforeStepPlugIns">
            <summary>
            This can be used by plug-ins using the <see cref="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.InsteadOf"/> execution behavior
            to execute plug-ins that want to run before the plug-in executes its main processing.
            </summary>
            <remarks>This will only run once per step.  Any subsequent calls by other plug-ins will be ignored.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ExecuteAfterStepPlugIns">
            <summary>
            This can be used by plug-ins using the <see cref="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.InsteadOf"/> execution behavior
            to execute plug-ins that want to run after the plug-in has executed its main processing.
            </summary>
            <remarks>This will only run once per step.  Any subsequent calls by other plug-ins will be ignored.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.GenerateApiFilter">
            <summary>
            This is used to generate the API filter collection used by MRefBuilder to exclude items from the
            reflection information file.
            </summary>
            <remarks>Namespaces and members with an <c>&lt;exclude /&gt;</c> tag in their comments are removed
            using the ripping feature as it is more efficient than searching for and removing them from the
            reflection file after it has been generated especially on large projects.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MergeComponentConfigurations">
            <summary>
            This is used to merge the component configurations from the project with the <strong>sandcastle.config</strong>
            file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MergeConfigurations(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            This handles merging the build component configurations into the given configuration file
            </summary>
            <param name="config">The configuration file into which the configurations are merged</param>
            <param name="isConceptualConfig">True for a conceptual configuration file, false for a reference
            configuration file.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MergeComponent(System.String,Sandcastle.Core.BuildAssembler.BuildComponent.BuildComponentFactory,System.Xml.XmlNode,System.Xml.XmlNode,System.Boolean,System.Collections.Generic.Stack{System.String})">
            <summary>
            This handles merging of the custom component configurations into the configuration file including
            dependencies.
            </summary>
            <param name="id">The ID of the component to merge</param>
            <param name="factory">The build component factory</param>
            <param name="rootNode">The root container node</param>
            <param name="configNode">The configuration node to merge</param>
            <param name="isConceptualConfig">True if this is a conceptual content configuration file or false if
            it is a reference build configuration file.</param>
            <param name="mergeStack">A stack used to check for circular build component dependencies.  Pass null
            on the first non-recursive call.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="buildProject">The project to build</param>
            <overloads>There are two overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.#ctor(SandcastleBuilder.Utils.SandcastleProject,SandcastleBuilder.Utils.BuildEngine.PartialBuildType)">
            <summary>
            Constructor
            </summary>
            <param name="buildProject">The project to build</param>
            <param name="partialBuildType">The partial build type to perform</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.Build">
            <summary>
            Call this method to perform the build on the project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReportProgress(System.String,System.Object[])">
            <summary>
            This is used to report progress during the build process within the current step
            </summary>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the message text</param>
            <overloads>This method has two overloads.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReportError(SandcastleBuilder.Utils.BuildEngine.BuildStep,System.String,System.String,System.Object[])">
            <summary>
            This is used to report an error that will abort the build
            </summary>
            <param name="step">The current build step</param>
            <param name="errorCode">The error code</param>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the message text</param>
            <remarks>This just reports the error.  The caller must abort the build</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReportWarning(System.String,System.String,System.Object[])">
            <summary>
            This is used to report a warning that may need attention
            </summary>
            <param name="warningCode">The warning code</param>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the message text</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReportProgress(SandcastleBuilder.Utils.BuildEngine.BuildStep,System.String,System.Object[])">
            <summary>
            This is used to report progress during the build process and possibly update the current step
            </summary>
            <param name="step">The current build step</param>
            <param name="message">The message to report</param>
            <param name="args">A list of arguments to format into the message text</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.VerifySafePath(System.String,System.String,System.String)">
            <summary>
            Make sure the path isn't one the user would regret having nuked without warning
            </summary>
            <param name="propertyName">The name of the path property</param>
            <param name="propertyValue">It's current value</param>
            <param name="projectPath">The path to the current project</param>
            <remarks>Since most people don't read the help file and also ignore the warning in the property grid
            description pane, we'll take some steps to idiot-proof the dangerous path properties.  I'm starting
            to lose count of the number of people that point WorkingPath at the root of their C:\ drive and
            wonder why all their files disappear.
            
            <p/>Paths checked for include root references to hard drives and network shares, most common
            well-known folders, and the project's root folder.</remarks>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the path is one of the ones that probably should
            not be used.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.GatherBuildOutputFilenames">
            <summary>
            This is used to gather a list of files produced by the build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.FindTools">
            <summary>
            Find the Sandcastle tools and the HTML help compiler
            </summary>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if any of the tools cannot be found</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.FindOnFixedDrives(System.String)">
            <summary>
            Find a folder by searching the Program Files folders on all fixed drives.
            </summary>
            <param name="path">The path for which to search</param>
            <returns>The path if found or an empty string if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.FindSdkExecutable(System.String)">
            <summary>
            This is used to find the named executable in one of the Visual Studio SDK installation folders.
            </summary>
            <param name="exeName">The name of the executable to find</param>
            <returns>The path if found or an empty string if not found</returns>
            <remarks>The search looks in all "*Visual*SDK*" folders under the Program Files special folder on all
            fixed drives.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ValidateDocumentationSources">
            <summary>
            Validate the documentation source information and copy the files to the working folder
            </summary>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if any of the information is invalid</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CommentsFiles">
            <summary>
            This read-only property returns the XML comments files collection
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.LoadedPlugIns">
            <summary>
            This returns a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the currently loaded plug-ins
            </summary>
            <value>The key is the plug in ID.  The value is a reference to an <see cref="T:SandcastleBuilder.Utils.BuildComponent.IPlugIn"/> interface
            for the plug-in.</value>
            <remarks>This allows you to access other plug-ins to facilitate sharing of information between them</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ProgressReportProvider">
            <summary>
            This is used to get or set the progress report provider
            </summary>
            <remarks>If not set, no progress will be reported by the build</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CancellationToken">
            <summary>
            This is used to get or set the cancellation token for the build if running as a task
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CurrentBuildStep">
            <summary>
            This read-only property is used to get the current build step
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.BuildStart">
            <summary>
            This read-only property returns the build start time
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MSBuildExePath">
            <summary>
            This returns the path to MSBuild.exe
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.TemplateFolder">
            <summary>
            This returns the location of the help file builder template folder
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ProjectFolder">
            <summary>
            This returns the project folder name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ProjectFilename">
            <summary>
            This returns the project filename without the folder
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.OutputFolder">
            <summary>
            This returns the output folder where the log file and help file can be found after the build process
            has finished.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.WorkingFolder">
            <summary>
            This returns the name of the working files folder
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.Help1CompilerFolder">
            <summary>
            This returns the name of the HTML Help 1 compiler folder determined by the build process
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.FrameworkReflectionDataFolder">
            <summary>
            This returns the name of the folder that contains the reflection data for the selected framework
            platform and version (.NETFramework 4.5, .NETCore 4.5, Silverlight 5.0, etc.).
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.Language">
            <summary>
            This read-only property returns the language used for resource items, etc.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.LanguageFolder">
            <summary>
            This read-only property returns the resource item file language folder name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.PresentationStyle">
            <summary>
            This returns the presentation instance being used by the build process
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.PresentationStyleFolder">
            <summary>
            This returns the name of the main Sandcastle presentation style folder determined by the build
            process.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.PresentationStyleResourceItemsFolder">
            <summary>
            This returns the name of the presentation style resource items folder determined by the build
            process.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.HelpFormatOutputFolders">
            <summary>
            This read-only property returns a collection of the output folders specific to each help file format
            produced by the build.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.LogFilename">
            <summary>
            This returns the name of the log file used for saving the build progress messages
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReflectionInfoFilename">
            <summary>
            This returns the name of the reflection information file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReflectionDataSetDictionary">
            <summary>
            This read-only property returns the framework reflection data dictionary used by the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.FrameworkReflectionData">
            <summary>
            This read-only property returns the framework reflection data settings used by the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CurrentProject">
            <summary>
            This returns the current project being used for the build
            </summary>
            <remarks>Although there is nothing stopping it, project options should not be modified during a
            build.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.CurrentFormat">
            <summary>
            This returns the current help file format being generated
            </summary>
            <remarks>The <b>GenerateHelpFormatTableOfContents</b>, <b>GenerateHelpFileIndex</b>,
            <b>GenerateHelpProject</b>, and <b>CompilingHelpFile</b> steps will run once for each help file
            format selected.  This property allows a plug-in to determine which files it may need to work with
            during those steps or to skip processing if it is not relevant.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.PartialBuildType">
            <summary>
            This read-only property is used to get the partial build type
            </summary>
            <remarks>Partial builds occur when editing the namespace summaries, editing the API filter, and as
            part of some plug-ins that do not require all build options.  In a partial build, build steps after
            the point indicated by this property are not executed and the build stops.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ConceptualContent">
            <summary>
            This is used to get the conceptual content settings in effect for the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.Help1Files">
            <summary>
            This returns a list of the HTML Help 1 (CHM) files that were built
            </summary>
            <remarks>If the HTML Help 1 format was not built, this returns an empty collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.HelpViewerFiles">
            <summary>
            This returns a list of the MS Help Viewer (MSHC) files that were built
            </summary>
            <remarks>If the MS Help Viewer format was not built, this returns an empty collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.WebsiteFiles">
            <summary>
            This returns a list of the website files that were built
            </summary>
            <remarks>If the website format was not built, this returns an empty collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.OpenXmlFiles">
            <summary>
            This returns a list of the Open XML files that were built
            </summary>
            <remarks>If the Open XML format was not built, this returns an empty collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.MarkdownFiles">
            <summary>
            This returns a list of the Markdown files that were built
            </summary>
            <remarks>If the Markdown format was not built, this returns an empty collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.TaskRunner">
            <summary>
            This returns the task runner instance
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.SubstitutionTags">
            <summary>
            This returns the substitution tag replacement handler instance
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.SuppressApiFilter">
            <summary>
            This controls whether or not the API filter is suppressed
            </summary>
            <value>By default, it is not suppressed and the API filter will be applied.  The API Filter designer
            uses this to suppress the filter so that all members are obtained.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ApiTocParentId">
            <summary>
            This is used to get or set the table of contents parent for the API content
            </summary>
            <remarks>If not set, <see cref="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.RootContentContainerId"/> is used if it is set.  If it is not,
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.TocParentId"/> is used.  If this property is set, the value should be
            the ID of a topic in the project's conceptual content.  The topic must appear in a content layout
            file and must have its <c>Visible</c> property set to True in the layout file.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ApiTocOrder">
            <summary>
            This is used to get or set the sort order for API content so that it appears within its parent in the
            correct position.
            </summary>
            <remarks>The default is -1 to let the build engine determine the best value to use based on the other
            project properties.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.RootContentContainerId">
            <summary>
            This is used to get or set the topic ID to use for the root content container node
            </summary>
            <remarks>If not set, all content will appear at the root level in the
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.TocParentId"/>.  If set, the value should be the ID of a topic in the
            project's conceptual content.  The topic must appear in a content layout file and must have its
            <c>Visible</c> property set to False in the layout file.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.DefaultTopicFile">
            <summary>
            This returns the filename of the default topic as determined by the build engine
            </summary>
            <remarks>The path is relative to the root of the output folder (i.e. html/DefaultTopic.htm)</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ResolvedHelpTitle">
            <summary>
            This returns the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.HelpTitle"/> project property value with all
            substitution tags it contains, if any, resolved to actual values.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ResolvedHtmlHelpName">
            <summary>
            This returns the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelpName"/> project property value with all
            substitution tags it contains, if any, resolved to actual values.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ReferencedNamespaces">
            <summary>
            This read-only property returns a hash set used to contain a list of namespaces referenced by the
            project reflection data files, project XML comments files, and base framework XML comments files.
            </summary>
            <value>These namespaces are used to limit what the Resolve Reference Links component has to index</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.ComponentContainer">
            <summary>
            This read-only property returns the MEF component container
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProcess.SyntaxGenerators">
            <summary>
            This read-only property returns the syntax generator metadata
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs">
            <summary>
            This is a custom event arguments class use to report build progress
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildStep,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="buildStep">The current build step</param>
            <param name="stepChanged">True if the build step has changed, false if not</param>
            <param name="message">The message to report</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.BuildStep">
            <summary>
            This read-only property is used to get the current build step of the build process
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.StepChanged">
            <summary>
            This read-only property is used to get whether or not the build step has changed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.HasCompleted">
            <summary>
            This read-only property is used to get whether or not the build has completed
            </summary>
            <remarks>The build may have succeeded, failed, or been canceled.  See <see cref="P:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.BuildStep"/> for the
            final disposition.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs.Message">
            <summary>
            This read-only property is used to get the message associated with the progress report
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.BuildStep">
            <summary>
            This public enumerated type defines the build steps used when reporting progress during a build.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.None">
            <summary>The build has not yet started.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.Initializing">
            <summary>Initializing to prepare for build.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.ClearWorkFolder">
            <summary>The working folder is about to be created or cleared.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.ValidatingDocumentationSources">
            <summary>The documentation source information is being validated and copied to the build folder.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateSharedContent">
            <summary>The shared content files are being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateApiFilter">
            <summary>Generate the API filter for MRefBuilder</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateReflectionInfo">
            <summary>The reflection information is being generated by <b>MRefBuilder</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.TransformReflectionInfo">
            <summary>The reflection information is being transformed by <b>XslTransform</b> based on the
            presentation style's document model and the topic manifest is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateNamespaceSummaries">
            <summary>Namespace summary information is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateInheritedDocumentation">
            <summary>All <c>&lt;inheritDoc /&gt;</c> tags are being expanded.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CopyConceptualContent">
            <summary>The conceptual content files are being copied to the working and output folders.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CreateConceptualTopicConfigs">
            <summary>The conceptual content topic configuration files are being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CopyAdditionalContent">
            <summary>The additional content files are being copied to the help output folder.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.MergeTablesOfContents">
            <summary>The conceptual and additional content tables of contents are being merged.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateIntermediateTableOfContents">
            <summary>The intermediate table of contents is being generated by <b>XslTransform</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CreateBuildAssemblerConfigs">
            <summary>The <b>sandcastle.config</b> <b>Conceptual.config</b> <b>BuildAssembler</b> files are
            being created.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.MergeCustomConfigs">
            <summary>Custom build component configurations are being merged into the <b>sandcastle.config</b>
            file.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.BuildConceptualTopics">
            <summary>Conceptual help file topics are being generated by <b>BuildAssembler</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.BuildReferenceTopics">
            <summary>API reference help file topics are being generated by <b>BuildAssembler</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CombiningIntermediateTocFiles">
            <summary>The intermediate table of content files are being merged into a single file.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.ExtractingHtmlInfo">
            <summary>Title and keyword index information is being extracted for the HTML Help 1 TOC and index
            and/or website TOC.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CopyStandardHelpContent">
            <summary>The standard help file content (art, scripts, styles, and other standard presentation style
            content) is being copied to the help output folder.</summary>
            <remarks>This must occur after <c>ExtracingHtmlInfo</c> as the replacement tags in the web content
            may rely on the table of contents and index files generated in that step.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateHelpFormatTableOfContents">
            <summary>The format-specific table of contents is being generated by <b>XslTransform</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateHelpFileIndex">
            <summary>The help file index is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateHelpProject">
            <summary>The help project file is being generated.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CompilingHelpFile">
            <summary>The help file project is being compiled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.GenerateFullTextIndex">
            <summary>Generate full-text index for ASP.NET website search.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CopyingWebsiteFiles">
            <summary>The website files are being copied to the output path.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.CleanIntermediates">
            <summary>The temporary help project files are being removed.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.Completed">
            <summary>The build has completed successfully.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.Canceled">
            <summary>The build was canceled by user request.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildEngine.BuildStep.Failed">
            <summary>The build failed with an unexpected error.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.ComponentConfigurationDictionary">
            <summary>
            This dictionary class is used to hold the third party build component configuration properties for a
            project such as the Code Block Component.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ComponentConfigurationDictionary.FromXml(System.String)">
            <summary>
            This is used to load existing component configuration items from the project file
            </summary>
            <param name="components">The component items</param>
            <remarks>The information is stored as an XML fragment</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ComponentConfigurationDictionary.ToXml">
            <summary>
            This is used to write the component configuration info to an XML fragment ready for storing in the
            project file.
            </summary>
            <returns>The XML fragment containing the component configuration info.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ComponentConfigurationDictionary.Add(System.String,System.Boolean,System.String)">
            <summary>
            Add a new item to the dictionary
            </summary>
            <param name="id">The component ID</param>
            <param name="enabled">True for enabled, false for disabled</param>
            <param name="config">The component configuration</param>
            <returns>The <see cref="T:SandcastleBuilder.Utils.BuildComponent.BuildComponentConfiguration"/> added to the project.  If the ID already
            exists in the collection, the existing item is returned.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.CodeEntityReference">
            <summary>
            This represents a conceptual content CodeEntityReference that can be used to insert a common item, value,
            or construct into topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.CodeEntityReference.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">The reference ID</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.CodeEntityReference.ToCodeEntityReference">
            <summary>
            Convert the entity to its <c>&lt;codeEntityReference&gt;</c> element form
            </summary>
            <returns>The entity in its <c>&lt;codeEntityReference&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.CodeEntityReference.ToSee">
            <summary>
            Convert the entity to its <c>&lt;see&gt;</c> element form
            </summary>
            <returns>The token in its <c>&lt;see&gt;</c> element form</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.CodeEntityReference.Id">
            <summary>
            This is used to get or set the CodeEntityReference name
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.CodeReference">
            <summary>
            This represents a conceptual content CodeReference that can be used to insert a common item, value, or
            construct into topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.CodeReference.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="id">The reference ID</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.CodeReference.ToCodeReference">
            <summary>
            Convert the token to its <c>&lt;codeReference&gt;</c> element form
            </summary>
            <returns>The token in its <c>&lt;codeReference&gt;</c> element form</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.CodeReference.Id">
            <summary>
            This is used to get or set the CodeReference name
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings">
            <summary>
            This class is used to hold the conceptual content settings for a project during a build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="project">The project from which to load the settings</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CopyContentFiles(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            This is used to copy the additional content token, image, and topic files to the build folder
            </summary>
            <param name="builder">The build process</param>
            <remarks>This will copy the code snippet file if specified, save token information to a shared
            content file called <b>_Tokens_.xml</b> in the build process's working folder, copy the image files
            to the <b>.\media</b> folder in the build process's working folder, save the media map to a file
            called <b>_MediaContent_.xml</b> in the build process's working folder, and save the topic files to
            the <b>.\ddueXml</b> folder in the build process's working folder.  The topic files will have their
            content wrapped in a <c>&lt;topic&gt;</c> tag if needed and will be named using their
            <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Id"/> value.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.SaveImageSharedContent(System.String,System.String,SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Write the image reference collection to a map file ready for use by <strong>BuildAssembler</strong>
            </summary>
            <param name="filename">The file to which the image reference collection is saved</param>
            <param name="imagePath">The path to which the image files should be copied</param>
            <param name="builder">The build process</param>
            <remarks>Images with their <see cref="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.CopyToMedia"/> property set to true are copied
            to the media folder immediately.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CreateConfigurationFiles(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            This is used to create the conceptual content build configuration files
            </summary>
            <param name="builder">The build process</param>
            <remarks>This will create the companion files used to resolve conceptual links and the
            <b>_ContentMetadata_.xml</b> and <b>ConceptualManifest.xml</b> configuration files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CreateCompanionFiles(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            This is used to create the companion files used to resolve conceptual links
            </summary>
            <param name="builder">The build process</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CreateContentMetadata(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Create the content metadata file
            </summary>
            <param name="builder">The build process</param>
            <remarks>The content metadata file contains metadata information for each topic such as its title,
            table of contents title, help attributes, and index keywords.  Help attributes are a combination
            of the project-level help attributes and any parsed from the topic file.  Any replacement tags in
            the token values will be replaced with the appropriate project values.
            
            <p/>A true MAML version of this file contains several extra attributes.  Since Sandcastle doesn't use
            them, I'm not going to waste time adding them.  The only stuff written is what is required by
            Sandcastle.  In addition, I'm putting the <c>title</c> and <c>PBM_FileVersion</c> item elements in
            here rather than use the separate companion files.  They all end up in the metadata section of the
            topic being built so this saves having two extra components in the configuration that do the same
            thing with different files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CreateConceptualManifest(SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Create the content metadata file
            </summary>
            <param name="builder">The build process</param>
            <remarks>The content metadata file contains metadata information for each topic such as its title,
            table of contents title, help attributes, and index keywords.  Help attributes are a combination of
            the project-level help attributes and any parsed from the topic file.  Any replacement tags in the
            token values will be replaced with the appropriate project values.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.ImageFiles">
            <summary>
            This is used to get the conceptual content image files
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.CodeSnippetFiles">
            <summary>
            This is used to get the conceptual content code snippet files
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.TokenFiles">
            <summary>
            This is used to get the conceptual content token files
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.ContentLayoutFiles">
            <summary>
            This is used to get the conceptual content layout files
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ConceptualContentSettings.Topics">
            <summary>
            This is used to get a collection of the conceptual content topics
            </summary>
            <remarks>Each item in the collection represents one content layout file from the project</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.DocumentType">
            <summary>
            This public enumerated type defines the conceptual document types
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.None">
            <summary>Unknown document type or empty container node</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.NotFound">
            <summary>File not found</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.Invalid">
            <summary>Invalid document (i.e. bad format, parsing errors)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperConceptualDocument">
            <summary>Conceptual document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperErrorMessageDocument">
            <summary>Error Message document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperGlossaryDocument">
            <summary>Glossary document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperHowToDocument">
            <summary>How To document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperOrientationDocument">
            <summary>Orientation document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.CodeEntityDocument">
            <summary>Reference List document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperReferenceWithSyntaxDocument">
            <summary>Reference With Syntax document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperReferenceWithoutSyntaxDocument">
            <summary>Reference Without Syntax document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSampleDocument">
            <summary>Sample Document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSDKTechnologyOverviewArchitectureDocument">
            <summary>SDK Technology Overview Architecture document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSDKTechnologyOverviewCodeDirectoryDocument">
            <summary>SDK Technology Overview Code Directory document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSDKTechnologyOverviewOrientationDocument">
            <summary>SDK Technology Overview Orientation document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSDKTechnologyOverviewScenariosDocument">
            <summary>SDK Technology Overview Scenarios document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperSDKTechnologyOverviewTechnologySummaryDocument">
            <summary>SDK Technology Overview Technology Summary document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperTroubleshootingDocument">
            <summary>Troubleshooting document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperUIReferenceDocument">
            <summary>User Interface Reference document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperWalkthroughDocument">
            <summary>Walkthrough document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperWhitePaperDocument">
            <summary>Whitepaper document</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.DocumentType.DeveloperXmlReference">
            <summary>XML Reference document</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ImageReference">
            <summary>
            This represents a conceptual content image that can be used to insert a reference to an image in a topic
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ImageReference.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fullPath">The full path to the image file</param>
            <param name="id">The ID of the image</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ImageReference.ToMediaLink">
            <summary>
            Convert the image reference to a <c>&lt;mediaLink&gt;</c> element
            </summary>
            <returns>The image in its <c>&lt;mediaLink&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ImageReference.ToMediaLinkInline">
            <summary>
            Convert the image reference to a <c>&lt;mediaLinkInline&gt;</c> element
            </summary>
            <returns>The image in its <c>&lt;mediaLinkInline&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ImageReference.ToExternalLink">
            <summary>
            Convert the image reference to an <c>&lt;externalLink&gt;</c> element
            </summary>
            <returns>The image in its <c>&lt;externalLink&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ImageReference.ToImageLink">
            <summary>
            Convert the image reference to an <c>&lt;img&gt;</c> element
            </summary>
            <returns>The image in its <c>&lt;img&gt;</c> element form</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.Filename">
            <summary>
            This read-only property is used to get the image filename without the path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.FullPath">
            <summary>
            This is used to get or set the full path to the image file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.Id">
            <summary>
            This is used to get or set the unique ID of the image
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.CopyToMedia">
            <summary>
            This is used to get or set whether or not to copy the image to the
            <strong>.\Output\[HelpFormat]\media</strong> folder if it is not referenced in a media link.
            </summary>
            <value>The default is false and the image will not be copied unless it is referenced in a media link.
            If set to true, the image will be copied even if it is not referenced.  This is useful for forcing
            the copying of images referenced in external links which are not handled by the art reference build
            component.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.AlternateText">
            <summary>
            This is used to get or set the optional alternate text for the image
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.DisplayTitle">
            <summary>
            This read-only property is used to get a title for display (i.e. in the designer)
            </summary>
            <value>If there is <see cref="P:SandcastleBuilder.Utils.ConceptualContent.ImageReference.AlternateText"/> specified, it is returned along with the filename
            and the image ID in parentheses.  If not, the filename is returned along with the image ID in
            parentheses.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.Token">
            <summary>
            This represents a conceptual content token that can be used to insert a common item, value, or construct
            into topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Token.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>The token name defaults to a GUID</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Token.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">The token name</param>
            <param name="value">The token value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Token.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ConceptualContent.Token.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Token.ToToken">
            <summary>
            Convert the token to its <c>&lt;token&gt;</c> element form
            </summary>
            <returns>The token in its <c>&lt;token&gt;</c> element form</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Token.TokenName">
            <summary>
            This is used to get or set the token name
            </summary>
            <value>If the value is null or empty, a new GUID is assigned as the name</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Token.TokenValue">
            <summary>
            This is used to get or set the token value
            </summary>
            <value>The value can contain help file builder replacement tags.  These will be replaced at build
            time with the appropriate project value.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Token.IsSelected">
            <summary>
            This is used to get or set whether or not the token is selected
            </summary>
            <remarks>Used by the editor for binding in the list box</remarks>
        </member>
        <member name="E:SandcastleBuilder.Utils.ConceptualContent.Token.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.TokenCollection">
            <summary>
            This collection class is used to hold the conceptual content tokens
            for an associated token file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The token file associated with the collection.</param>
            <remarks>Tokens are not loaded until the <see cref="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.Load"/> method
            is called.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.Sort">
            <summary>
            This is used to sort the collection
            </summary>
            <remarks>Values are sorted by token name and value.  Comparisons
            are case-sensitive.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.Find(System.Predicate{SandcastleBuilder.Utils.ConceptualContent.Token})">
            <summary>
            This is used to find all tokens that match the specified predicate
            </summary>
            <param name="match">The match predicate</param>
            <returns>An enumerable list of all matches</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.Load">
            <summary>
            Load the collection from the related file
            </summary>
            <remarks>This will be done automatically at constructor.  This can
            be called to reload the collection if needed.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.Save">
            <summary>
            Save the token collection to its related file ready for use by
            <b>BuildAssembler</b>.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TokenCollection.TokenFilePath">
            <summary>
            This is used to get or set the token file path
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.Topic">
            <summary>
            This represents a conceptual content topic
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ConceptualContent.Topic.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.childList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Mark the project as dirty if the contained lists change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>This may not be the best way to handle this</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.ReadXml(System.Xml.XmlReader)">
            <summary>
            This is used to load the topic information from the project file
            </summary>
            <param name="xr">The XML text reader from which the information is loaded</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.WriteXml(System.Xml.XmlWriter)">
            <summary>
            This is used to save the topic information to the project file
            </summary>
            <param name="xw">The XML text writer to which the information is written</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.WriteCompanionFile(System.String,SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            This is used to create the companion file used by the build component that resolves conceptual links
            </summary>
            <param name="folder">The folder in which to place the file</param>
            <param name="builder">The build process</param>
            <remarks>The file will be named using the ID and a ".xml" extension</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.WriteMetadata(System.Xml.XmlWriter,SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Write out the topic metadata
            </summary>
            <param name="writer">The writer to which the metadata is written</param>
            <param name="builder">The build process</param>
            <remarks>This will recursively write out metadata for sub-topics
            as well.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.WriteManifest(System.Xml.XmlWriter,SandcastleBuilder.Utils.BuildEngine.BuildProcess)">
            <summary>
            Write out the <strong>BuildAssembler</strong> manifest entry
            </summary>
            <param name="writer">The XML writer to which the entry is written</param>
            <param name="builder">The build process</param>
            <remarks>This will recursively write out entries for sub-topics as well</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.ToLink(System.String)">
            <summary>
            Convert the topic to its <c>&lt;link&gt;</c> element form
            </summary>
            <param name="innerText">Optional inner text</param>
            <returns>The topic in its <c>&lt;link&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.Topic.ToAnchor(System.String)">
            <summary>
            Convert the topic to its <c>&lt;a&gt;</c> element form
            </summary>
            <param name="innerText">Optional inner text</param>
            <returns>The topic in its <c>&lt;a&gt;</c> element form</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Parent">
            <summary>
            This is used to track the topic's parent collection
            </summary>
            <remarks>This is used by the designer to move items around within the collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.TopicFile">
            <summary>
            This is used to get or set the topic file information related to the topic
            </summary>
            <value>If there is no topic file, this topic serves as a container node for its sub-topics and no
            content will be displayed for it when selected in the help file's table of contents.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.NoTopicFile">
            <summary>
            This read-only property returns true if there is no associated topic file by choice rather than it
            not being found.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.ContentId">
            <summary>
            This is used to get the content ID from the content layout file
            </summary>
            <remarks>This should match an ID from a project file.  If not, it will serve as an container node
            with no associated topic.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Id">
            <summary>
            This is used to get the unique ID of the topic
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.RevisionNumber">
            <summary>
            This is used to get the topic's revision number
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.TopicFilename">
            <summary>
            This is used to get the filename of the related project file (if any)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.DocumentType">
            <summary>
            This read-only property is used to get the document type
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Title">
            <summary>
            This is used to get the required title that should be used for the topic
            </summary>
            <value>If not set, the topic filename without a path or extension is used</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.TocTitle">
            <summary>
            This is used to get or set the topic's optional table of contents title
            </summary>
            <value>This can be used to provide a different topic title in the table of contents.  If not set, it
            will be set to the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Title"/> value.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.LinkText">
            <summary>
            This is used to get or set the topic's optional link text
            </summary>
            <value>This can be used to provide different text that is used in links that refer to the topic.  If
            not set, it will be set to the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Title"/> value.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Visible">
            <summary>
            This is used to get or set whether or not the topic is visible in the table of contents
            </summary>
            <value>If set to false, the item will still be added to the help file but to be accessible, a link to
            it must appear in one of the other topics.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Keywords">
            <summary>
            This is used to get the index keywords that will be added to the MAML topic
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.DisplayTitle">
            <summary>
            This read-only property is used to get a title for display (i.e. in the designer)
            </summary>
            <value>If there is a <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.TocTitle"/> specified, it is used.  If not, the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Title"/>
            value is used.  If it does not contain a value, the filename without the path and extension is used.
            If the file has not been specified, does not exist, the document type is not recognized, or it is
            invalid (i.e. badly formed), it returns an appropriate message describing the problem.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Subtopics">
            <summary>
            This is used to get the sub-topics beneath this topic
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.IsDefaultTopic">
            <summary>
            This is used to when merging TOC files to determine the default topic
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.ApiParentMode">
            <summary>
            This is used to specify how API content is parented to this topic or the topic's parent
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.IsMSHVRootContentContainer">
            <summary>
            This is used to get or set whether or not the topic will server as the root content container in MS
            Help Viewer output
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.IsSelected">
            <summary>
            This is used to get or set whether or not the entity is selected
            </summary>
            <remarks>Used by the editor for binding in the tree view.  The value is serialized when saved so that
            its state is remembered when reloaded.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.IsExpanded">
            <summary>
            This is used to get or set whether or not the entity is expanded
            </summary>
            <remarks>Used by the editor for binding in the tree view.  The value is serialized when saved so that
            its state is remembered when reloaded.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.Topic.ToolTip">
            <summary>
            This returns a description of the topic that can be used as a tool tip
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.ConceptualContent.Topic.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.TopicCollection">
            <summary>
            This collection class is used to hold the conceptual content topics for a project
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ITableOfContents">
            <summary>
            This interface is used to interact with project files that can generate table of contents entries
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ITableOfContents.GenerateTableOfContents(SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection,System.Boolean)">
            <summary>
            Generate the table of contents for the conceptual topics
            </summary>
            <param name="toc">The table of contents collection</param>
            <param name="includeInvisibleItems">True to include items marked invisible (useful for previewing)
            or false to exclude them.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ITableOfContents.ContentLayoutFile">
            <summary>
            This is used to get the content layout file metadata
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.#ctor(SandcastleBuilder.Utils.ConceptualContent.ContentFile)">
            <summary>
            Constructor
            </summary>
            <param name="contentLayoutFile">The content layout file associated with the collection</param>
            <remarks>Topics are not loaded until the <see cref="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Load"/> method is called.  If the <c>file</c>
            parameter is null, this is assumed to be a child topic collection.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Sort">
            <summary>
            This is used to sort the collection
            </summary>
            <remarks>Values are sorted by display title.  Comparisons are case-sensitive.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.All">
            <summary>
            This is used to enumerate all topics recursively
            </summary>
            <returns>An enumerable list of all topics and sub-topics</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Find(System.Predicate{SandcastleBuilder.Utils.ConceptualContent.Topic},System.Boolean)">
            <summary>
            This is used to find all topics and sub-topics that match the specified predicate recursively
            </summary>
            <param name="match">The match predicate</param>
            <param name="expandParentIfFound">True to expand the parent if a child node matches or false to leave
            it as is.  Expanding the node ensures it is visible in the bound tree view.</param>
            <returns>An enumerable list of all matches</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Load">
            <summary>
            Load the collection from the related file
            </summary>
            <remarks>This will be done automatically at constructor.  This can be called to reload the collection
            if needed.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.MatchProjectFilesToTopics">
            <summary>
            This gets all possible content files from the project and attempts to match them to the topics in the
            collection by ID.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Save">
            <summary>
            Save the topic collection to the related content layout file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.ChildListChanged(SandcastleBuilder.Utils.ConceptualContent.Topic,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is used by contained items to notify the parent that a child list changed and thus the
            collection should be marked as dirty.
            </summary>
            <param name="t">The topic that changed</param>
            <param name="e">The list change event arguments from the child collection</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.SetTopic(SandcastleBuilder.Utils.ConceptualContent.TopicFile)">
            <summary>
            Set the topic file in any entry that has a matching ID
            </summary>
            <param name="topicFile">The topic file</param>
            <remarks>The IDs should be unique across all entries but, if a duplicate exists, this will help find
            it as we'll get a more descriptive error later in the build.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.GenerateConceptualTopics(System.String,SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This creates copies of the conceptual topic files in the build process's working folder
            </summary>
            <param name="folder">The folder in which to place the topic files</param>
            <param name="builder">The build process</param>
            <param name="validNamespaces">An enumerable list of valid framework namespaces</param>
            <remarks>Each topic file will be named using its <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Id"/>.  If necessary, its content
            will be wrapped in a <c>&lt;topic&gt;</c> element.  Sub-topics are written out recursively.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.AddTopicsFromFolder(System.String,System.String,SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Add all topics from the specified folder recursively to the collection and to the given project file
            </summary>
            <param name="folder">The folder from which to get the files</param>
            <param name="basePath">The base path to remove from files copied from another folder into the project
            folder.  On the first call, this should match the <paramref name="folder"/> value.</param>
            <param name="project">The project to which the files are added</param>
            <remarks>Only actual conceptual content topic files are added.  They must have a ".aml" extension and
            must be one of the valid <see cref="T:SandcastleBuilder.Utils.DocumentType">document types</see>.  Folders will be added as
            sub-topics recursively.  If a file with the same name as the folder exists, it will be associated
            with the container node.  If no such file exists, an empty container node is created.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.InsertItem(System.Int32,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            This is overridden to set the inserted item's parent to this collection
            </summary>
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.SetItem(System.Int32,SandcastleBuilder.Utils.ConceptualContent.Topic)">
            <summary>
            This is overridden to set the inserted item's parent to this collection
            </summary>
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.RemoveItem(System.Int32)">
            <summary>
            This is overridden to clear the parent on the removed item
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.GenerateTableOfContents(SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.DefaultTopic">
            <summary>
            This is used to get the default topic
            </summary>
            <value>It returns the default topic or null if one is not set</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.ApiContentInsertionPoint">
            <summary>
            This is used to get the topic at which the API table of contents is to be inserted or parented
            </summary>
            <value>This will return null if no parent location has been set</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.MSHVRootContentContainer">
            <summary>
            This is used to get the topic that will serve as the root content container in MS Help Viewer output
            </summary>
            <value>This will return null if one is not defined</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.Item(System.String)">
            <summary>
            This can be used to get a topic by its unique ID (case-insensitive)
            </summary>
            <param name="id">The ID of the item to get</param>
            <value>Returns the topic with the specified <see cref="P:SandcastleBuilder.Utils.ConceptualContent.Topic.Id"/> or null if not found</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicCollection.ContentLayoutFile">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.ContentPlacement">
            <summary>
            This public enumerated type defines the placement of the additional
            content items in the table of contents if any are defined.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ContentPlacement.AboveNamespaces">
            <summary>Additional content appears above the namespaces</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ContentPlacement.BelowNamespaces">
            <summary>Additional content appears below the namespaces</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.CustomPropertyGrid">
            <summary>
            This is a custom property grid that allows you to set the initial
            width of the property name pane and has a context menu that allows
            you to hide the description pane and reset the selected property
            value.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True to release both managed and unmanaged
            resources, false to just release unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.OnCreateControl">
            <summary>
            This is overridden to reset the pane width to the user-preferred
            width after creating the control.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.ctxPropGrid_Opening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            This updates the context menu based on the current property grid
            state before it is displayed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.miReset_OnClick(System.Object,System.EventArgs)">
            <summary>
            Reset the value of the current property
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.miShowDescription_OnClick(System.Object,System.EventArgs)">
            <summary>
            Show or hide the property description pane
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.miCopyLabel_OnClick(System.Object,System.EventArgs)">
            <summary>
            Copy the current property's name to the clipboard
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.CustomPropertyGrid.PropertyNamePaneWidth">
            <summary>
            This is used to set or get the width of the property name pane
            </summary>
            <remarks>Reflection is used to modify the pane width</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.DividerGroupBox">
            <summary>
            This is a simple derived group box control that draws the label text
            followed by a dividing line to the right of the text but no other
            surrounding border.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerGroupBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerGroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This is overridden to draw the text and the dividing line
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.FilePathUserControl">
            <summary>
            This user control is used to select a file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.OnPersistablePathChanged(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.Controls.FilePathUserControl.PersistablePathChanged"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            This is overridden to handle laying out the control elements
            </summary>
            <param name="levent">The event parameters</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.filePath_PersistablePathChanged(System.Object,System.EventArgs)">
            <summary>
            Handle changes to the path object
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.btnSelectFile_Click(System.Object,System.EventArgs)">
            <summary>
            Prompt the user to select a file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.txtFile_Leave(System.Object,System.EventArgs)">
            <summary>
            Update the file path when leaving the text box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.chkFixedPath_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Changed the fixed path setting on the file path
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Controls.FilePathUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FilePathUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.UseFileOpenDialog">
            <summary>
            This is used to get or set the whether to use a File Open dialog
            </summary>
            <value>If false, a Save As dialog is used instead</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.Title">
            <summary>
            This is used to get or set the title of the file dialog
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.Filter">
            <summary>
            This is used to get or set the filter for the file dialog
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.ShowFixedPathOption">
            <summary>
            This is used to get or set whether or not to show the fixed path checkbox and expanded path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.DefaultFolder">
            <summary>
            This is used to get or set the default folder from which to start browsing
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.IsFixedPath">
            <summary>
            This is used to get or set whether or not to use a fixed path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.PersistablePath">
            <summary>
            This is used to get or set the path in string form
            </summary>
            <remarks>This is useful for data binding</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FilePathUserControl.File">
            <summary>
            This is used to get or set the file as a <see cref="T:SandcastleBuilder.Utils.FilePath"/> object
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.Controls.FilePathUserControl.PersistablePathChanged">
            <summary>
            This event is raised when the file path changes
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.FolderPathUserControl">
            <summary>
            This user control is used to select a folder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.OnPersistablePathChanged(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.Controls.FolderPathUserControl.PersistablePathChanged"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            This is overridden to handle laying out the control elements
            </summary>
            <param name="levent">The event parameters</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.folderPath_PersistablePathChanged(System.Object,System.EventArgs)">
            <summary>
            Handle changes to the path object
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.btnSelectFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Prompt the user to select a folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.txtFolder_Leave(System.Object,System.EventArgs)">
            <summary>
            Update the folder path when leaving the text box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.chkFixedPath_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Changed the fixed path setting on the folder path
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Controls.FolderPathUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.FolderPathUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.Title">
            <summary>
            This is used to get or set the title of the folder dialog
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.ShowNewFolderButton">
            <summary>
            This is used to get or set whether or not to show the New Folder button
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.ShowFixedPathOption">
            <summary>
            This is used to get or set whether or not to show the fixed path checkbox and expanded path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.RootFolder">
            <summary>
            This is used to get or set the root folder used to limit browsing
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.DefaultFolder">
            <summary>
            This is used to get or set the default folder from which to start browsing
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.IsFixedPath">
            <summary>
            This is used to get or set whether or not to use a fixed path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.PersistablePath">
            <summary>
            This is used to get or set the path in string form
            </summary>
            <remarks>This is useful for data binding</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.FolderPathUserControl.Folder">
            <summary>
            This is used to get or set the folder as a <see cref="T:SandcastleBuilder.Utils.FolderPath"/> object
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.Controls.FolderPathUserControl.PersistablePathChanged">
            <summary>
            This event is raised when the folder path changes
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg">
            <summary>
            This form is used to edit the API filter collection
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.#ctor(SandcastleBuilder.Utils.ApiFilterCollection)">
            <summary>
            Constructor
            </summary>
            <param name="filter">The item collection to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.buildProcess_ReportProgress(SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is used to report build progress
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ConvertApiFilter(SandcastleBuilder.Utils.ApiFilterCollection)">
            <summary>
            This is used to convert the API filter from the build into a
            dictionary so that it is easier to look up the entries.
            </summary>
            <param name="filter">The filter collection to search for project
            level exclusions.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.LoadNamespaces">
            <summary>
            This is used to load the reflection information file and to load
            the root namespace nodes into the tree view.
            </summary>
            <remarks>The namespace nodes and type nodes are loaded on demand
            to reduce the time needed to create the tree view and to conserve
            some memory for extremely large builds.
            <p/>Documented APIs are loaded into the first root node.  Inherited
            APIs are loaded into the second node.  By splitting the inherited
            stuff out, we can optimize the API filter and allow the user to get
            rid of unwanted inherited members with a single selection.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddTypes(System.Windows.Forms.TreeNode)">
            <summary>
            Add all types found in the specified namespace node to the
            specified tree node.
            </summary>
            <param name="parentNode">The parent tree node to which they are
            added.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddBaseTypes(System.Windows.Forms.TreeNode)">
            <summary>
            Add all base types found in the specified namespace node to the
            specified tree node.
            </summary>
            <param name="parentNode">The parent tree node to which they are
            added.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddMembers(System.Windows.Forms.TreeNode)">
            <summary>
            Add all members found in the specified type node to the specified
            tree node.
            </summary>
            <param name="parentNode">The parent tree node to which they are
            added.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddBaseMembers(System.Windows.Forms.TreeNode)">
            <summary>
            Add all inherited members found in the specified type node to the
            specified tree node.
            </summary>
            <param name="parentNode">The parent tree node to which they are
            added.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.OptimizeCheckedState(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Examine the nodes and optimize the state of the filter based on
            various conditions.
            </summary>
            <param name="currentNode">The node in which the checked state
            changed.</param>
            <param name="setChildren">Set the checked state of all child
            nodes to the parent node's state if true</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.SearchForMember(System.String,System.Windows.Forms.TreeNode)">
            <summary>
            Search the children of the specified tree node looking for the
            given API member name.
            </summary>
            <param name="memberName">The member name for which to search</param>
            <param name="root">The root node to search</param>
            <returns>The tree node matching the given ID or null if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddNamespaceFilter(System.Windows.Forms.TreeNode)">
            <summary>
            This is used to add namespace filters to the API filter
            </summary>
            <param name="root">The tree node from which to start</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AddChildFilter(SandcastleBuilder.Utils.ApiFilter,System.Windows.Forms.TreeNodeCollection,System.Boolean)">
            <summary>
            This will add child filter entries for each tree node where the
            checked state matches the given state.
            </summary>
            <param name="filter">The filter to which the entries are added</param>
            <param name="nodes">The tree nodes to scan</param>
            <param name="state">The check state to match</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.AllChildrenMatchParentCheckState(System.Windows.Forms.TreeNodeCollection,System.Boolean)">
            <summary>
            This is used to see if the given node and all of its children match
            the specified state.
            </summary>
            <param name="nodes">The nodes to check</param>
            <param name="state">The state to match</param>
            <returns>True if all children's checked states match the parent
            node's checked state, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiFilterEditorDlg_Load(System.Object,System.EventArgs)">
            <summary>
            This is used to start the background build process from which we will get the information to load the
            tree view.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiFilterEditorDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Shut down the build process thread and clean up on exit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Refresh the collection and close the form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnReset_Click(System.Object,System.EventArgs)">
            <summary>
            Reset the API filter by clearing its content and closing the form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.tvApiList_BeforeExpand(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            This is used to load child tree nodes on demand which speeds up the initial form load for extremely
            large projects.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.tvApiList_BeforeCheck(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Ignore attempts to uncheck the root nodes, namespace and type nodes in the inherited APIs, and nodes
            that are excluded via other project settings (i.e. namespace comments and <c>&lt;exclude/&gt;</c>
            tags.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>Unchecking a root node would get rid of everything.  Unchecking a namespace or type for an
            inherited API may inadvertently get rid of something that is needed.  Project excludes will be
            removed regardless of the API filter setting so must remain excluded.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.tvApiList_AfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Optimize the filter when a node checked state changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnFind_Click(System.Object,System.EventArgs)">
            <summary>
            Search for members that match the search conditions
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnGoto_Click(System.Object,System.EventArgs)">
            <summary>
            Goto the selected member in the tree view
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.btnIncludeExclude_Click(System.Object,System.EventArgs)">
            <summary>
            Include or exclude the selected members
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.lvSearchResults_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            Double-clicking an item is the same as clicking Goto
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility">
            <summary>
            This is used to indicate the visibility of a member in the node information type below
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility.Public">
            <summary>The member is public</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility.Protected">
            <summary>The member is protected</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility.Internal">
            <summary>The member is internal (Friend)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility.Private">
            <summary>The member is private</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo">
            <summary>
            This is used to associate additional information with each tree node to make it easier to look stuff
            up.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">The text for the tree view</param>
            <param name="apiId">The API ID</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.DetermineApiEntryType">
            <summary>
            This will determine the API entry type and visibility based on the information in the reflection
            information node.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.AppendTemplatesToNodeText">
            <summary>
            If this API node contains template information, add that info to the node's display text
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.EntryTypeFromId(System.Char,System.String)">
            <summary>
            Determine the API entry type from the ID and possible the subgroup
            </summary>
            <param name="apiType">The type character to convert</param>
            <param name="subgroup">The subgroup to use</param>
            <returns>An <see cref="T:SandcastleBuilder.Utils.ApiEntryType"/> indicating the entry type</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.DetermineVisibility(System.Char,System.Xml.XmlNode)">
            <summary>
            Determine the visibility from the API node information
            </summary>
            <param name="apiType">The API type character from the ID</param>
            <param name="node">The API node information</param>
            <returns>An <see cref="T:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.ApiVisibility"/> indicating the entry's visibility</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.NodeText">
            <summary>
            Get or set the text to display in the tree view
            </summary>
            <value>This will be the full namespace name or the type or member name without the namespace.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.Id">
            <summary>
            This read-only property is used to get the API ID (the namespace, type, or member name)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.FilterName">
            <summary>
            For types, this will be set to the filter name to use if the
            class is nested within another class.
            </summary>
            <remarks>In such cases, the parent class name(s) must prefix the type so that it can be correctly
            excluded or included.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.ApiNode">
            <summary>
            Get or set the API node from the reflection information file
            </summary>
            <remarks>This will also set the <see cref="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.EntryType"/> based on the reflection information in
            the node.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.EntryType">
            <summary>
            This read-only property is used to get the API entry type for this node
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.Visibility">
            <summary>
            This read-only property is used to get the visibility of this node
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ApiFilterEditorDlg.NodeInfo.IsProjectExclude">
            <summary>
            Get or set whether or not the entry is a project exclude
            </summary>
            <remarks>If excluded via the Namespace Comments project option or an <c>&lt;exclude /&gt;</c>
            tag, this property will be set to true and the node cannot be marked as exposed.  It is also
            used to disallow changes to some of the fixed and inherited API entry nodes.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ContentFileEditor">
            <summary>
            This class represents an external application that is used to edit
            an additional content file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditor.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>A clone of the object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditor.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditor.IsEditorFor(System.String)">
            <summary>
            See if the given extension is a match for this file editor.
            </summary>
            <param name="extension">The extension to check</param>
            <returns>True if this is the editor for the given file extension
            or false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditor.ActualArguments(System.String,System.String)">
            <summary>
            Substitute actual values for the macro place holders
            </summary>
            <param name="contentItem">The content item</param>
            <param name="projectFile">The current project file</param>
            <returns>A string containing the actual arguments to pass to the
            editor application.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.Description">
            <summary>
            This is used to get or set a description of the editor application
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.Extensions">
            <summary>
            This is used to get or set the filename extensions for which this
            content file editor will be used.
            </summary>
            <value>Separate the extensions with space, semi-colon, or a comma</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.Arguments">
            <summary>
            This is used to get or set the parameters to pass to the
            application.
            </summary>
            <remarks>The following macros can be used to substitute item
            and path values into the argument string.
            <list type="table">
               <listheader>
                  <term>Macro Name</term>
                  <description>Value Used</description>
               </listheader>
               <item>
                  <term>$ContentItem</term>
                  <description>The full path to the content item to be
            edited</description>
               </item>
               <item>
                  <term>$ProjectFile</term>
                  <description>The fully qualified path and filename of the
            current project.</description>
               </item>
               <item>
                  <term>$ProjectFolder</term>
                  <description>The fully qualified path to the current
            project.</description>
               </item>
            </list>
            <p/>The macro names are case-insensitive.  Enclose arguments in
            double quotes if they may contain spaces.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.ApplicationPath">
            <summary>
            This is used to get or set the source path to the editor
            application.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.StartupFolder">
            <summary>
            This is used to set or get the startup folder used when launching
            the content file editor.
            </summary>
            <value>If not set, the current project's path is used.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.EditorDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.ApplicationPathSerializable">
            <summary>
            This property is used to serialize the application path
            </summary>
            <remarks><see cref="T:SandcastleBuilder.Utils.FilePath"/> is not serializable because it
            does not have a parameterless constructor.  This stands in for the
            <see cref="P:SandcastleBuilder.Utils.Design.ContentFileEditor.ApplicationPath"/> property when this class is
            serialized.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditor.StartupFolderSerializable">
            <summary>
            This property is used to serialize the startup folder
            </summary>
            <remarks><see cref="T:SandcastleBuilder.Utils.FolderPath"/> is not serializable because it
            does not have a parameterless constructor.  This stands in for the
            <see cref="P:SandcastleBuilder.Utils.Design.ContentFileEditor.StartupFolder"/> property when this class is
            serialized.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.ContentFileEditorCollection">
            <summary>
            This collection class is used to hold the additional content file
            editor definitions.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.#ctor">
            <summary>
            Constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.#ctor(SandcastleBuilder.Utils.Design.ContentFileEditorCollection)">
            <summary>
            Clone the items in another collection to create this one.
            </summary>
            <param name="editors">The collection to clone</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.AddRange(SandcastleBuilder.Utils.Design.ContentFileEditorCollection)">
            <summary>
            Add a range of items from another collection
            </summary>
            <param name="range">The range of items to add</param>
            <remarks>The entries are not cloned.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.Sort">
            <summary>
            Sort the collection by editor description
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.LaunchEditorFor(System.String,System.String)">
            <summary>
            Search the list of content file editors and launch the appropriate
            one for the specified file.
            </summary>
            <param name="filename">The filename to edit</param>
            <param name="projectFile">The fully qualified name of the current
            project file.</param>
            <returns>True if successful, false if not.  <see cref="P:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.LastError"/>
            can be used to obtain details if it does fail.</returns>
            <remarks>If an editor is not defined, an attempt is made to launch
            the file using the OS shell with the Edit verb.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.GlobalEditors">
            <summary>
            This returns the reference to the global content file editor
            collection.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.LastError">
            <summary>
            If <see cref="M:SandcastleBuilder.Utils.Design.ContentFileEditorCollection.LaunchEditorFor(System.String,System.String)"/> returns false, this can be used to
            retrieve the exception describing why it failed.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.EscapeValueAttribute">
            <summary>
            This is used to mark a property that needs its value escaped when
            stored in an MSBuild project file.
            </summary>
            <remarks>MSBuild requires that the following characters be escaped in
            property values unless they are intended to be interpreted by the
            build engine:  % * ? @ $ ( ) ; '.  In addition, this attribute will
            cause the values to be HTML encoded so that any HTML characters,
            especially tag delimiters are not interpreted.  MSBuild tends to add
            XML namespaces to things it thinks are XML elements.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.EscapeValueAttribute.Escape(System.String)">
            <summary>
            This is used to HTML encode and escape an MSBuild property value.
            </summary>
            <param name="unescapedValue">The unescaped value</param>
            <returns>The HTML encoded escaped value</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.EscapeValueAttribute.Unescape(System.String)">
            <summary>
            This is used to return an unescaped and HTML decoded MSBuild value
            </summary>
            <param name="escapedValue">The escaped value</param>
            <returns>The unescaped and HTML decoded value</returns>
            <remarks>MSBuild provides an escape method but no unescape method.
            Go figure.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.EscapeValueAttribute.OnEscapeMatch(System.Text.RegularExpressions.Match)">
            <summary>
            This is used to convert the match to its unescaped character
            </summary>
            <param name="m">The match</param>
            <returns>The unescaped character as a string</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.EscapeValueAttribute.HexToInt(System.Char)">
            <summary>
            Convert a hex character to its integer value
            </summary>
            <param name="h">The hex character</param>
            <returns>The integer value</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathObjectEditor">
            <summary>
            This is a type editor that can display a file dialog to allow
            selection of a file path at design time for a <see cref="T:SandcastleBuilder.Utils.FilePath"/>
            object.
            </summary>
            <remarks>It is used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FileDialogAttribute"/> to specify the file dialog title,
            filter, and type</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathStringEditor">
            <summary>
            This is a type editor that can display a file dialog to allow
            selection of a file path at design time for a string object.
            </summary>
            <remarks>It is used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FileDialogAttribute"/> to specify the file dialog title,
            filter, and type</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a file dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The file path as an object</param>
            <returns>The selected file path as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context and an instance.  Otherwise, it
            returns <b>None</b>.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathObjectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a file dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The file path as an object</param>
            <returns>The selected file path as an object</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FilePathTypeConverter">
            <summary>
            This type converter is used to convert a FilePath object to and from
            a string so that it can be edited in a
            <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FilePathTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FlagsEnumEditor">
            <summary>
            This is a type editor that displays a checked list box as the drop-down
            editor for an enumerated data type that represents a set of flags.
            This makes it easy to select multiple values with the drop-down.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FlagsEnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a checked list box
            control as the drop-down editor.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The enumerated type object to edit</param>
            <returns>The edited enumerated type object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FlagsEnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>DropDown</b> as long as there is a context and an instance.  Otherwise, it
            returns <c>None</c>.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathObjectEditor">
            <summary>
            This is a type editor that can display a folder browser dialog to allow selection of a folder path at
            design time.
            </summary>
            <remarks>This can be used in conjunction with the <see cref="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute"/> to specify the
            folder browser dialog's properties.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathStringEditor">
            <summary>
            This is a type editor that can display a folder browser dialog to
            allow selection of a folder path at design time.
            </summary>
            <remarks>This can be used in conjunction with the
            <see cref="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute"/> to specify the folder browser
            dialog's properties.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a folder browser dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The folder path as an object</param>
            <returns>The selected folder path as an object</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to specify the editor's edit style
            </summary>
            <param name="context">The descriptor context</param>
            <returns>Always returns <b>Modal</b> as long as there is a context and an instance.  Otherwise, it
            returns <c>None</c>.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathObjectEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This is overridden to edit the value using a folder browser dialog.
            </summary>
            <param name="context">The descriptor context</param>
            <param name="provider">The provider</param>
            <param name="value">The folder path as an object</param>
            <returns>The selected folder path as an object</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderPathTypeConverter">
            <summary>
            This type converter is used to convert a FolderPath object to and from
            a string so that it can be edited in a
            <see cref="T:System.Windows.Forms.PropertyGrid"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderPathTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.VersionTypeConverter">
            <summary>
            This type converter converts between a string and a
            <see cref="T:System.Version"/> object and vice versa.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.VersionTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.VersionTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
            <returns>A <see cref="T:System.Version"/> object.  The value is
            always a four-part version number with any unused parts defaulted
            to zero.  If the new value is null or an empty string, null is
            returned.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.VersionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.FilePath">
            <summary>
            This class is used to represent a file path.  Support is included for treating the path as fixed or
            relative and for expanding environment variables in the path name.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.OnPersistablePathChanging(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.FilePath.PersistablePathChanging"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.OnPersistablePathChanged(System.EventArgs)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.FilePath.PersistablePathChanged"/> event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Implicit(SandcastleBuilder.Utils.FilePath)~System.String">
             <summary>
             This is used to handle an implicit conversion from a <see cref="T:SandcastleBuilder.Utils.FilePath"/> object to a string
             </summary>
             <param name="filePath">The <see cref="T:SandcastleBuilder.Utils.FilePath"/> to convert.</param>
             <returns>The file path as a relative or absolute path string based on its current settings</returns>
             <example>
             <code lang="cs">
             FilePath filePath = new FilePath(@"%APPDATA%\TestApp\App.config");
             
             // The FilePath object is automatically converted to a string
             // representing the expanded, fully qualified path.
             string pathString = filePath;
             </code>
             <code lang="vbnet">
             Dim filePath As New FilePath("%APPDATA%\TestApp\App.config")
            
             ' The FilePath object is automatically converted to a string
             ' representing the expanded, fully qualified path.
             Dim pathString As String = filePath
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Equality(SandcastleBuilder.Utils.FilePath,SandcastleBuilder.Utils.FilePath)">
            <summary>
            Overload for equal operator.
            </summary>
            <param name="firstPath">The first object to compare</param>
            <param name="secondPath">The second object to compare</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.op_Inequality(SandcastleBuilder.Utils.FilePath,SandcastleBuilder.Utils.FilePath)">
            <summary>
            Overload for not equal operator.
            </summary>
            <param name="firstPath">The first object to compare</param>
            <param name="secondPath">The second object to compare</param>
            <returns>True if not equal, false if they are.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.GetFullPath(System.String)">
            <summary>
            This returns the fully qualified path for the specified path.  This version allows wildcards in the
            filename part if present.
            </summary>
            <param name="path">The path to expand</param>
            <returns>The fully qualified path name</returns>
            <remarks>The <b>System.IO.Path</b> version of <see cref="M:System.IO.Path.GetFullPath(System.String)"/> will throw an
            exception if the path contains wildcard characters.  This version does not.
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.AbsoluteToRelativePath(System.String,System.String)">
            <summary>
            This helper method can be used to convert an absolute path to one that is relative to the given base
            path.
            </summary>
            <param name="basePath">The base path</param>
            <param name="absolutePath">An absolute path</param>
            <returns>A path to the given absolute path that is relative to the given base path</returns>
            <remarks>If the base path is null or empty, the current working folder is used.</remarks>
            <example>
            <code lang="cs">
            string basePath = @"E:\DotNet\CS\TestProject\Source";
            string absolutePath = @"E:\DotNet\CS\TestProject\Doc\Help.html";
            
            string relativePath = FilePath.AbsoluteToRelativePath(basePath,
                absolutePath);
            
            Console.WriteLine(relativePath);
            
            // Results in: ..\Doc\Help.html
            </code>
            <code lang="vbnet">
            Dim basePath As String = "E:\DotNet\CS\TestProject\Source"
            Dim absolutePath As String = "E:\DotNet\CS\TestProject\Doc\Help.html"
            
            Dim relativePath As String = _
                FilePath.AbsoluteToRelativePath(basePath, absolutePath);
            
            Console.WriteLine(relativePath)
            
            ' Results in: ..\Doc\Help.html
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.RelativeToAbsolutePath(System.String,System.String)">
            <summary>
            This helper method can be used to convert a relative path to an absolute path based on the given base
            path.
            </summary>
            <param name="basePath">The base path</param>
            <param name="relativePath">A relative path</param>
            <returns>An absolute path</returns>
            <remarks>If the base path is null or empty, the current working folder is used.</remarks>
            <example>
            <code lang="cs">
            string basePath = @"E:\DotNet\CS\TestProject\Source";
            string relativePath = @"..\Doc\Help.html";
            
            string absolutePath = FilePath.RelativeToAbsolutePath(basePath,
                relativePath);
            
            Console.WriteLine(absolutePath);
            
            // Results in: E:\DotNet\CS\TestProject\Doc\Help.html
            </code>
            <code lang="vbnet">
            Dim basePath As String = "E:\DotNet\CS\TestProject\Source"
            Dim relativePath As String = "..\Doc\Help.html"
            
            Dim absolutePath As String = _
                FilePath.RelativeToAbsolutePath(basePath, relativePath);
            
            Console.WriteLine(absolutePath)
            
            ' Results in: E:\DotNet\CS\TestProject\Doc\Help.html
            </code>
            </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.ShouldSerializePath">
            <summary>
            This is used to prevent the Path property from showing as modified in the designer
            </summary>
            <returns>Always returns false</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.FilePath.Path"/> property is mainly for display purposes in the designer but can be
            used for making changes to the expanded path if needed.  The <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/> property
            is used as the display value in the designer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor(SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Default constructor.  The file path is undefined.
            </summary>
            <param name="provider">The base path provider</param>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor(System.String,SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor.  Assign the specified path.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="provider">The base path provider</param>
            <remarks>Unless <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to true, the path is always treated as a relative
            path.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.#ctor(System.String,System.Boolean,SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor.  Assign the specified path and fixed setting.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="isFixed">True to treat the path as fixed, false to treat it as a relative path.</param>
            <param name="provider">The base path provider</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.ToString">
            <summary>
            Convert the file path to a string
            </summary>
            <returns>A fixed or relative path based on the current settings</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.GetHashCode">
            <summary>
            Get a hash code for the file path object
            </summary>
            <returns>Returns the hash code of the <see cref="M:SandcastleBuilder.Utils.FilePath.ToString"/> value converted to lowercase</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.Equals(System.Object)">
            <summary>
            This is overridden to allow proper comparison of file path objects.
            </summary>
            <param name="obj">The object to which this instance is compared</param>
            <returns>Returns true if the object equals this instance, false if it does not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FilePath.Clone">
            <summary>
            This returns a clone of the object
            </summary>
            <returns>A clone of the object</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.BasePathProvider">
            <summary>
            This is used to get the base path provider for the object.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.BasePath">
            <summary>
            This returns the base path for the object
            </summary>
            <value>If no <see cref="T:SandcastleBuilder.Utils.IBasePathProvider"/> has been specified, this returns the current directory</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.Path">
             <summary>
             This is used to get or set the path to use.
             </summary>
             <value>When set, if the path is not rooted (a relative path), <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to
             false.  If rooted (an absolute path), it is not changed.  This property always returns a fully
             qualified path but without any environment variable expansions.
             
             <p/>If set to a null or empty string, the file path is cleared and is considered to be undefined.</value>
             <note type="note">MSBuild environment variable references are also supported (i.e. $(SHFBROOT),
             $(OutputPath), etc.).</note>
             <example>
             <code lang="cs">
             FilePath path = new FilePath();
            
             // Set it to a relative path
             path.Path = @"..\..\Test.txt";
            
             // Set it to an absolute path
             path.Path = @"C:\My Documents\Info.doc";
            
             // Set it to a path based on an environment variable
             path.Path = @"%HOMEDRIVE%%HOMEPATH%\Favorites\*.*";
             </code>
             <code lang="vbnet">
             Dim path As New FilePath()
            
             ' Set it to a relative path
             path.Path = "..\..\Test.txt"
            
             ' Set it to an absolute path
             path.Path = "C:\My Documents\Info.doc"
            
             ' Set it to a path based on an environment variable
             path.Path = "%HOMEDRIVE%%HOMEPATH%\Favorites\*.*"
             </code>
             </example>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.PersistablePath">
            <summary>
            This is used to retrieve the file path in a format suitable for persisting to storage based on the
            current settings.
            </summary>
            <remarks>If <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is true, an absolute path is always returned.  If false, the
            path is returned in a form that is relative to the path stored in the <see cref="P:SandcastleBuilder.Utils.FilePath.BasePath"/>
            property.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.Exists">
            <summary>
            This read-only property can be used to determine whether or not the file path exists
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.ExpandedPath">
            <summary>
            This read-only property is used to display the fully qualified path with environment variable
            expansions in the designer.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FilePath.IsFixedPath">
            <summary>
            This is used to indicate whether or not the path will be treated as a relative or fixed path when
            converted retrieved via the <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/> property.
            </summary>
            <value>If true, the path is returned as a fixed path when retrieved.  If false, it is returned as a
            path relative to the current value of the <see cref="P:SandcastleBuilder.Utils.FilePath.BasePath"/> property.</value>
        </member>
        <member name="E:SandcastleBuilder.Utils.FilePath.PersistablePathChanging">
            <summary>
            This event is raised when the persistable path is about to be changed
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.FilePath.PersistablePathChanged">
            <summary>
            This event is raised when the persistable path changes
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.FolderPath">
            <summary>
            This class is used to represent a folder path.  Support is included for
            treating the path as fixed or relative and for expanding environment
            variables in the path name.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.IsPathTerminated(System.String)">
            <summary>
            This can be used to find out if a path is terminated with a
            trailing backslash.
            </summary>
            <param name="path">The path to check</param>
            <returns>Returns true if it is, false if it is not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.TerminatePath(System.String)">
            <summary>
            This can be used to ensure that a path is terminated with a
            trailing backslash.
            </summary>
            <param name="path">The path to check</param>
            <returns>The path with a trailing backslash added if necessary.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.ShouldSerializePath">
            <summary>
            This is used to prevent the Path property from showing as modified
            in the designer.
            </summary>
            <returns>Always returns false</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.FolderPath.Path"/> property is mainly for display
            purposes in the designer but can be used for making changes to
            the expanded path if needed.  The <see cref="P:SandcastleBuilder.Utils.FilePath.PersistablePath"/>
            property is used as the display value in the designer.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor(SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Default constructor.  The folder path is undefined.
            </summary>
            <param name="provider">The base path provider</param>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor(System.String,SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor.  Assign the specified path.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="provider">The base path provider</param>
            <remarks>Unless <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to true,
            the path is always treated as a relative path.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.FolderPath.#ctor(System.String,System.Boolean,SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor.  Assign the specified path and fixed setting.
            </summary>
            <param name="path">A relative or absolute path.</param>
            <param name="isFixed">True to treat the path as fixed, false
            to treat it as a relative path.</param>
            <param name="provider">The base path provider</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.FolderPath.Path">
             <summary>
             This is used to get or set the path.
             </summary>
             <value>When set, if the path is not rooted (a relative path),
             <see cref="P:SandcastleBuilder.Utils.FilePath.IsFixedPath"/> is set to false.  If rooted (an
             absolute path), it is not changed.  This property always returns a
             fully qualified path but without any environment variable
             expansions and terminated with a trailing backslash if needed.
             <p/>If set to a null or empty string, the folder path is cleared
             and is considered to be undefined.</value>
             <example>
             <code lang="cs">
             FolderPath path = new FolderPath();
             
             // Set it to a relative path
             path.Path = @"..\..\ProjectFolder";
             
             // Set it to an absolute path
             path.Path = @"C:\My Documents\ProjectDocs\";
             
             // Set it to a path based on an environment variable
             path.Path = @"%HOMEDRIVE%%HOMEPATH%\Favorites\";
             </code>
             <code lang="vbnet">
             Dim path As New FolderPath()
            
             ' Set it to a relative path
             path.Path = "..\..\ProjectFolder"
             
             ' Set it to an absolute path
             path.Path = "C:\My Documents\ProjectDocs\"
             
             ' Set it to a path based on an environment variable
             path.Path = "%HOMEDRIVE%%HOMEPATH%\Favorites\"
             </code>
             </example>
        </member>
        <member name="P:SandcastleBuilder.Utils.FolderPath.Exists">
            <summary>
            This read-only property can be used to determine whether or not
            the folder path exists.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.FullTextIndex">
            <summary>
            This is a really basic implementation of an algorithm used to create a full-text index of the website
            pages so that they can be searched using the ASP.NET web pages.
            </summary>
            <remarks>So that an assembly does not have to be deployed to deserialize the index information, the
            index information is represented using built-in data types (string and long).
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.FullTextIndex.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Constructor
            </summary>
            <param name="exclusions">The file containing common word exclusions.  The file should contain one
            work per line in lowercase.  These words will not appear in the index.</param>
            <param name="language">The culture information</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.FullTextIndex.CreateFullTextIndex(System.String)">
            <summary>
            Create a full-text index from web pages found in the specified file path
            </summary>
            <param name="filePath">The path containing the files to index</param>
            <remarks>Words in the exclusion list, those that are less than three characters long, and anything
            starting with a digit will not appear in the index.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.FullTextIndex.SaveIndex(System.String)">
            <summary>
            Save the index information to the specified location.
            </summary>
            <param name="indexPath">The path to which the index files are
            saved.</param>
            <remarks>JSON serialization is used to save the index data.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_CACHE_FLAGS">
            <summary>
            This defines the different cache types that can be used
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_DISPLAY_FLAGS">
            <summary>
            This defines the items that GetDisplayName returns
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_CMP_FLAGS">
            <summary>
            This defines the parts to use when comparing assembly information
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.ASM_NAME">
            <summary>
            This defines the various ID values used for assembly properties
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.IAssemblyName">
            <summary>
            This is used to represent an assembly name
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.IAssemblyEnum">
            <summary>
            This is used to enumerate the assemblies in the GAC
            </summary>
            <exclude/>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.NativeMethods">
            <summary>
            This defines the one and only method we need in the help file builder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Gac.NativeMethods.CreateAssemblyEnum(SandcastleBuilder.Utils.Gac.IAssemblyEnum@,System.IntPtr,SandcastleBuilder.Utils.Gac.IAssemblyName,SandcastleBuilder.Utils.Gac.ASM_CACHE_FLAGS,System.IntPtr)">
            <summary>
            This is used to obtain an instance of the assembly enumerator
            </summary>
            <param name="ppEnum">A reference that will end up containing the
            IAssemblyEnum interface.</param>
            <param name="pUnkReserved">Reserved.  Must always be null.</param>
            <param name="pName">An assembly name that is used to filter the
            enumeration.  This can be null to enumerate all assemblies in the
            GAC.</param>
            <param name="dwFlags">Specify one (and only one) ASM_CACHE_FLAGS
            value.</param>
            <param name="pvReserved">Reserved.  Must always be null.</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Gac.GacEnumerator">
            <summary>
            This class is used to get a list of assemblies in the Global Assembly
            Cache (GAC).
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Gac.GacEnumerator.GacList">
            <summary>
            This static property is used to obtain a list containing the
            fully qualified names of all assemblies in the GAC.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg">
            <summary>
            This form is used determine the state of the current MS Help Viewer content and offer options to
            install it, launch it, remove it, or open the content manager.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
            <param name="helpViewerPath">The path to the MS Help Viewer</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.actionThread_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            This performs the requested task
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.actionThread_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            This updates the status as the thread runs
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.actionThread_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            This enables the form when the thread finishes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.cboHelpViewerVersion_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            This is used to determine the state of the help content and set the form options when a help viewer
            version is selected.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the selected action
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadAction">
            <summary>
            This is used to tell the thread what to do
            </summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadAction.OpenCurrent">
            <summary>Open the current content</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadAction.Install">
            <summary>Install content from the last build and open it</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadAction.Remove">
            <summary>Remove the current content</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadAction.OpenContentManager">
            <summary>Open the content manager</summary>
        </member>
        <member name="T:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState">
            <summary>
            This is used to indicate the current state of the thread
            </summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState.RemovingOldContent">
            <summary>Removing old content prior to installing new content</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState.RemovingContent">
            <summary>Content is being removed</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState.InstallingContent">
            <summary>Content is being installed</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState.OpeningContent">
            <summary>Content is being opened</summary>
        </member>
        <member name="F:SandcastleBuilder.MicrosoftHelpViewer.LaunchMSHelpViewerDlg.ThreadState.OpeningContentManager">
            <summary>Opening the content manager</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.IBasePathProvider">
            <summary>
            This interface defines the properties used to obtain a base path for
            a <see cref="T:SandcastleBuilder.Utils.FilePath"/> object.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.IBasePathProvider.ResolvePath(System.String)">
            <summary>
            Implement this method to supply custom path resolution such as
            handling of MSBuild variables in the path.
            </summary>
            <param name="path">The path to use</param>
            <returns>A copy of the path after performing any custom resolutions</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.IBasePathProvider.BasePath">
            <summary>
            This read-only property returns the base path
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs">
            <summary>
            This is used by the comments cache to report a warning message
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text">The message text</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs.Message">
            <summary>
            The message to report
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache">
            <summary>
            This is used to cache indexed XML comments files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.OnReportWarning(SandcastleBuilder.Utils.InheritedDocumentation.CommentsCacheEventArgs)">
            <summary>
            This is used to raise the <see cref="E:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ReportWarning"/> event
            </summary>
            <param name="args">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="size">The maximum size of the cache</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexCommentsFiles(System.String,System.String,System.Boolean,System.Collections.Concurrent.ConcurrentBag{System.Xml.XPath.XPathNavigator})">
            <summary>
            Index all comments files found in the specified folder.
            </summary>
            <param name="path">The path to search.  If null or empty, the current directory is assumed.</param>
            <param name="wildcard">The wildcard to use.  If null or empty, "*.xml" is assumed.</param>
            <param name="recurse">True to recurse subfolders or false to only use the given folder.</param>
            <param name="commentsFiles">Optional.  If not null, an <see cref="T:System.Xml.XPath.XPathDocument"/> is added to the
            collection for each file indexed.</param>
            <remarks>The files are indexed in parallel.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.GetKeys(System.String)">
            <summary>
            This returns an enumerable list of all key values from the specified XML file based on the
            expressions for this cache.
            </summary>
            <param name="file">The XML file from which to obtain the keys</param>
            <returns>An enumerable list of the key values in the given file</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.GetValues(System.String)">
            <summary>
            This returns an enumerable list of all key/value pairs from the specified XML file based on the
            expressions for this cache.
            </summary>
            <param name="file">The XML file from which to obtain the keys</param>
            <returns>An enumerable list of the key/value values in the given file</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexCount">
            <summary>
            This read-only property returns the number of items indexed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.FilesIndexed">
            <summary>
            This read-only property returns the number of comments files that were indexed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ShowDuplicatesWarning">
            <summary>
            This is used to get or set whether or not duplicate entry warnings are generated
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.AllKeys">
            <summary>
            This read-only property returns all keys in the index
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.Item(System.String)">
            <summary>
            This read-only property returns the comments for the specified key
            </summary>
            <param name="key">The key for which to retrieve comments</param>
            <returns>An <see cref="T:System.Xml.XPath.XPathNavigator"/> for the comments or null if not found.</returns>
        </member>
        <member name="E:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.ReportWarning">
            <summary>
            This is used by the cache to report duplicate key warnings
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile">
            <summary>
            This represents an indexed XML comments file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile.#ctor(SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="cache">The cache with which this indexed document is associated</param>
            <param name="filename">The name of the XML comments file to index</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.InheritedDocumentation.IndexedCommentsCache.IndexedCommentsFile.Item(System.String)">
            <summary>
            This read-only property returns the XPath navigator for the specified key
            </summary>
            <param name="key">The key to look up</param>
            <returns>The XPath navigator associated with the key</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException">
            <summary>
            This exception class is thrown by the application if it encounters an
            unrecoverable error.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor">
            <summary>
            Default constructor.
            </summary>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.InheritedDocumentation.InheritedDocsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile">
            <summary>
            This task is used to run HHC.EXE which is used to compile a Help 1 (CHM) help file
            </summary>
            <remarks>Support is provided for wrapping the tool in a call to an application such as SBAppLocale.exe to
            workaround encoding issues with the Help 1 compiler.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.ValidateParameters">
            <summary>
            Validate the parameters
            </summary>
            <returns>True if the parameters are valid, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.GenerateFullPathToTool">
            <summary>
            This returns the full path to the tool
            </summary>
            <returns>The full path to the tool</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.GenerateCommandLineCommands">
            <summary>
            Generate the command line parameters
            </summary>
            <returns>The command line parameters</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.Execute">
            <summary>
            This is overridden to set the working folder before executing the task and to invert the result
            returned from the help compiler.
            </summary>
            <returns>True if successful or false on failure</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.HandleTaskExecutionErrors">
            <summary>
            This is overridden to invert the result of the HHC exit code
            </summary>
            <returns>True on success, false on failure.  HHC is backwards and returns 0 on failures and 1 on
            success.  We invert the result to be consistent with other tasks.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.ToolName">
            <summary>
            This read-only property returns the tool name (HHC.EXE or the value of <see cref="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.LocalizeApp"/> if
            specified).
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.StandardErrorLoggingImportance">
            <summary>
            This is overridden to force all standard error info to be logged
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.StandardOutputLoggingImportance">
            <summary>
            This is overridden to force all standard output info to be logged
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.WorkingFolder">
            <summary>
            This is used to pass in the working folder where the files are located
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.HelpCompilerFolder">
            <summary>
            This is used to pass in the path to the help compiler
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.HelpProjectName">
            <summary>
            This is used to pass in the help project filename
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.LocalizeApp">
            <summary>
            This is used to pass in the name of the application to use as the localization wrapper
            </summary>
            <remarks>This is optional.  If specified, it will be used to run the help compiler to work around
            encoding issues.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.LanguageId">
            <summary>
            This is used to get or set the language ID for the localization tool (<see cref="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.LocalizeApp"/>)
            </summary>
            <remarks>This is optional.  If not specified, it defaults to 1033.  It is ignored if
            <see cref="P:SandcastleBuilder.Utils.MSBuild.Build1xHelpFile.LocalizeApp"/> is not set.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.BuildHelp">
            <summary>
            This task is used to build help file output using the Sandcastle Help File Builder.
            </summary>
            <remarks>All messages from this task are logged with a high priority since it will run for a long time
            and we need to see the progress messages to know it's doing something.  If set to Normal and ran from
            within Visual Studio, it won't show the progress messages when the logging options are set to Minimal.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelp.Execute">
            <summary>
            This is used to execute the task and perform the build
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelp.GetCurrentProjectInstance">
            <summary>
            This is used to obtain project instance for the project that is currently being built
            </summary>
            <returns>The project instance for the current project if possible or null if it could not be
            obtained.</returns>
            <remarks>When you run MSBuild.exe, it does not store the projects in the global project collection.
            We could build the project without it but we lose the ability to use command line overrides and
            changes to user-defined properties.  As such we need to resort to reflection to get the current
            project information.  This is easier than in past MSBuild versions though.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelp.Cancel">
            <summary>
            Cancel the build
            </summary>
            <remarks>The build will be cancelled as soon as the next message arrives from the build process</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelp.Report(SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process to report build progress
            </summary>
            <param name="value">The event arguments</param>
            <remarks>Since the build is synchronous in this task, we need to implement the interface and report
            progress synchronously as well or the final few messages can get lost and it looks like the build
            failed.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.ProjectFile">
            <summary>
            This is used to pass in the project filename
            </summary>
            <remarks>Since <see cref="T:SandcastleBuilder.Utils.SandcastleProject"/> already wraps the MSBuild project, it seemed
            redundant to define each and every property on this task and map them to the project properties.  As
            such, this task will attempt to use the executing project to create the Sandcastle project instance.
            If that fails or <see cref="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.AlwaysLoadProject"/> is true, this file will be loaded instead.  The
            downside is that property overrides on the command line will be ignored.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.Configuration">
            <summary>
            This is used to pass in the configuration to use for the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.Platform">
            <summary>
            This is used to pass in the platform to use for the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.OutDir">
            <summary>
            This is used to specify the output directory containing the build output for solution and project
            documentation sources when using Team Build.
            </summary>
            <value>This property is optional.  If not specified, the default output path in project file
            documentation sources will be used.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.Verbose">
            <summary>
            This is used to set or get the output logging verbosity flag
            </summary>
            <value>This property is optional.  If set to false (the default), only build steps are written to the
            task log.  If set to true, all output from the build process is written to the task log.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.DumpLogOnFailure">
            <summary>
            This is used to set or get whether the log file is dumped to the task log if the help file project
            build fails.
            </summary>
            <value>This property is optional.  If set to false (the default), the log is not dumped if the build
            fails.  If set to true, all output from the build process is written to the task log if the build
            fails.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.AlwaysLoadProject">
            <summary>
            This is used to specify whether or not to load the specified <see cref="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.ProjectFile"/> rather than
            use the executing project.
            </summary>
            <value>This property is optional.  If set to false, the default, the executing project is used as the
            Sandcastle project to build.  If set to true, the specified <see cref="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.ProjectFile"/> is loaded.
            In such cases, command line property overrides are ignored.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.Help1Files">
            <summary>
            This is used to return a list of the HTML Help 1 (chm) files that resulted from the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.HelpViewerFiles">
            <summary>
            This is used to return a list of the MS Help Viewer (mshc) files that resulted from the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.WebsiteFiles">
            <summary>
            This is used to return a list of the website files that resulted from the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.OpenXmlFiles">
            <summary>
            This is used to return a list of the Open XML (docx) files that resulted from the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.MarkdownFiles">
            <summary>
            This is used to return a list of the Markdown (md) files that resulted from the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelp.AllHelpFiles">
            <summary>
            This is used to return a list of all files that resulted from the build (all help formats)
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.CleanHelp">
            <summary>
            This task is used to clean (remove) help file output from the last
            build.
            </summary>
            <remarks>All messages from this task are logged with a high priority.  If set to Normal and ran from
            within Visual Studio, it won't show the progress messages when the logging options are set to Minimal.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.CleanHelp.Execute">
            <summary>
            This is used to execute the task and clean the output folder
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.CleanHelp.ProjectFile">
            <summary>
            This is used to pass in the project filename
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.CleanHelp.OutputPath">
            <summary>
            This is used to pass in the output path that needs to be cleaned
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.CleanHelp.WorkingPath">
            <summary>
            This is used to pass in the optional working path that needs to be
            cleaned.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.CleanHelp.LogFileLocation">
            <summary>
            This is used to pass in the optional log filename that needs
            to be cleaned.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile">
            <summary>
            This task is used to finish up creation of the Open XML file parts and compress the help content into an
            Open XML document (a ZIP file with a .docx extension).
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.Execute">
            <summary>
            This is used to execute the task and perform the build
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.WriteTopic(System.Xml.XmlWriter,System.Xml.XmlReader)">
            <summary>
            This is used to write out the body content of a topic to the main document part
            </summary>
            <param name="writer">The writer for the main document part</param>
            <param name="reader">The reader for the topic body content</param>
            <remarks>Using a reader prevents unnecessary namespaces from appearing on the body content elements
            which happens if we convert the XElement content to a string and write it out as raw content.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ApplyChanges(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Apply the clean up tasks to the given document
            </summary>
            <param name="document">The document to clean up</param>
            <param name="key">The topic key</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.SaveRelationships">
            <summary>
            Save the external link and image relationship information
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.SaveNumberingStyles">
            <summary>
            Save list numbering styles
            </summary>
            <remarks>Numbering styles are rather complex.  To keep it as simple as possible, we use one common
            abstract definition and use separate numbering definitions with level overrides to apply "ordered"
            or "no bullet" styles to the lists that use the same style at the same level.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.AddContainingParagraphs(System.Xml.Linq.XDocument)">
            <summary>
            Add containing paragraphs for run elements that don't have one
            </summary>
            <param name="document">The document in which to add containing paragraphs</param>
            <remarks>MAML and XML comments may not be well formed such that all text runs end up inside a
            paragraph.  While HTML is very forgiving in that respect, Open XML is not and it will cause the
            document to appear to be corrupted.  This attempts to fix up such ill-formed content.  It is not
            perfect so there may still be issues.  Additional fix ups can be added as they are found but this is
            no substitute for using well-formed content in the first place.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.CheckForContainingParagraph(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>
            Check for a containing paragraph on each of the given elements
            </summary>
            <param name="elements">An enumerable list of elements to check</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.AddBlankCellParagraphs(System.Xml.Linq.XDocument)">
            <summary>
            Add empty paragraphs to empty cells
            </summary>
            <param name="document">The document in which to add paragraphs to empty cells</param>
            <remarks>Table cells must contain a paragraph element</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ConvertHtmlLineBreaks(System.Xml.Linq.XDocument)">
            <summary>
            Convert HTML line breaks to Open XML line breaks
            </summary>
            <param name="document">The document in which to apply the fix-ups</param>
            <remarks>HTML line breaks can appear in content items and the transformations where it may not be
            convenient or possible to insert the containing run element.  This fixes them up so that they are
            correct.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.WrapStrayElementNodes(System.Xml.Linq.XDocument)">
            <summary>
            Wrap stray text nodes in text elements and, when necessary, run elements
            </summary>
            <param name="document">The document in which to wrap stray text nodes</param>
            <remarks>Stray text nodes can occur when resolving shared content items.  We need to ensure that
            all text nodes are within a text element within a run.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.InsertLineBreaks(System.Xml.Linq.XDocument)">
            <summary>
            Insert line break elements where needed to preserve text formatting
            </summary>
            <param name="document">The document in which to insert line breaks</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.RemoveInvalidSpans(System.Xml.Linq.XDocument)">
            <summary>
            Remove spans without a class attribute that cannot be used for formatting
            </summary>
            <param name="document">The document in which to remove invalid spans</param>
            <remarks>The XSL transformation could do this but it wouldn't necessarily cover third party build
            components which could introduce invalid spans so we'll take care of them all here.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ConvertStyleSpans(System.Xml.Linq.XDocument)">
            <summary>
            Convert style spans to Open XML run formatting
            </summary>
            <param name="document">The document in which to convert the style spans</param>
            <remarks>Nested spans result in run formatting that is accumulated in each run in the nested set of
            spans.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ApplySpanFormatting(System.Xml.Linq.XElement,System.Xml.Linq.XElement)">
            <summary>
            Apply the formatting from a span including all nested spans to each run contained within it
            </summary>
            <param name="span">The root span from which to start applying formatting</param>
            <param name="runProps">The run properties in which to accumulate formatting</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ReformatBookmarkNames(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Reformat the bookmark names to prefix them with the topic key so that they are unique and do not
            contain any invalid characters.
            </summary>
            <param name="document">The document in which to reformat the bookmark names</param>
            <param name="key">The document key</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ConvertHtmlAnchors(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Convert HTML anchor elements to Open XML hyperlink elements
            </summary>
            <param name="document">The document in which to convert the HTML anchor elements</param>
            <param name="key">The document key</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ConvertHtmlImages(System.Xml.Linq.XDocument)">
            <summary>
            Convert HTML image elements to Open XML drawing elements
            </summary>
            <param name="document">The document in which to convert the image elements</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.DetermineImageSize(System.String,System.Int64@,System.Int64@)">
            <summary>
            This is used to determine the image size in English Metric Units
            </summary>
            <param name="imageFilename">The image filename</param>
            <param name="cx">On return, this will contain the width of the image in English Metric Units</param>
            <param name="cy">On return, this will contain the height of the image in English Metric Units</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ConvertHtmlLists(System.Xml.Linq.XDocument)">
            <summary>
            Convert HTML list elements to Open XML list formatting elements and track each unique list style
            </summary>
            <param name="document">The document in which to convert the HTML anchor elements</param>
            <remarks>Open XML lists are not like HTML lists.  The list items have formatting applied that refers
            to a numbering properties element stored in a separate part.  The numbering properties refer to
            an abstract numbering definition which can be shared amongst many numbering properties elements which
            may override levels within the abstract definition.  Also Open XML only supports up to nine levels
            of nested lists.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.ApplyListFormatting(System.Xml.Linq.XElement,System.Int32)">
            <summary>
            This applies formatting to each nested list and list item
            </summary>
            <param name="list">The list to process</param>
            <param name="level">The level of this list</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.GenerateFileList">
            <summary>
            This is used to generate the list of files needed for the document.  It also updates the content
            types file with any missing content types.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.CompressHelpContent">
            <summary>
            This is used to compress the help content into the Open XML document file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.zip_AddProgress(System.Object,Ionic.Zip.AddProgressEventArgs)">
            <summary>
            This is used to report progress as files are added to the archive
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.zip_SaveProgress(System.Object,Ionic.Zip.SaveProgressEventArgs)">
            <summary>
            This is used to report progress as the archive is saved
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.WorkingFolder">
            <summary>
            This is used to pass in the working folder where the files to compress are located
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.OutputFolder">
            <summary>
            This is used to pass in the output folder where the compressed output file is stored
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.HelpFilename">
            <summary>
            This is used to pass in the name of the help file document (no path or extension)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildOpenXmlFile.IndentXml">
            <summary>
            This is used for debugging.  Set it to true to indent the XML, false to not indent it
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent">
            <summary>
            This task is used to finish up creation of the markdown content and copy it to the output folder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.Execute">
            <summary>
            This is used to execute the task and perform the build
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.ApplyChanges(System.Xml.Linq.XDocument)">
            <summary>
            This applies the changes needed to convert the XML to a markdown topic file
            </summary>
            <param name="topic">The topic to which the changes are applied</param>
            <returns>The page title if one could be found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.RecursiveCopy(System.String,System.String,System.Int32@)">
            <summary>
            This copies files from the specified source folder to the specified destination folder.  If any
            subfolders are found below the source folder, the subfolders are also copied recursively.
            </summary>
            <param name="sourcePath">The source path from which to copy</param>
            <param name="destPath">The destination path to which to copy</param>
            <param name="fileCount">The file count used for logging progress</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.WorkingFolder">
            <summary>
            This is used to pass in the working folder where the files to parse are located
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.OutputFolder">
            <summary>
            This is used to pass in the output folder where the generated content is stored
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.GenerateMarkdownContent.DefaultTopic">
            <summary>
            This is used to pass in the default topic name.  If no Home.md file is found and a value is
            specified, this file will be copied to create Home.md.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.MSBuildProject">
            <summary>
            This is a simple wrapper around an MSBuild project that is used to extract information from it during a
            help file build.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SolutionPath">
            <summary>Solution path (directory and filename) global property</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SolutionDir">
            <summary>Solution directory global property</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SolutionFileName">
            <summary>Solution filename (no path) global property</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SolutionName">
            <summary>Solution name (no path or extension) global property</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SolutionExt">
            <summary>Solution extension global property</summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="projectFile">The MSBuild project to load</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.Finalize">
            <summary>
            This handles garbage collection to ensure proper disposal of the
            MSBuild project if not done explicitly with <see cref="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.Dispose"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of
            the MSBuild project object.
            </summary>
            <overloads>There are two overloads for this method.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.Dispose(System.Boolean)">
            <summary>
            This can be overridden by derived classes to add their own
            disposal code if necessary.
            </summary>
            <param name="disposing">Pass true to dispose of the managed
            and unmanaged resources or false to just dispose of the
            unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SetConfiguration(System.String,System.String,System.String,System.Boolean)">
            <summary>
            This is used to set the active configuration and platform used when
            evaluating the properties.
            </summary>
            <param name="configuration">The active configuration</param>
            <param name="platform">The active platform</param>
            <param name="outDir">The output directory</param>
            <param name="usesProjectSpecificOutput">True if the build is using project-specific output folders, 
            false if not.</param>
            <remarks>If the platform is set to any variation of "Any CPU" and it isn't found in the project, it
            will be converted to "AnyCPU" (no space).  This works around an issue with Team Build that includes
            the space even though it should not be present.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.SetSolutionMacros(System.String)">
            <summary>
            This is used to set the Visual Studio solution macros based on the
            specified project name.
            </summary>
            <param name="solutionName">The solution name to use</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.MSBuildProject.CloneReferenceInfo(System.Collections.Generic.Dictionary{System.String,System.Tuple{System.String,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}}}})">
            <summary>
            Clone the project's reference information and add it to the
            given dictionary.
            </summary>
            <param name="references">The dictionary used to contain the
            cloned reference information</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.ProjectFile">
            <summary>
            This is used to get the underlying MSBuild project file reference
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.AssemblyName">
            <summary>
            This is used to get the assembly name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.XmlCommentsFile">
            <summary>
            This is used to get the XML comments file name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.TargetFrameworkIdentifier">
            <summary>
            This is used to get the target framework identifier
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.TargetFrameworkVersion">
            <summary>
            This is used to get the target framework type and version
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.MSBuildProject.ProjectGuid">
            <summary>
            This is used to get the project GUID
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.NumberingStyle">
            <summary>
            This is used to track the custom numbering styles found during the step that converts the list elements
            to Open XML lists.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.NumberingStyle.Id">
            <summary>
            The ID for the numbering style
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.NumberingStyle.Style">
            <summary>
            The numbering style
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.NumberingStyle.Level">
            <summary>
            The numbering level to override
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.NumberingStyle.Start">
            <summary>
            The starting number for ordered lists
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg">
            <summary>
            This form is used to indicate whether to add the solution or just selected projects from within it as
            documentation sources.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.LoadSolutionProjectNames(System.String)">
            <summary>
            This loads the dialog with the available projects from the given solution file
            </summary>
            <param name="solutionName">The solution filename to use</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.SelectSolutionOrProjects(System.String)">
            <summary>
            This is used to prompt the user whether to add the solution or just selected projects from it as
            documentation sources.
            </summary>
            <param name="solutionName">The solution filename to use</param>
            <returns>An enumerable list containing either the solution name or the selected projects</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.cblProjects_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When an item is checked, select the "projects" radio button by default
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.SelectProjectsDlg.SolutionOrProjectNames">
            <summary>
            This is used to get an enumerable list containing either the solution name or the selected projects
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ApiFilter">
            <summary>
            This represents an API entry that is to be removed from the reflection information using MRefBuilder's
            namespace ripping feature.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.CompareTo(SandcastleBuilder.Utils.ApiFilter)">
            <summary>
            Compares this instance to another instance and returns an indication of their relative values
            </summary>
            <param name="other">An ApiFilter object to compare</param>
            <returns>Returns -1 if this instance is less than the value, 0 if they are equal, or 1 if this
            instance is greater than the value or the value is null.</returns>
            <remarks>Entries are sorted by API entry type and full name</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.#ctor">
            <summary>
            Constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.#ctor(SandcastleBuilder.Utils.ApiEntryType,System.String,System.Boolean)">
            <summary>
            Constructor.  This takes the API type and the full name.
            </summary>
            <param name="apiType">The API entry type</param>
            <param name="name">The fully qualified name</param>
            <param name="exposed">True to expose it, false to hide it</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.ConvertToString(System.Text.StringBuilder)">
            <summary>
            This is used to convert the entry and its children to a string ready for use in the MRefBuilder
            configuration file.
            </summary>
            <param name="sb">The string builder to which the information is appended.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.FromXml(System.Xml.XmlTextReader)">
            <summary>
            This is used to load the API filter information from the project file
            </summary>
            <param name="xr">The XML text reader from which the information is loaded</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.ToXml(System.Xml.XmlTextWriter)">
            <summary>
            This is used to save the content item information to the project file
            </summary>
            <param name="xw">The XML text writer to which the information is written</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilter.ApiEntryTypeFromLetter(System.Char)">
            <summary>
            This is used to convert an API type letter to an <see cref="T:SandcastleBuilder.Utils.ApiEntryType"/> enumerated value.
            </summary>
            <param name="apiType">The letter to convert</param>
            <returns>The <b>ApiEntryType</b> represented by the letter</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.EntryType">
            <summary>
            This is used to get or set the API entry type
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.FullName">
            <summary>
            This is used to get the fully qualified name of the API entry
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.FilterName">
            <summary>
            This is used to get the API filter name
            </summary>
            <value>For API entry types other than namespaces, this is the name without the namespace and, for
            methods properties, etc. the type.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.IsExposed">
            <summary>
            This is used to get or set whether or not the entry is exposed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.IsProjectExclude">
            <summary>
            This is used to get or set whether or not the entry is excluded via the project (i.e. via the SHFB
            Namespaces option or an <c>&lt;exclude /&gt;</c> tag.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilter.Children">
            <summary>
            This returns the child API filter collection for this entry
            </summary>
            <value>For namespaces and types, if there are children, they represent the specific entries within
            the namespace or type to hide or expose.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.ApiFilterCollection">
            <summary>
            This collection class is used to hold the API filter entries for MRefBuilder to remove
            </summary>
            <remarks><note type="note">Unlike other collections in the project, this one is cleared and rebuilt if it
            changes.  As such, the contained items do not notify the project when they change as they are created
            anew each time the collection is rebuilt.</note></remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.FromXml(System.String)">
            <summary>
            This is used to load existing API filter items from the project file
            </summary>
            <param name="apiFilter">The API filter items</param>
            <remarks>The information is stored as an XML fragment</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.ToXml">
            <summary>
            This is used to write the API filter info to an XML fragment ready for storing in the project file
            </summary>
            <returns>The XML fragment containing the API filter information</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.MergeExclusionEntry(SandcastleBuilder.Utils.ApiEntryType,System.String)">
            <summary>
            This is used to merge an exclusion entry with the filter collection
            </summary>
            <param name="entryType">The entry type</param>
            <param name="fullName">The member's full name</param>
            <returns>True if merged without conflict or false if the merged member conflicted with an existing
            entry.  The existing entry will take precedence.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.AddNamespaceChild(System.String,System.String,System.String,System.String)">
            <summary>
            Add a new type entry to this namespace collection
            </summary>
            <param name="fullName">The full name of the entry</param>
            <param name="nameSpace">The namespace</param>
            <param name="typeName">The type name</param>
            <param name="memberName">The member</param>
            <returns>True if merged without conflict or false if the merged member conflicted with an existing
            entry.  The existing entry will take precedence.</returns>
            <remarks>Entries added by this method are exclusions based on namespace comment or &lt;exclude/&gt;
            tag exclusions.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.AddTypeChild(System.String,System.String,System.String)">
            <summary>
            Add a new member entry to this type collection
            </summary>
            <param name="fullName">The full name of the entry</param>
            <param name="typeName">The type name</param>
            <param name="memberName">The member</param>
            <returns>True if merged without conflict or false if the merged member conflicted with an existing
            entry.  The existing entry will take precedence.</returns>
            <remarks>Entries added by this method are exclusions based on namespace comment or &lt;exclude/&gt;
            tag exclusions.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ApiFilterCollection.ToString">
            <summary>
            Convert the API filter entry and its children to a string
            </summary>
            <returns>The entries in the MRefBuilder API filter XML format</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ApiFilterCollection.Project">
            <summary>
            This is used to get or set a reference to the project that owns the collection
            </summary>
            <remarks>This is used by collection editors to get a reference to the owning project.  Child
            collections do not contain a reference to the project file.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSHelpKeyword">
            <summary>
            This represents an Microsoft help index keyword that can be added to the XML data island in each help
            topic generated by BuildAssembler.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.#ctor">
            <summary>
            Constructor
            </summary>
            <remarks>The index name defaults to "K"</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="indexName">The index name</param>
            <param name="keywordTerm">The index term</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.CompareTo(SandcastleBuilder.Utils.MSHelpKeyword)">
            <summary>
            Compares this instance to another instance and returns an indication of their relative values
            </summary>
            <param name="other">A MSHelpKeyword object to compare</param>
            <returns>Returns -1 if this instance is less than the value, 0 if they are equal, or 1 if this
            instance is greater than the value or the value is null.</returns>
            <remarks>Entries are sorted by name and then value</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.MSHelpKeyword.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.GetHashCode">
            <summary>
            Get a hash code for this item
            </summary>
            <returns>Returns the hash code for the index name and term</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeyword.ToString">
            <summary>
            Return a string representation of the item
            </summary>
            <returns>Returns the item in its XML format</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSHelpKeyword.ValidIndexNames">
            <summary>
            This read-only property returns an enumerable list of valid index names
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSHelpKeyword.IndexNamesDataSource">
            <summary>
            This read-only property returns a dictionary containing the valid index names and their descriptions
            suitable for data binding.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSHelpKeyword.Index">
            <summary>
            This is used to get or set the index name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSHelpKeyword.Term">
            <summary>
            This is used to get or set the index term
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.MSHelpKeyword.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSHelpKeywordCollection">
            <summary>
            This collection class is used to hold the help index keyword items for a project
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeywordCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            This is used to load the keyword collection from the project file
            </summary>
            <param name="xr">The XML text reader from which the information is loaded.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSHelpKeywordCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            This is used to save the keyword collection to the project file
            </summary>
            <param name="xw">The XML text writer to which the information is written</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.ExecutionContext">
            <summary>
            This class defines the execution context in which the plug-in is being called during the build process
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ExecutionContext.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildStep,SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors)">
            <summary>
            Constructor
            </summary>
            <param name="buildStep">The current build step.</param>
            <param name="behavior">The behavior of the plug-in for the current context.</param>
            <exception cref="T:System.ArgumentException">This is thrown if an attempt is made to specify more than one
            behavior type.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionContext.BuildStep">
            <summary>
            This read-only property returns the current build step
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionContext.Behavior">
            <summary>
            This read-only property returns the execution behavior for the plug-in in the current context
            </summary>
            <value><c>Before</c> indicates that it is being called before the normal help file builder
            processing.  <c>After</c> indicates that it is being called after the normal help file builder
            processing.  <c>InsteadOf</c> indicates that it is being called instead of the normal help file
            builder processing.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionContext.Executed">
            <summary>
            This property is used to set or get whether or not the plug-in actually executed
            </summary>
            <value>It is true by default.  Set it to false if the plug-in did not execute.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint">
            <summary>
            This class defines when a plug-in gets executed during the build process
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildStep,SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors)">
            <summary>
            Constructor
            </summary>
            <param name="buildStep">The step in which the plug-in should run.</param>
            <param name="behavior">The behavior of the plug-in when it is ran.</param>
            <exception cref="T:System.ArgumentException">This is thrown if an attempt is made to set the Before or After
            behavior with the InsteadOf behavior.  It is also thrown for invalid combinations of build step and
            behavior, i.e. Initializing with Before or InsteadOf.  See the help file for a full list.</exception>
            <overloads>There are two overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint.#ctor(SandcastleBuilder.Utils.BuildEngine.BuildStep,SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors,System.Int32)">
            <summary>
            This constructor is used to set a specific execution priority.
            </summary>
            <param name="buildStep">The step in which the plug-in should run.</param>
            <param name="behavior">The behavior of the plug-in when it is ran.</param>
            <param name="priority">The execution priority for the plug-in.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint.BuildStep">
            <summary>
            This read-only property returns the build step in which the plug-in will run.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint.Behavior">
            <summary>
            This read-only property returns the execution behavior of the plug-in.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.ExecutionPoint.Priority">
            <summary>
            This read-only property returns the execution priority of the plug-in.
            </summary>
            <value>Plug-ins with a higher priority value will execute before those with a lower priority value.
            If not specified, the default is 1,000.</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors">
            <summary>
            This public enumerated type defines the execution behavior of a build process plug-in
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.Before">
            <summary>Execute before the help file builder's normal processing.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.After">
            <summary>Execute after the help file builder's normal processing.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.BeforeAndAfter">
            <summary>Execute both before and after the help file builder's normal processing.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors.InsteadOf">
            <summary>Execute instead of the help file builder's normal processing.  If this flag is set,
            <c>Before</c> and <c>After</c> are ignored.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.IPlugIn">
            <summary>
            This interface defines the methods required to implement a Sandcastle Help File Builder build process
            plug-in.
            </summary>
            <remarks>Derived classes must also implement the <see cref="T:System.IDisposable"/> interface.  Plug-ins are
            singletons in nature.  The composition container will create instances as needed and will dispose of them
            when the container is disposed of.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.IPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>This method is only called if the <see cref="P:SandcastleBuilder.Utils.BuildComponent.IPlugInMetadata.IsConfigurable"/> property
            returns true.  The configuration data will be stored in the help file builder project.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.IPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.IPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.IPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns an enumerable list of execution points that define when the plug-in
            should be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.PlugInConfiguration">
            <summary>
            This class is used to contain a plug-in's configuration and enabled state
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.PlugInConfiguration.#ctor(System.Boolean,System.String)">
            <summary>
            Internal constructor
            </summary>
            <param name="enabled">The enabled state</param>
            <param name="configuration">The configuration</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.PlugInConfiguration.Enabled">
            <summary>
            This is used to get or set the plug-in's enabled state
            </summary>
            <value>If set to false, the plug-in will not be used in the build</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildComponent.PlugInConfiguration.Configuration">
            <summary>
            This is used to get or set the plug-in's configuration information
            </summary>
            <value>This should be an XML fragment.  The root node should be named <c>configuration</c></value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildComponent.PlugInConfigurationDictionary">
            <summary>
            This dictionary class is used to hold the configurations for third party build process plug-ins such as
            the Additional Content Only plug-in.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.PlugInConfigurationDictionary.FromXml(System.String)">
            <summary>
            This is used to load existing plug-in configuration items from the project file
            </summary>
            <param name="plugIns">The plug-in items</param>
            <remarks>The information is stored as an XML fragment</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.PlugInConfigurationDictionary.ToXml">
            <summary>
            This is used to write the plug-in configuration info to an XML fragment ready for storing in the
            project file.
            </summary>
            <returns>The XML fragment containing the plug-in configuration info.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildComponent.PlugInConfigurationDictionary.Add(System.String,System.Boolean,System.String)">
            <summary>
            Add a new item to the dictionary
            </summary>
            <param name="id">The plug-in ID</param>
            <param name="enabled">True for enabled, false for disabled</param>
            <param name="config">The plug-in configuration</param>
            <returns>The <see cref="T:SandcastleBuilder.Utils.BuildComponent.PlugInConfiguration"/> added to the project.  If the ID already exists in
            the collection, the existing item is returned.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.ProjectElement">
            <summary>
            This class is a wrapper for build items in the project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.#ctor(SandcastleBuilder.Utils.SandcastleProject,Microsoft.Build.Evaluation.ProjectItem)">
            <summary>
            This constructor is used to wrap an existing project item
            </summary>
            <param name="project">The project that owns the item</param>
            <param name="existingItem">The existing item</param>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String,System.String)">
            <summary>
            This constructor is used to create a new build item and add it to the project
            </summary>
            <param name="project">The project that will own the item</param>
            <param name="itemType">The type of build item to create</param>
            <param name="itemPath">The path to the item.  This can be relative or absolute and may contain
            variable references.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ProjectElement.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.HasMetadata(System.String)">
            <summary>
            See if the named metadata item exists
            </summary>
            <param name="name">The metadata name for which to check</param>
            <returns>True if present, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.GetMetadata(System.String)">
            <summary>
            Get a metadata value from a project element
            </summary>
            <param name="name">The name of the metadata element to get</param>
            <returns>The value of the metadata element</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.SetMetadata(System.String,System.String)">
            <summary>
            Set a metadata value in the project item
            </summary>
            <param name="name">The name of the metadata element</param>
            <param name="value">The value to store in the element</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.RemoveFromProjectFile">
            <summary>
            Remove the item from the project
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.op_Equality(SandcastleBuilder.Utils.ProjectElement,SandcastleBuilder.Utils.ProjectElement)">
            <summary>
            Overload for equal operator
            </summary>
            <param name="element1">The first element object</param>
            <param name="element2">The second element object</param>
            <returns>True if equal, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.op_Inequality(SandcastleBuilder.Utils.ProjectElement,SandcastleBuilder.Utils.ProjectElement)">
            <summary>
            Overload for not equal operator
            </summary>
            <param name="element1">The first element object</param>
            <param name="element2">The second element object</param>
            <returns>True if not equal, false if they are equal</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectElement.GetHashCode">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectElement.ItemType">
            <summary>
            This is used to set or get the item type (a.k.a BuildAction)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectElement.Include">
            <summary>
            This is used to set or get the filename (Include attribute)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectElement.Project">
            <summary>
            This read-only property is used to get the containing project
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.ProjectElement.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Utility">
            <summary>
            This class contains utility and extension methods
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Utility.ShowHelpTopic(System.String)">
            <summary>
            Show a help topic in the SHFB help file
            </summary>
            <param name="topic">The topic ID to display (will be formatted as "html/[Topic_ID].htm")</param>
            <remarks>Since the standalone GUI already has a Help 1 file, we'll just display the topic
            that it contains rather than integrating an MSHC help file into the VS 2010 collection.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Utility.RunsAt(System.Collections.Generic.IEnumerable{SandcastleBuilder.Utils.BuildComponent.ExecutionPoint},SandcastleBuilder.Utils.BuildEngine.BuildStep,SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors)">
            <summary>
            This is used to determine if the enumerable list of execution points contains an entry for the
            specified build step and behavior.
            </summary>
            <param name="executionPoints">An enumerable list of execution points to check</param>
            <param name="step">The build step</param>
            <param name="behavior">The behavior</param>
            <returns>True if the enumerable list of execution points contains an entry for the specified build
            step and behavior or false if it does not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Utility.PriorityFor(System.Collections.Generic.IEnumerable{SandcastleBuilder.Utils.BuildComponent.ExecutionPoint},SandcastleBuilder.Utils.BuildEngine.BuildStep,SandcastleBuilder.Utils.BuildComponent.ExecutionBehaviors)">
            <summary>
            This is used to obtain the execution priority for a plug-in in the given build step and behavior
            </summary>
            <param name="executionPoints">An enumerable list of execution points to search</param>
            <param name="step">The build step</param>
            <param name="behavior">The behavior</param>
            <returns>The execution priority is used to determine the order in which the plug-ins will be
            executed.  Those with a higher priority value will be executed before those with a lower value.
            Those with an identical priority may be executed in any order within their group.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Utility.ReadWithEncoding(System.String,System.Text.Encoding@)">
            <summary>
            This is used to read in a file using an appropriate encoding method
            </summary>
            <param name="filename">The file to load</param>
            <param name="encoding">Pass the default encoding to use.  On return, it contains the actual encoding
            for the file.</param>
            <returns>The contents of the file</returns>
            <remarks>When reading the file, it uses the default encoding specified but detects the encoding if
            byte order marks are present.  In addition, if the template is an XML file and it contains an
            encoding identifier in the XML tag, the file is read using that encoding.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.XPath.MatchesRegexFunction">
             <summary>
             This class is a custom XPath function used to perform a regular
             expression search in XPath queries.
             </summary>
             <remarks>The function should be passed a value to compare, the regular
             expression to use, and a Boolean indicating whether or not to do a
             case-insensitive match.</remarks>
             <example>
             Some examples of XPath queries using the function:
             <code lang="none">
             //apis/api[matches-regex(string(@id), 'utils.*proj', boolean(true))
            
             //apis/api[matches-regex(string(@id), 'Proj|Filt|Excep', boolean(false))
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.MatchesRegexFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
            <summary>
            This is called to invoke the <b>matches-regex</b> method.
            </summary>
            <param name="xsltContext">The XSLT context for the function call</param>
            <param name="args">The arguments for the function call</param>
            <param name="docContext">The context node for the function call</param>
            <returns>An object representing the return value of the function
            (true for a match, false for no match).</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the
            number of arguments for the function is not three.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.MatchesRegexFunction.ArgTypes">
            <summary>
            Gets the supplied XPath types for the function's argument list.
            This information can be used to discover the signature of the
            function which allows you to differentiate between overloaded
            functions.
            </summary>
            <value>Always returns an array with two String types and a Boolean
            type specified</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.MatchesRegexFunction.Minargs">
            <summary>
            Gets the minimum number of arguments for the function. This enables
            the user to differentiate between overloaded functions.
            </summary>
            <value>Always returns three</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.MatchesRegexFunction.Maxargs">
            <summary>
            Gets the maximum number of arguments for the function. This enables
            the user to differentiate between overloaded functions.
            </summary>
            <value>Always returns three</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.MatchesRegexFunction.ReturnType">
            <summary>
            Gets the XPath type returned by the function
            </summary>
            <value>Always returns Boolean</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Properties.Resources.ProjectTemplate">
             <summary>
               Looks up a localized string similar to &lt;Project DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot; ToolsVersion=&quot;4.0&quot;&gt;
            	&lt;PropertyGroup&gt;
            		&lt;!-- The configuration and platform will be used to determine which assemblies to include from solution and
            				 project documentation sources --&gt;
            		&lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
            		&lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
            
            		&lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
            		&lt;ProjectGuid&gt;$guid1$&lt;/ProjectGuid&gt;
            		&lt;SHFBS [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Properties.Resources.SandcastleLogo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Properties.Resources.Spinner">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamingMethod">
            <summary>
            This public enumerated type defines the naming method to use for the help topic filenames
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.Guid">
            <summary>Use the default GUID file naming method (actually an MD5 hash of the member ID in GUID
            form).</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.MemberName">
            <summary>Use the member name without parameters as the filename.  The characters ":", ".", "#", and
            "`" in the name are replaced with an underscore (i.e. T:CustomType becomes T_CustomType,
            M:CustomType.#ctor becomes M_CustomType__ctor, P:CustomType.Property becomes P:CustomType_Property,
            etc).  Duplicate names will have an incrementing value appended to the end of the name (i.e.
            M_CustomType_Method, M_CustomType.Method_1, M_CustomType_Method_2, etc).</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.NamingMethod.HashedMemberName">
            <summary>Use the hashed member name without parameters as the filename.  No character replacements
            are made for this option and the <b>GetHashCode</b> method is used to generate the hash value and it
            is formatted as a hex value.  This is useful for extremely long type names that cause the filename
            to exceed the maximum length when the full path is included.  Duplicate names will have an
            incrementing value appended to the name prior to creating the hash value as needed.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.VisibleItems">
            <summary>
            This public enumerated type defines the optional visible items in the help file
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.None">
            <summary>None of the optional items are documented.  Only public types and members will be documented.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Attributes">
            <summary>Document attributes.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.ExplicitInterfaceImplementations">
            <summary>Document explicit interface implementations.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedMembers">
            <summary>Document inherited members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedFrameworkMembers">
            <summary>Document inherited framework members.  For this to work, <c>InheritedMembers</c> must also
            be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedFrameworkInternalMembers">
            <summary>Document inherited internal framework members.  For this to work <c>InheritedFrameworkMembers</c>
            must also be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.InheritedFrameworkPrivateMembers">
            <summary>Document inherited private framework members.  For this to work <c>InheritedFrameworkMembers</c>
            must also be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Internals">
            <summary>Document internal members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Privates">
            <summary>Document private members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.PrivateFields">
            <summary>Document private fields.  For this to work, <c>Privates</c> must also be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.Protected">
            <summary>Document protected members.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.SealedProtected">
            <summary>Document protected members of sealed classes.  For this to work, <c>Protected</c> must also
            be enabled.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.ProtectedInternalAsProtected">
            <summary>Document "protected internal" members as "protected" only.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.NoPIATypes">
            <summary>Document no-PIA (Primary Interop Assembly) embedded COM types.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.VisibleItems.PublicCompilerGenerated">
            <summary>Include public compiler generated types/members.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.LanguageResourceConverter">
            <summary>
            This type converter allows you to select a culture from a list representing a set of available language
            resource folders.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.InitializeStandardValues">
            <summary>
            This is used to get the standard values by searching for the language-specific stop word list files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.GetCultureName(System.Globalization.CultureInfo)">
            <summary>
            This is overridden to return the display name so that the class
            works as it did in prior .NET versions.
            </summary>
            <param name="culture">The culture for which to get the name</param>
            <returns>The culture's display name</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This is overridden to return the values for the type converter's
            dropdown list.
            </summary>
            <param name="context">The format context object</param>
            <returns>Returns the standard values for the type</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.LanguageResourceConverter.StandardValues">
            <summary>
            This read-only property returns the values in the collection
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.LanguageResourceConverter.CultureInfoComparer">
            <summary>
            This is used to compare two culture info objects by display name
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.LanguageResourceConverter.CultureInfoComparer.Compare(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Compare two items
            </summary>
            <param name="x">The first item to compare</param>
            <param name="y">The second item to compare</param>
            <returns>-1 if item 1 is less than item 2, 0 if they are equal,
            or 1 if item 1 is greater than item 2.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.RefreshableItemListBox">
            <summary>
            This is a a simple derived list box in which you can refresh a
            specified item to show updates to the text displayed in the list box
            for the item.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.RefreshableItemListBox.Refresh(System.Int32)">
            <summary>
            Refresh the specified item in the list box
            </summary>
            <param name="index">The index of the item to refresh</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileDialogType">
            <summary>
            The type of file dialog to display
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.FileDialogType.FileOpen">
            <summary>Display a File Open dialog box</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.FileDialogType.FileSave">
            <summary>Display a File Save dialog box</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FileDialogAttribute">
            <summary>
            This attribute is used to associate file dialog parameters with a
            class property for use in editing it in a property grid.
            </summary>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FilePathStringEditor"/>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FilePathObjectEditor"/>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileDialogAttribute.#ctor(System.String,System.String,SandcastleBuilder.Utils.Design.FileDialogType)">
            <summary>
            Constructor
            </summary>
            <param name="title">The title for the file dialog</param>
            <param name="filter">The filter to use for the file dialog</param>
            <param name="dialogType">The type of file dialog to display</param>
            <overloads>There are two overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FileDialogAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="title">The title for the file dialog</param>
            <remarks>The filter defaults to "All Files (*.*)|*.*" and
            the dialog type defaults to <b>FileOpen</b></remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.Title">
            <summary>
            This is used to get the file dialog title
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.Filter">
            <summary>
            This is used to get the file dialog filter
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FileDialogAttribute.DialogType">
            <summary>
            This is used to get the file dialog type
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.FolderDialogAttribute">
            <summary>
            This attribute is used to associate folder dialog parameters with a
            class property for use in editing it in a property grid.
            </summary>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FolderPathStringEditor"/>
            <seealso cref="T:SandcastleBuilder.Utils.Design.FolderPathObjectEditor"/>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String,System.Boolean,System.Environment.SpecialFolder,System.Environment.SpecialFolder)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <param name="showNewFolderButton">True to show the New Folder
            button or false to hide it.</param>
            <param name="rootFolder">The root folder used to limit browsing.</param>
            <param name="defaultFolder">The default folder from which to
            start browsing.</param>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <remarks>The New Folder button is hidden and browsing starts
            at the desktop.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.FolderDialogAttribute.#ctor(System.String,System.Environment.SpecialFolder)">
            <summary>
            Constructor
            </summary>
            <param name="description">The description for the folder dialog</param>
            <param name="defaultFolder">The default folder from which to
            start browsing.</param>
            <remarks>The New Folder button is hidden and browsing starts
            at the desktop.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.Description">
            <summary>
            This is used to get the folder dialog description
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.ShowNewFolderButton">
            <summary>
            This is used to get whether or not to show the New Folder button
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.RootFolder">
            <summary>
            This is used to get the root folder used to limit browsing
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Design.FolderDialogAttribute.DefaultFolder">
            <summary>
            This is used to get the default folder from which to start browsing
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.DividerLabel">
            <summary>
            This is a simple derived label control that draws the label text
            followed by a dividing line to the right of the text.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerLabel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.DividerLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This is overridden to draw the text and the dividing line
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:SandcastleBuilder.Utils.DocumentationSource">
            <summary>
            This represents an assembly, an XML comments file, a Visual Studio managed code project (C#, VB.NET,
            etc.), or a Visual Studio solution containing one or more managed code projects from which information
            is obtained to build a help file.
            </summary>
            <remarks>Wildcards are supported in the <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> property.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.#ctor(System.String,System.String,System.String,System.Boolean,SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Internal constructor
            </summary>
            <param name="filename">The filename of the documentation source</param>
            <param name="configuration">The configuration to use for projects</param>
            <param name="platform">The platform to use for projects</param>
            <param name="includeSubfolders">True to include subfolders, false to only search the top-level folder</param>
            <param name="basePathProvider">The base path provider</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.DocumentationSource.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.Equals(System.Object)">
            <summary>
            See if specified item equals this one
            </summary>
            <param name="obj">The object to compare to this one</param>
            <returns>True if equal, false if not</returns>
            <remarks>For documentation sources, equality is based solely on the <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> value.
            The configuration and platform settings are not considered.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.GetHashCode">
            <summary>
            Get a hash code for this item
            </summary>
            <returns>Returns the hash code for the assembly path and XML comments path.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.ToString">
            <summary>
            Return a string representation of the item
            </summary>
            <returns>Returns the assembly path and XML comments path separated by a comma.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.Projects(System.String,System.String)">
            <summary>
            This returns an enumerable list of MSBuild project file configurations based on the current settings
            and the given configuration and platform.
            </summary>
            <param name="configurationName">The configuration to use</param>
            <param name="platformName">The platform to use</param>
            <returns>An enumerable list of project configurations matching the <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> path.
            Sub-folders are only included if <see cref="P:SandcastleBuilder.Utils.DocumentationSource.IncludeSubFolders"/> is set to true.  Any solution files
            (.sln) found are returned last, each followed by the projects extracted from them.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.ProjectsIn(System.String)">
            <summary>
            This is used to get a list of all projects in a solution file regardless of configuration and
            platform.
            </summary>
            <param name="solutionFile">The solution filename from which to get the project names</param>
            <returns>An enumerable list of the projects within the solution regardless of configuration or
            platform build combinations in which they are enabled.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSource.ExtractProjectsFromSolution(System.String,System.String,System.String)">
            <summary>
            Extract all project files from the given Visual Studio solution file
            </summary>
            <param name="solutionFile">The Visual Studio solution from which to extract the projects.</param>
            <param name="configuration">The configuration to use</param>
            <param name="platform">The platform to use</param>
            <returns>An enumerable list of project configurations that were extracted from the solution</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.Configuration">
            <summary>
            This is used to get or set the project configuration to use when the source path refers to a Visual
            Studio solution or project.
            </summary>
            <value>If not set, the configuration value from the owning help file project will be used.  This will
            be ignored for assembly and XML comments file entries.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.Platform">
            <summary>
            This is used to get or set the project platform to use when the source path refers to a Visual Studio
            solution or project.
            </summary>
            <value>If not set, the platform value from the owning help file project will be used.  This will be
            ignored for assembly and XML comments file entries.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile">
            <summary>
            This is used to set or get the documentation source file path
            </summary>
            <value>Wildcards are supported.  If used, all files matching the wildcard will be included as long as
            their extension is one of the following: .exe, .dll, .winmd, .*proj, .sln.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.IncludeSubFolders">
            <summary>
            This is used to get or set whether subfolders are included when searching for files if the
            <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> value contains wildcards.
            </summary>
            <value>If set to true and the source file value contains wildcards, subfolders will be included.  If
            set to false, the default, or the source file value does not contain wildcards, only the top-level
            folder is included in the search.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.SourceDescription">
            <summary>
            This returns a description of the entry suitable for display in a bound list control or property grid
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.DocumentationSource.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.Assemblies">
            <summary>
            This read-only property returns an enumerable list of assemblies based on the current settings
            </summary>
            <returns>An enumerable list of assemblies matching the <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> path.  Sub-folders
            are only included if <see cref="P:SandcastleBuilder.Utils.DocumentationSource.IncludeSubFolders"/> is set to true.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.DocumentationSource.CommentsFiles">
            <summary>
            This read-only property returns an enumerable list of XML comments files based on the current settings
            </summary>
            <returns>An enumerable list of XML comments files matching the <see cref="P:SandcastleBuilder.Utils.DocumentationSource.SourceFile"/> path.
            Sub-folders are only included if <see cref="P:SandcastleBuilder.Utils.DocumentationSource.IncludeSubFolders"/> is set to true.</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.DocumentationSourceCollection">
            <summary>
            This collection class is used to hold the documentation sources and can be used for editing them
            </summary>
            <remarks>A documentation source is an assembly, an XML comments file, a Visual Studio managed code
            project (C#, VB.NET, etc.), or a Visual Studio solution containing one or more managed code projects from
            which information is obtained to build a help file.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSourceCollection.#ctor(SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Constructor
            </summary>
            <param name="project">The project that owns the collection</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSourceCollection.FromXml(System.String)">
            <summary>
            This is used to load existing documentation sources from the project file
            </summary>
            <param name="docSources">The documentation source items</param>
            <remarks>The information is stored as an XML fragment</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSourceCollection.ToXml">
            <summary>
            This is used to write the documentation source info to an XML fragment ready for storing in the
            project file.
            </summary>
            <returns>The XML fragment containing the documentation sources</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSourceCollection.Add(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a new item to the collection
            </summary>
            <param name="filename">The filename to add</param>
            <param name="config">The configuration to use for projects</param>
            <param name="platform">The platform to use for projects</param>
            <param name="subFolders">True to include subfolders, false to only search the top-level folder</param>
            <returns>The <see cref="T:SandcastleBuilder.Utils.DocumentationSource"/> added to the project or the existing item if the
            filename already exists in the collection.</returns>
            <remarks>The <see cref="T:SandcastleBuilder.Utils.DocumentationSource"/> constructor is internal so that we control creation
            of the items and can associate them with the project.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.DocumentationSourceCollection.SaveToProject">
            <summary>
            Save the documentation source collection to the associated project
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MissingTags">
            <summary>
            This public enumerated type defines the missing documentation tags for
            which to search.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.None">
            <summary>Do not search for any missing tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Summary">
            <summary>Search for missing <c>&lt;summary&gt;</c> tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Parameter">
            <summary>Search for missing <c>&lt;param&gt;</c> tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Returns">
            <summary>Search for missing <c>&lt;returns&gt;</c> tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Value">
            <summary>Search for missing <c>&lt;value&gt;</c> tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Remarks">
            <summary>Search for missing <c>&lt;remarks&gt;</c> tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.AutoDocumentCtors">
            <summary>Automatically document constructors if they are missing a
            <c>&lt;summary&gt;</c> tag.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.Namespace">
            <summary>Search for missing namespace comments.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.TypeParameter">
            <summary>Search for missing &lt;typeparam&gt; tags.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.IncludeTargets">
            <summary>Search for missing &lt;include&gt; target documentation.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MissingTags.AutoDocumentDispose">
            <summary>Automatically document dispose methods if they are missing
            <c>&lt;summary&gt;</c> and/or <c>&lt;param&gt;</c> tag.</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamespaceSummaryItem">
            <summary>
            This represents a a namespace summary item that can be used to add comments to a namespace in the help
            file or exclude it completely from the help file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="itemName">The namespace's name</param>
            <param name="isGroup">This indicates whether or not the namespace is a group namespace</param>
            <param name="isDocumented">This indicates whether or not the namespace is to be documented</param>
            <param name="summaryText">The summary text</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItem.ToString">
            <summary>
            Return the namespace name as the string representation of the object
            </summary>
            <returns>The namespace name</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.Name">
            <summary>
            This read-only property is used to get the namespace name
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.IsGroup">
            <summary>
            This read-only property is used to check whether or not this is a namespace group
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.IsDocumented">
            <summary>
            This is used to get or set whether or not the namespace is included in the help file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.Summary">
            <summary>
            This is used to get or set the namespace summary comments
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItem.IsDirty">
            <summary>
            This read-only property can be used to determine if the namespace summary item was changed
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.NamespaceSummaryItemCollection">
            <summary>
            This collection class is used to hold the namespace summary items for a project
            </summary>
            <remarks>Namespaces that appear in the assemblies but not in this list are documented by default and
            will appear without a namespace summary.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.FromXml(System.String)">
            <summary>
            This is used to load existing namespace summary items from the project file
            </summary>
            <param name="namespaceSummaries">The namespace summary items</param>
            <remarks>The information is stored as an XML fragment</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.ToXml">
            <summary>
            This is used to write the namespace summary info to an XML fragment ready for storing in the project
            file.
            </summary>
            <returns>The XML fragment containing the namespace summary info</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Add(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Add a new item to the collection
            </summary>
            <param name="name">The namespace name</param>
            <param name="isGroup">True if this is a grouping namespace, false if this is normal namespace</param>
            <param name="isDocumented">True for documented, false for not documented</param>
            <param name="summary">The summary text</param>
            <returns>The <see cref="T:SandcastleBuilder.Utils.NamespaceSummaryItem"/> added to the project.  If the namespace already
            exists in the collection, the existing item is returned.</returns>
            <remarks>The <see cref="T:SandcastleBuilder.Utils.NamespaceSummaryItem"/> constructor is internal so that we control creation
            of the items and can associate them with the project.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.CreateTemporaryItem(System.String,System.Boolean)">
            <summary>
            Create a temporary item that isn't part of the project
            </summary>
            <param name="name">The namespace name</param>
            <param name="isGroup">True if this is a grouping namespace, false if this is normal namespace</param>
            <returns>The <see cref="T:SandcastleBuilder.Utils.NamespaceSummaryItem"/> that can later be added to the project if necessary</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the given namespace already exists in the
            collection.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Project">
            <summary>
            This is used to get or set a reference to the project that owns the collection
            </summary>
            <remarks>This is used by collection editors to get a reference to the owning project</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.NamespaceSummaryItemCollection.Item(System.String)">
            <summary>
            Indexer.  This can be used to retrieve the summary information for the specified namespace
            </summary>
            <param name="name">The namespace for which to search</param>
            <returns>The namespace summary information if found or null if not found</returns>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.StatusBarTextProvider">
            <summary>
            This is an <see cref="T:System.ComponentModel.IExtenderProvider"/> component that allows you
            to add status bar text for menu items and form controls.  When built
            for use with .NET 2.0, it also supports adding status bar text for
            menu strip, tool strip, and status strip components.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructor.  This one takes a reference to a container.
            </summary>
            <param name="container">The container for the component</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True to release both managed and unmanaged
            resources, false to just release unmanaged resources.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.CanExtend(System.Object)">
            <summary>
            This is implemented to determine if the component can be extended
            with the extra properties.
            </summary>
            <param name="extendee">The object to check</param>
            <returns>True if it can be extended, false if not</returns>
            <remarks><see cref="T:System.Windows.Forms.MenuItem"/> components and everything derived
            from <b>ToolStripItem</b> (.NET 2.0) and
            <see cref="T:System.Windows.Forms.Control"/> are extended with the <b>StatusBarText</b>
            and <b>ShowAsBlank</b> properties with the following exceptions:
            <b>Form</b>, <b>Label</b>, <b>PictureBox</b>, <b>ProgressBar</b>,
            <b>ScrollBar</b>, <b>Splitter</b>, <b>StatusBar</b>,
            <b>ToolBar</b>, <b>ToolStrip</b> (.NET 2.0) and controls derived
            from them.  The <b>Form</b> contain controls and the other controls
            cannot receive the focus needed to display the text so there is no
            point in giving them status bar text.  The exception to the above
            rule is <b>LinkLabel</b> which can receive the focus and thus can
            be extended.  <b>ToolStripItem</b> components are only supported
            when built for use with .NET 2.0.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.GetStatusBarText(System.ComponentModel.Component)">
            <summary>
            This is used to retrieve the status bar text for a component.
            </summary>
            <param name="comp">The component for which to get the status bar
            text</param>
            <returns>The message string if found or null if not found</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetStatusBarText(System.ComponentModel.Component,System.String)">
            <summary>
            This stores the status bar text for the specified component.
            </summary>
            <param name="comp">The component associated with the message</param>
            <param name="message">The status bar text for the component</param>
            <remarks>The designer converts strings containing nothing but
            spaces to empty strings and won't serialize them to code.  If you
            want a blank string to display, use <see cref="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetShowAsBlank(System.ComponentModel.Component,System.Boolean)"/>
            to set the "show as blank" flag to true instead.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.GetShowAsBlank(System.ComponentModel.Component)">
            <summary>
            This is used to retrieve the "show as blank" flag for a menu item
            or control.
            </summary>
            <param name="comp">The item for which to get the flag</param>
            <returns>True if it will show a blank status bar message or false
            if not.</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.SetShowAsBlank(System.ComponentModel.Component,System.Boolean)">
            <summary>
            This stores the "show as blank" flag for the specified component.
            </summary>
            <param name="comp">The component associated with the property</param>
            <param name="showBlank">The flag value for the component</param>
            <remarks>The designer converts strings containing nothing but
            spaces to empty strings and this equates to the default and the
            value is not serialized to code. If you want a blank string to
            display, set this property to true instead.  This property takes
            precedence over the <b>StatusBarText</b> property.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the component
            is null or if it is not a menu item, control, or a tool strip item.
            </exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="maximum">The maximum value</param>
            <overloads>There are six overloads for this method.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="maximum">The maximum value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="current">The current value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InitializeProgressBar(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            This can be used to initialize the status strip progress bar
            controls.
            </summary>
            <param name="minimum">The minimum value</param>
            <param name="maximum">The maximum value</param>
            <param name="current">The current value</param>
            <param name="step">The step value for the progress bar</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <remarks>This version updates the progress by the step
            value.</remarks>
            <overloads>There are four overloads for this method</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.String)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="progressNote">A note for the progress note status
            label control.</param>
            <remarks>This version updates the progress by the step
            value and updates the progress note.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.Int32)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="current">The current value</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.UpdateProgress(System.Int32,System.String)">
            <summary>
            This can be used to update the progress bar with a new value
            </summary>
            <param name="current">The current value</param>
            <param name="progressNote">A note for the progress note status
            label control.  If null, the current text is left alone.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ResetProgressBar">
            <summary>
            This can be used to reset the status strip progress bar
            to its minimum value.
            </summary>
            <remarks>This version resets the progress bar to zero and
            clears the progress note.</remarks>
            <overloads>There are two overloads for this method.</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ResetProgressBar(System.String)">
            <summary>
            This can be used to reset the status strip progress bar
            to its minimum value and display a new progress message.
            </summary>
            <param name="progressNote">The progress note to display in
            the progress note status label.  If set to null, the
            message is cleared.</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar">
             <summary>
             This is used to set or get the default status bar component to use
             for displaying the status bar text messages.
             </summary>
             <value>This property is static and must be set at some point
             during application initialization.  This component will be used
             unless the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/> property is set to
             override it.
             </value>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
             <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
             <example>
             <code>
             // Define the default status bar to use in the main form's
             // constructor
             public MainForm()
             {
                 InitializeComponent();
            
                 //=========
                 // .NET 1.1
                 //=========
                 // Tell the StatusBarTextProvider component the status bar
                 // to use.
                 StatusBarTextProvider.ApplicationStatusBar = sbStatusBar;
            
                 // You can also use any panel you like.  The default is zero
                 // (the left-most panel).  For the demo, we'll use the one
                 // in the middle.
                 StatusBarTextProvider.ApplicationDisplayPanel = 1;
            
                 //=========
                 // .NET 2.0
                 //=========
                 // Tell the StatusBarTextProvider component the component
                 // to use to display the text.  When using a tool strip
                 // component, the ApplicationDisplayPanel property is ignored.
                 StatusBarTextProvider.ApplicationStatusBar = tslStatusText;
            
                 // Define the status label and progress bar too.  This allows
                 // easy access to those items from anywhere within the
                 // application.
                 StatusBarTextProvider.StatusLabel = tslProgressNote;
                 StatusBarTextProvider.ProgressBar = tspbProgressBar;
             }
             </code>
             <code lang="vbnet">
             ' Define the default status bar to use in the main form's
             ' constructor
             Public Sub New()
                 MyBase.New()
            
                 InitializeComponent()
            
                 '=========
                 ' .NET 1.1
                 '=========
                 ' Tell the StatusBarTextProvider component the status bar
                 ' to use.
                 StatusBarTextProvider.ApplicationStatusBar = sbStatusBar;
            
                 ' You can also use any panel you like.  The default is zero
                 ' (the left-most panel).  For the demo, we'll use the one
                 ' in the middle.
                 StatusBarTextProvider.ApplicationDisplayPanel = 1;
            
                 '=========
                 ' .NET 2.0
                 '=========
                 ' Tell the StatusBarTextProvider component the component
                 ' to use to display the text.  When using a tool strip
                 ' component, the ApplicationDisplayPanel property is ignored.
                 StatusBarTextProvider.ApplicationStatusBar = tslStatusText;
            
                 ' Define the status label and progress bar too.  This allows
                 ' easy access to those items from anywhere within the
                 ' application.
                 StatusBarTextProvider.StatusLabel = tslProgressNote;
                 StatusBarTextProvider.ProgressBar = tspbProgressBar;
             End Sub
             </code>
             </example>
             <exception cref="T:System.ArgumentException">This is thrown if the object
             is not a status bar control or a tool strip item.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel">
            <summary>
            This is used to set or get the status bar panel in which to
            display the messages in the common application status bar.
            </summary>
            <value>This property is static and must be set at some point
            during application initialization.  This display panel will be
            used unless the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/> property is set
            to override the status bar used.  In that case, the
            <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/> is used instead.
            <p/>The default is zero (the first panel).  If the status bar does
            not have panels, the index exceeds the panel count, or the status
            bar's <see cref="P:System.Windows.Forms.StatusBar.ShowPanels"/>
            property is false, messages will be shown in the status bar's
            <b>Text</b> property instead.  This property is ignored if using a
            tool strip item to display the text.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDefaultText">
            <summary>
            This is used to set or get the default text to show when no item
            has the focus or no status text for the application status bar.
            </summary>
            <value>By default, it will be set to the text in the selected
            status bar component.  If you set it to a different value, set
            this property after specifying the status bar control to use.
            </value>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.StatusLabel">
            <summary>
            This is used to get or set the tool strip status label component
            that can be used to display a status message in conjunction with
            the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ProgressBar"/> component.
            </summary>
            <remarks>This property is only available when used with .NET 2.0.
            </remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ProgressBar">
            <summary>
            This is used to get or set the tool strip progress bar component
            that can be used to display progress through a long running task.
            </summary>
            <remarks>This can be used in conjunction with
            <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.StatusLabel"/>.  This property is only available when
            used with .NET 2.0.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar">
            <summary>
            This is used to get or set the status bar component to use for this
            instance.
            </summary>
            <value>If not set or set to null, it will use the status bar
            control assigned to the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            property.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel"/>
            <exception cref="T:System.ArgumentException">This is thrown if the object
            is not a status bar control or a tool strip item.</exception>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDisplayPanel">
            <summary>
            This is used to set or get the status bar panel in which to
            display the messages when the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
            property is set to a status bar.
            </summary>
            <value>The default is zero (the first panel).  If the status
            bar does not have panels, the index exceeds the panel count,
            or the status bar's
            <see cref="P:System.Windows.Forms.StatusBar.ShowPanels"/> property
            is false, messages will be shown in the status bar's <b>Text</b>
            property instead.  If using the <see cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>,
            this property is ignored.  It is also ignored if using a tool
            strip item to display the text.</value>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationStatusBar"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.ApplicationDisplayPanel"/>
            <seealso cref="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceStatusBar"/>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.InstanceDefaultText">
            <summary>
            This is used to set or get the default text to show when no item
            has the focus or no status text for the instance status bar.
            </summary>
            <value>By default, it will be set to the text in the selected
            status bar component.  If set to a different value, set this
            property after specifying the status bar control to use.
            </value>
        </member>
        <member name="T:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions">
            <summary>
            This class contains the options for the items that need status bar
            text.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="msg">The message text to display</param>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="showBlank">The "show as blank" flag</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.Message">
            <summary>
            Set or get the message text
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.Controls.StatusBarTextProvider.PropertyOptions.ShowAsBlank">
            <summary>
            The "show as blank" flag
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.SandcastleProject">
            <summary>
            This class represents all of the properties that make up a Sandcastle Help File Builder project
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SandcastleProject.DefaultConfiguration">
            <summary>The default configuration</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SandcastleProject.DefaultPlatform">
            <summary>The default platform</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SandcastleProject.SchemaVersion">
            <summary>
            The schema version used in the saved project files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ResolvePath(System.String)">
            <summary>
            This method resolves any MSBuild environment variables in the path objects
            </summary>
            <param name="path">The path to use</param>
            <returns>A copy of the path after performing any custom resolutions</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ContentFiles(SandcastleBuilder.Utils.BuildAction)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.#ctor">
            <summary>
            Private constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Load a Sandcastle Builder project from the given filename
            </summary>
            <param name="filename">The filename to load</param>
            <param name="mustExist">Specify true if the file must exist or false if a new project should be
            created if the file does not exist.</param>
            <param name="useFinalValues">True to use final evaluated property values, or false to use the
            unevaluated property values.  For builds, this should always be true.  If loading the project for
            editing, it should always be false.</param>
            <exception cref="T:System.ArgumentException">This is thrown if a filename is not specified or if it does not
            exist and <c>mustExist</c> is true.</exception>
            <overloads>There are three overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.#ctor(Microsoft.Build.Evaluation.Project)">
            <summary>
            This is used to create a Sandcastle Builder project from an existing MSBuild project instance
            </summary>
            <param name="existingProject">The existing project instance</param>
            <remarks>It is assumed that the project has been loaded, the property values are current, and that
            the configuration and platform have been set in the MSBuild project global properties in order to
            get the correct final values.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.Finalize">
            <summary>
            This handles garbage collection to ensure proper disposal of the Sandcastle project if not done
            explicitly with <see cref="M:SandcastleBuilder.Utils.SandcastleProject.Dispose"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.Dispose">
            <summary>
            This properly disposes of the Sandcastle project
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.InitializePropertyCache">
            <summary>
            This is used to initialize the local property info and property descriptor caches
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.OnCharacterMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Replace a \xNN value in the copyright text with its actual character
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.OnBuildVarMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Resolve references to MSBuild variables in a path value
            </summary>
            <param name="match">The match that was found</param>
            <returns>The string to use as the replacement</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.LoadProperties">
            <summary>
            This is used to load the properties from the project file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.SetLocalProperty(System.String,System.String)">
            <summary>
            This is used to set the named property to the specified value using Reflection
            </summary>
            <param name="name">The name of the property to set</param>
            <param name="value">The value to which it is set</param>
            <remarks>Property name matching is case insensitive as are the values.  This is used to allow setting
            of simple project properties (non-collection) from the MSBuild project file.  Unknown properties are
            ignored.</remarks>
            <exception cref="T:System.ArgumentNullException">This is thrown if the name parameter is null or an empty
            string.</exception>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if an error occurs while trying to set the named
            property.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ConvertOldFrameworkVersion(System.String)">
            <summary>
            This is used to convert old SHFB project framework version values to the new framework version values
            </summary>
            <param name="oldValue">The old value to convert</param>
            <returns>The equivalent new value</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.DefaultBuildAction(System.String)">
            <summary>
            This is used to determine the default build action for a file based on its extension
            </summary>
            <param name="filename">The filename to use</param>
            <returns>The build action based on the extension</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.IsValidUserDefinedPropertyName(System.String)">
            <summary>
            This is used to determine whether or not the given name can be used for a user-defined project
            property.
            </summary>
            <param name="name">The name to check</param>
            <returns>True if it can be used, false if it cannot be used</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.AddFolderToProject(System.String)">
            <summary>
            Add a new folder build item to the project
            </summary>
            <param name="folder">The folder name</param>
            <returns>The new <see cref="T:SandcastleBuilder.Utils.FileItem"/>.</returns>
            <remarks>If the folder does not exist in the project, it is added and created if not already there.
            If the folder is already part of the project, the existing item is returned.</remarks>
            <exception cref="T:System.ArgumentException">This is thrown if the path matches the project root path or is
            not below it.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.AddFileToProject(System.String,System.String)">
            <summary>
            Add a new file build item to the project
            </summary>
            <param name="sourceFile">The source filename</param>
            <param name="destFile">The optional destination path.  If empty, null, or it does not start with the
            project folder, the file is copied to the root folder of the project.</param>
            <returns>The new <see cref="T:SandcastleBuilder.Utils.FileItem"/></returns>
            <remarks>If the file does not exist in the project, it is copied to the destination path or project
            folder if not already there.  The default build action is determined based on the filename's
            extension.  If the file is already part of the project, the existing item is returned.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.FindFile(System.String)">
            <summary>
            This is used to locate a file by name in the project
            </summary>
            <param name="fileToFind">The fully qualified file path to find</param>
            <returns>The file item if found or null if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.RefreshProjectProperties">
            <summary>
            This refreshes the project instance property values by reloading them from the underlying MSBuild
            project.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.SaveProject(System.String)">
            <summary>
            This is used to save the project file
            </summary>
            <param name="filename">The filename for the project</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.HasItems(SandcastleBuilder.Utils.BuildAction)">
            <summary>
            This returns true if the project contains items using the given build action
            </summary>
            <param name="buildAction">The build action for which to check</param>
            <returns>True if at least one item has the given build action or false if there are no items with
            the given build action.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.SandcastleProject.ReplacementValueFor(System.String)">
            <summary>
            This is used by the replacement tag handler to get simple project property values that require no
            other modification or simple ones that can be handled here.
            </summary>
            <param name="name">The property name for which to get the value</param>
            <returns>The property value as a string if found or null if not found.  If the property name starts
            with "HtmlEnc", the return value is HTML encoded.  Boolean values and those ending with "SdkLinkType"
            are converted to lowercase for use in XML attribute values.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ProjectPropertyCache">
            <summary>
            This read-only property returns the MSBuild project property cache
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MSBuildProject">
            <summary>
            This read-only property is used to get the underlying MSBuild project
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.UsingFinalValues">
            <summary>
            This read-only property is used to get whether or not the project is using final values for the
            project properties.
            </summary>
            <value>If true, final values (i.e. evaluated values used at build time) are being returned by the
            properties in this instance.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Filename">
            <summary>
            This read-only property is used to get the filename for the project
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Configuration">
            <summary>
            This is used to get or set the configuration to use when building the project
            </summary>
            <value>This value is used for project documentation sources and project references so that the
            correct items are used from them.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Platform">
            <summary>
            This is used to get or set the platform to use when building the project
            </summary>
            <value>This value is used for project documentation sources and project references so that the
            correct items are used from them.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MSBuildOutDir">
            <summary>
            This is used to get or set the MSBuild <c>OutDir</c> property value that is defined when using Team
            Build.
            </summary>
            <value>This value is used for project documentation sources and project references so that the
            correct items are used from them.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.IsDirty">
            <summary>
            This is used to get the dirty state of the project
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.LogFileLocation">
            <summary>
            This read-only property is used to get the build log file location
            </summary>
            <value>If <see cref="P:SandcastleBuilder.Utils.SandcastleProject.BuildLogFile"/> is set, it returns its value.  If not set, it returns the full
            path created by using the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath"/> property value and a filename of
            <strong>LastBuild.log</strong>.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentationSources">
            <summary>
            This read-only property returns an enumerable list of documentation sources to use in building the
            help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FileItems">
            <summary>
            This returns an enumerable list of all build items in the project that represent folders and files
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ImagesReferences">
            <summary>
            This read-only property returns an enumerable list of image references contained in the project
            </summary>
            <returns>An enumerable list of image references if any are found in the project</returns>
            <remarks>Only images with IDs are returned</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.TransformComponentArguments">
            <summary>
            This returns an enumerable list of transform component arguments
            </summary>
            <remarks>These are passed as arguments to the XSL transformations used by the <b>BuildAssembler</b>
            <c>TransformComponent</c>.</remarks>
            <returns>An enumerable list of transform component arguments</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.UserDefinedProperties">
            <summary>
            This read-only property returns an enumerable list of all user-defined properties
            </summary>
            <returns>An enumerable list of all properties determined not to be help file builder project
            properties, MSBuild build engine related properties, or environment variables.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ProjectSummary">
            <summary>
            This read-only property is used to get the project summary comments
            </summary>
            <remarks>These notes will appear in the root namespaces page if entered</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.NamespaceSummaries">
            <summary>
            This read-only property returns the list of namespace summaries
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ComponentPath">
            <summary>
            This property is used to get or set the path to a folder containing additional, project-specific
            build components.
            </summary>
            <value>If left blank, the current project's folder is searched instead</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelp1xCompilerPath">
            <summary>
            This property is used to get or set the path to the HTML Help 1 compiler (HHC.EXE)
            </summary>
            <value>You only need to set this if the builder cannot determine the path for itself</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath">
            <summary>
            This property is used to get or set the path to which the help files will be generated
            </summary>
            <remarks><para>The default is to create it in a folder called <strong>.\Help</strong> in the same
            folder as the project file.</para>
            
            <para><strong>Warning:</strong> If building a web site, the output folder's prior content will be
            erased without warning prior to copying the new web site content to it!</para></remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.WorkingPath">
            <summary>
            This is used to get or set the path to the working folder used during the build process to store the
            intermediate files.
            </summary>
            <value><para>This can be used to perform the build in a different location with a shorter path if you
            encounter errors due to long file path names.  If not specified, it defaults to a folder called
            <strong>.\Working</strong> under the folder specified by the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath"/> property.</para>
            
            <para><strong>Warning:</strong> All files and folders in the path specified in this property will be
            erased without warning when the build starts.</para></value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.BuildAssemblerVerbosity">
            <summary>
            This read-only property is used to get the build assembler tool verbosity level
            </summary>
            <value>The default is <c>AllMessages</c> to report all messages</value>
            <remarks>Setting this property to <c>OnlyWarningsAndErrors</c> or <c>OnlyErrors</c> can
            significantly reduce the size of the build log for large projects.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CleanIntermediates">
            <summary>
            This property is used to get or set whether intermediate files are deleted after a successful build
            </summary>
            <value>The default value is true</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.KeepLogFile">
            <summary>
            This property is used to get or set whether or not the log file is retained after a successful build
            </summary>
            <value>The default value is true</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.BuildLogFile">
            <summary>
            This read-only property is used to get the path and filename of the build log file
            </summary>
            <value>If not specified, a default name of <strong>LastBuild.log</strong> is used and the file is
            saved in the path identified in the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.OutputPath"/> property.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HelpFileFormat">
            <summary>
            This read-only property is used to get the help file format generated by the build process
            </summary>
            <value>The default is to produce an HTML Help 1 format file</value>
            <remarks>If building a web site, the output folder will be cleared before the new content is copied
            to it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DisableCodeBlockComponent">
            <summary>
            This read-only property is used to get whether or not to disable the custom Code Block Component so
            that <c>&lt;code&gt;</c> elements are rendered in their standard format by the Sandcastle XSL
            transformations.
            </summary>
            <value>The default is false so that the Code Block Component is used by default</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FrameworkVersion">
            <summary>
            This is used to get or set the .NET Framework version used to resolve references to system types
            (basic .NET Framework, Silverlight, Portable, etc.).
            </summary>
            <remarks>If set to null, it will default to the most recent version of the basic .NET Framework
            installed.  The build engine will adjust this at build time if necessary based on the framework
            types and versions found in the documentation sources.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.IndentHtml">
            <summary>
            This read-only property is used to get whether or not the HTML rendered by <strong>BuildAssembler</strong>
            is indented.
            </summary>
            <value>This is mainly a debugging aid.  Leave it set to false, the default, to produce more compact
            HTML.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ComponentConfigurations">
            <summary>
            This read-only property is used to get a dictionary of build component configurations
            </summary>
            <remarks>This allows you to configure the settings for third party build components if they
            support it.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.PlugInConfigurations">
            <summary>
            This read-only property is used to get a dictionary of build process plug-in configurations
            </summary>
            <remarks>This allows you to select and configure the settings for third party build process plug-ins</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ContentPlacement">
            <summary>
            This read-only property is used to get the placement of any additional and conceptual content items
            in the table of contents.
            </summary>
            <value>The default is to place additional and conceptual content items above the namespaces</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Preliminary">
            <summary>
            This read-only property is used to get whether or not all pages should be marked with a "preliminary
            documentation" warning in the page header.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceContainer">
            <summary>
            This read-only property is used to get whether or not a root namespace entry is added to the table of
            contents to act as a container for the namespaces from the documented assemblies.
            </summary>
            <value>If true, a root <strong>Namespaces</strong> table of contents entry will be created as the
            container of the namespaces in the documented assemblies.  If false, the default, the namespaces are
            listed in the table of contents as root entries.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceTitle">
            <summary>
            This read-only property is used to get an alternate title for the root namespaces page and the root
            table of contents container that appears when <see cref="P:SandcastleBuilder.Utils.SandcastleProject.RootNamespaceContainer"/> is set to true.
            </summary>
            <value>If left blank (the default), the localized version of the text "Namespaces" will be used</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.NamespaceGrouping">
            <summary>
            This read-only property is used to get whether namespace grouping is enabled.  The presentation style
            must have support for namespace grouping in order for the feature to work.
            </summary>
            <value>If <c>true</c>, namespace grouping is enabled. Otherwise, namespace grouping is not enabled</value>
            <remarks>Namespace groups are determined automatically and may be documented as well</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MaximumGroupParts">
            <summary>
            This read-only property is used to get the maximum number of namespace parts to consider when
            namespace grouping is enabled.
            </summary>
            <value>The minimum and default is 2.  A higher value results in more namespace groups</value>
            <remarks>Namespace groups are determined automatically and may be documented as well</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HelpTitle">
            <summary>
            This read-only property is used to get or set the help file's title
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlHelpName">
            <summary>
            This read-only property is used to get the name of the compiled help file
            </summary>
            <remarks>Do not include a path or the extension.  For MS Help Viewer builds, avoid periods,
            ampersands, and pound signs as they are not valid in the help file name.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HelpFileVersion">
            <summary>
            This read-only property is used to get the version number applied to the help file
            </summary>
            <remarks>The default is 1.0.0.0</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.Language">
            <summary>
            This read-only property is used to get the language option for the help file and to determine which
            set of presentation resource files to use.
            </summary>
            <value>If a matching set of presentation resources cannot be found for the specified language, the
            US English set will be used.</value>
            <remarks>The MS Help Viewer 1.0 Catalog ID is composed of the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CatalogProductId"/>, the
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CatalogVersion"/>, and the <c>Language</c> code. For example, the English Visual Studio 10
            catalog is <c>VS_100_EN-US</c>.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightHref">
            <summary>
            This read-only property is used to get the URL to use as the link for the copyright notice
            </summary>
            <value>If not set, the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightText"/> (if any) is not turned into a clickable link</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightText">
            <summary>
            This read-only property is used to get the copyright notice that appears in the footer of each page
            </summary>
            <remarks>If not set, no copyright note will appear.  If a <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CopyrightHref"/> is specified
            without copyright text, the URL appears instead.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DecodedCopyrightText">
            <summary>
            This read-only property is used to get the copyright notice that appears in the footer of each page
            with any hex value place holders replaced with their actual character.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FeedbackEMailAddress">
            <summary>
            This read-only property is used to get the feedback e-mail address that appears in the footer of each
            page.
            </summary>
            <remarks>If not set, no feedback link will appear.  If <see cref="P:SandcastleBuilder.Utils.SandcastleProject.FeedbackEMailLinkText"/> is set,
            that text will appear as the text for the link.  If not set, the e-mail address is used as the link
            text.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FeedbackEMailLinkText">
            <summary>
            This read-only property is used to get the feedback e-mail link text that appears in the feedback
            e-mail link in the footer of each page.
            </summary>
            <remarks>If set, this text will appear as the link text for the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.FeedbackEMailAddress"/>
            link.  If not set, the e-mail address is used for the link text.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HeaderText">
            <summary>
            This read-only property is used to get additional text that should appear in the header of every page
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.FooterText">
            <summary>
            This read-only property is used to get additional text that should appear in the footer of every page
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.SdkLinkTarget">
            <summary>
            This read-only property is used to get the target window for MSDN SDK links
            </summary>
            <value>The default is <c>Blank</c> to open the MSDN topics in a new window.  This option only has an
            effect on the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.HtmlSdkLinkType"/>, <see cref="P:SandcastleBuilder.Utils.SandcastleProject.MSHelpViewerSdkLinkType"/>, and
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.WebsiteSdkLinkType"/> properties if they are set to <c>MSDN</c>.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.PresentationStyle">
            <summary>
            This read-only property is used to get the presentation style for the help topic pages
            </summary>
            <value>The default is to use the VS2013 style</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.NamingMethod">
            <summary>
            This read-only property is used to get the naming method used to generate the help topic filenames
            </summary>
            <value>The default is to use GUID values as the filenames</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.SyntaxFilters">
            <summary>
            This read-only property is used to get the language filters which determines which languages appear
            in the <strong>Syntax</strong> section of the help topics.
            </summary>
            <value>The default is <strong>Standard</strong> (C#, VB.NET, and C++)</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.BinaryTOC">
            <summary>
            This read-only property is used to get whether or not to create a binary table of contents in Help 1
            files.
            </summary>
            <remarks>This can significantly reduce the amount of time required to load a very large help file</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.HtmlSdkLinkType">
            <summary>
            This read-only property is used to get the type of links used to reference other help topics
            referring to framework (SDK) help topics in HTML Help 1 help files.
            </summary>
            <value>The default is to produce links to online MSDN content</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.IncludeFavorites">
            <summary>
            This read-only property is used to get whether or not a Favorites tab will appear in the help file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MSHelpViewerSdkLinkType">
            <summary>
            This read-only property is used to get the type of links used to reference other help topics
            referring to framework (SDK) help topics in MS Help Viewer help files.
            </summary>
            <value>The default is to produce links to online MSDN content</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CatalogProductId">
            <summary>
            This read-only property is used to get the Product ID portion of the MS Help Viewer 1.0 Catalog ID
            </summary>
            <remarks><para>If not specified, the default is "VS".</para>
            
            <para>The MS Help Viewer Catalog 1.0 ID is composed of the <c>CatalogProductId</c> the
            <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CatalogVersion"/>, and the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.Language"/> code. For example, the English Visual
            Studio 10 catalog is <c>VS_100_EN-US</c>.</para>
            
            <note type="note">You should typically use the default value</note>
            </remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CatalogVersion">
            <summary>
            This read-only property is used to get the Version portion of the MS Help Viewer 1.0 Catalog ID
            </summary>
            <remarks><para>If not specified, the default is "100".</para>
            
            <para>The MS Help Viewer 1.0 Catalog ID is composed of the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.CatalogProductId"/>, the
            <c>CatalogVersion</c>, and the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.Language"/> code. For example, the English Visual Studio 10
            catalog is <c>VS_100_EN-US</c>.</para>
            
            <note type="note">You should typically used the default value</note>
            </remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.CatalogName">
            <summary>
            This read-only property is used to get a non-standard MS Help Viewer 2.x content catalog name
            </summary>
            <remarks>If not specified, the default will be set based on the Visual Studio version catalog related
            to the Help Viewer (VisualStudio12 for Visual Studio 2013 for example).</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.VendorName">
            <summary>
            This read-only property is used to get the vendor name for the help viewer file
            </summary>
            <remarks>The default if not specified will be "Vendor Name".  The value must not contain the ':',
            '\', '/', '.', ',', '#', or '&amp;' characters.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ProductTitle">
            <summary>
            This read-only property is used to get the product title for the help viewer file
            </summary>
            <remarks>The default if not specified will be the value of the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.HelpTitle"/>
            property.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.TopicVersion">
            <summary>
            This read-only property is used to get the topic version for each topic in the help file
            </summary>
            <remarks>The default is "100" (meaning 10.0)</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.TocParentId">
            <summary>
            This read-only property is used to get the table of contents parent for each root topic in the help
            file.
            </summary>
            <remarks>The default is "-1" to show the root topics in the root of the main table of content</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.TocParentVersion">
            <summary>
            This read-only property is used to get the topic version of the <see cref="P:SandcastleBuilder.Utils.SandcastleProject.TocParentId"/> topic
            </summary>
            <remarks>The default is "100" meaning "10.0"</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.TocOrder">
            <summary>
            This read-only property is used to get the sort order for conceptual content so that it appears
            within its parent in the correct position.
            </summary>
            <remarks>The default is -1 to let the build engine determine the best value to use based on the
            other project properties.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.WebsiteSdkLinkType">
            <summary>
            This read-only property is used to get the type of links used to reference other help topics
            referring to framework (SDK) help topics in HTML Help 1 help files.
            </summary>
            <value>The default is to produce links to online MSDN content</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.MissingTags">
            <summary>
            This read-only helper property returns the flags to use when looking for missing tags
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingNamespaces">
            <summary>
            This read-only property is used to get whether or not missing namespace comments are indicated in the
            help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingSummaries">
            <summary>
            This read-only property is used to get whether or not missing &lt;summary&gt; tags are indicated in
            the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingParams">
            <summary>
            This read-only property is used to get whether or not missing &lt;param&gt; tags are indicated in the
            help file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingTypeParams">
            <summary>
            This read-only property is used to get whether or not missing &lt;typeparam&gt; tags on generic types
            and methods are indicated in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingReturns">
            <summary>
            This read-only property is used to get whether or not missing &lt;returns&gt; tags are indicated in
            the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingValues">
            <summary>
            This read-only property is used to get whether or not missing &lt;value&gt; tags are indicated in the
            help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingRemarks">
            <summary>
            This read-only property is used to get whether or not missing &lt;remarks&gt; tags are indicated in
            the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.AutoDocumentConstructors">
            <summary>
            This read-only property is used to get whether or not constructors are automatically documented if
            they are missing the &lt;summary&gt; tag and for classes with compiler generated constructors.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.AutoDocumentDisposeMethods">
            <summary>
            This read-only property is used to get whether or not dispose methods are automatically documented if
            they are missing the &lt;summary&gt; tag and for classes with compiler generated dispose methods.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ShowMissingIncludeTargets">
            <summary>
            This read-only property is used to get whether or not missing &lt;include&gt; tag target
            documentation is indicated in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.VisibleItems">
            <summary>
            This read-only helper property returns the flags used to indicate which optional items to document
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentAttributes">
            <summary>
            This read-only property is used to get whether or not attributes on types and members are documented
            in the syntax portion of the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentExplicitInterfaceImplementations">
            <summary>
            This read-only property is used to get whether or not explicit interface implementations are
            documented.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedMembers">
            <summary>
            This read-only property is used to get whether or not inherited members are documented
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedFrameworkMembers">
            <summary>
            This read-only property is used to get whether or not inherited framework members are documented
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedFrameworkInternalMembers">
            <summary>
            This read-only property is used to get whether or not inherited internal framework members are
            documented.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInheritedFrameworkPrivateMembers">
            <summary>
            This read-only property is used to get whether or not inherited private framework members are
            documented.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentInternals">
            <summary>
            This read-only property is used to get whether or not internal members are documented in the help
            file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPrivates">
            <summary>
            This read-only property is used to get whether or not private members are documented in the help file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPrivateFields">
            <summary>
            This read-only property is used to get or set whether or not private fields are documented in the
            help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtected">
            <summary>
            This read-only property is used to get whether or not protected members are documented in the help
            file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentSealedProtected">
            <summary>
            This read-only property is used to get whether or not protected members of sealed classes are
            documented in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentProtectedInternalAsProtected">
            <summary>
            This read-only property is used to get whether or not "protected internal" members are documented as
            "protected" only in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentNoPIATypes">
            <summary>
            This read-only property is used to get whether or not no-PIA (Primary Interop Assembly) embedded
            interop types are documented in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.DocumentPublicCompilerGenerated">
            <summary>
            This read-only property is used to get whether or not public compiler generated types and members are
            documented in the help file.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.ApiFilter">
            <summary>
            This read-only property is used to get the API filter
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.SandcastleProject.BasePath">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.TocEntry">
            <summary>
            This represents a table of contents entry.  This is used to build the table of contents entries for
            content layout and site map files.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.CompareTo(SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Compares this instance to another instance and returns an indication of their relative values
            </summary>
            <param name="other">A TocEntry object to compare</param>
            <returns>Returns -1 if this instance is less than the value, 0 if they are equal, or 1 if this
            instance is greater than the value or the value is null.</returns>
            <remarks>The <see cref="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.SortOrder"/> property is compared first.  If equal, the <see cref="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Title"/>
            property is used.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Clone">
            <summary>
            Clone this table of contents entry
            </summary>
            <returns>A clone of this table of contents entry</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.#ctor(SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor
            </summary>
            <param name="basePathProvider">The base path provider</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ConceptualContent.TocEntry.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ResetSortOrder">
            <summary>
            Reset the sort order on this item and its children
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.childList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Mark the project as dirty if the contained lists change
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>This may not be the best way to handle this.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.op_Equality(SandcastleBuilder.Utils.ConceptualContent.TocEntry,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Overload for equal operator
            </summary>
            <param name="t1">The first TOC entry object</param>
            <param name="t2">The second TOC entry object</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.op_Inequality(SandcastleBuilder.Utils.ConceptualContent.TocEntry,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Overload for not equal operator
            </summary>
            <param name="t1">The first TOC entry object</param>
            <param name="t2">The second TOC entry object</param>
            <returns>True if not equal, false if they are equal.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.op_LessThan(SandcastleBuilder.Utils.ConceptualContent.TocEntry,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Overload for less than operator
            </summary>
            <param name="t1">The first TOC entry object</param>
            <param name="t2">The second TOC entry object</param>
            <returns>True if t1 is less than t2, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.op_GreaterThan(SandcastleBuilder.Utils.ConceptualContent.TocEntry,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            Overload for greater than operator
            </summary>
            <param name="t1">The first TOC entry object</param>
            <param name="t2">The second TOC entry object</param>
            <returns>True if t1 is greater than t2, false if not.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.GetHashCode">
            <summary>
            Get a hash code for this item
            </summary>
            <returns>Returns the hash code for the <see cref="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ToString"/>
            value.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ToString">
            <summary>
            Convert the table of contents entry and its children to a string
            </summary>
            <returns>The entries in HTML 1.x help format</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ConvertToString(System.Text.StringBuilder)">
            <summary>
            This is used to convert the entry to a string and append it to the specified string builder
            </summary>
            <param name="sb">The string builder to which the entry is appended</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ToAnchor(System.String)">
            <summary>
            Convert the entry to its <c>&lt;a&gt;</c> element form
            </summary>
            <param name="innerText">Optional inner text</param>
            <returns>The topic in its <c>&lt;a&gt;</c> element form</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.LoadSiteMapNode(System.Xml.XmlNode)">
            <summary>
            This will load information about the entry from the node and will also load all child nodes
            </summary>
            <param name="site">The site map node to use for this entry</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.SaveAsSiteMapNode(System.Xml.XmlNode)">
            <summary>
            Save this node and its children to the specified root node as site map nodes
            </summary>
            <param name="root">The root node to which the current entry is added</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ContainsMatch(System.String)">
            <summary>
            See if this entry or one of its children is a match to the specified source filename
            </summary>
            <param name="sourceFilename">The source filename to match</param>
            <returns>The match TOC entry or null if not found</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Parent">
            <summary>
            This is used to track the topic's parent collection
            </summary>
            <remarks>This is used by the site map editor to move items around within the collection</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.BasePathProvider">
            <summary>
            This returns the <see cref="T:SandcastleBuilder.Utils.IBasePathProvider"/> for the entry.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Children">
            <summary>
            This returns the child table of contents collection for this entry
            </summary>
            <value>If empty, this is a single item in the table of contents.  If it has children, they are listed
            below this one.  A file may or may not be associated with this entry if it is a root node.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.SourceFile">
            <summary>
            This is used to get or set the entry's source file path.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.DestinationFile">
            <summary>
            This is used to get or set the entry's destination file path.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Id">
            <summary>
            The ID of the item when it represents a TOC entry from a content layout file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.PreviewerTitle">
            <summary>
            The display title for the topic previewer
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.LinkText">
            <summary>
            The link text for the topic previewer
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Title">
            <summary>
            This is used to get or set the entry's title in the table of contents
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.IsDefaultTopic">
            <summary>
            This is used to get or set whether or not the item is the default topic for the help file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.SortOrder">
            <summary>
            This is used to get or set the sort order for the entry within its group
            </summary>
            <value>Entries with identical sort order values will sort by title as well.  Items with no specific
            sort order will sort below those with a defined sort order.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ApiParentMode">
            <summary>
            This is used to specify how API content is parented to this topic or the topic's parent
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.IsSelected">
            <summary>
            This is used to get or set whether or not the entity is selected
            </summary>
            <remarks>Used by the editor for binding in the tree view.  The value is serialized when saved so that
            its state is remembered when reloaded.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.IsExpanded">
            <summary>
            This is used to get or set whether or not the entity is expanded
            </summary>
            <remarks>Used by the editor for binding in the tree view.  The value is serialized when saved so that
            its state is remembered when reloaded.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.ToolTip">
            <summary>
            This returns a description of the topic that can be used as a tool tip
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.UniqueId">
            <summary>
            This is used to get or set a unique ID to work around a legacy additional content support issue
            </summary>
            <value>The site map editor assigns each topic its own unique ID to work around object equality issues
            caused by legacy support for file system based additional content.</value>
        </member>
        <member name="E:SandcastleBuilder.Utils.ConceptualContent.TocEntry.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection">
            <summary>
            This collection class is used to hold the table of contents entries for content layout and site map files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.#ctor">
            <summary>
            Default constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.#ctor(SandcastleBuilder.Utils.ConceptualContent.ContentFile)">
            <summary>
            Constructor
            </summary>
            <param name="siteMapFile">The site map file associated with the collection</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Sort">
            <summary>
            This is used to sort the collection
            </summary>
            <remarks>All top level items and their children are sorted</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.All">
            <summary>
            This is used to enumerate all topics recursively
            </summary>
            <returns>An enumerable list of all topics and sub-topics</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Find(System.Predicate{SandcastleBuilder.Utils.ConceptualContent.TocEntry},System.Boolean)">
            <summary>
            This is used to find all topics and sub-topics that match the specified predicate recursively
            </summary>
            <param name="match">The match predicate</param>
            <param name="expandParentIfFound">True to expand the parent if a child node matches or false to leave
            it as is.  Expanding the node ensures it is visible in the bound tree view.</param>
            <returns>An enumerable list of all matches</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ToString">
            <summary>
            Convert the table of contents entry and its children to a string
            </summary>
            <returns>The entries in string format</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ConvertToString(System.Text.StringBuilder)">
            <summary>
            This is used to convert the collection to a string and append it to the specified string builder
            </summary>
            <param name="sb">The string builder to which the collection is appended</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.SaveToIntermediateTocFile(System.String,System.Int32,System.String)">
            <summary>
            This is used to save the TOC information to an intermediate TOC file used in the conceptual content
            build.
            </summary>
            <param name="rootContainerId">The ID of the root container topic if used</param>
            <param name="rootOrder">The TOC order for the root container topic if used</param>
            <param name="filename">The filename to use</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.FindDefaultTopic">
            <summary>
            This is used to locate the default topic if one exists
            </summary>
            <returns>The default topic if found or null if not found</returns>
            <remarks>The first entry found is returned.  Nodes are searched recursively.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Load">
            <summary>
            This is used to load the table of contents entries from the site map file associated with the
            collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">This is thrown if a site map has not been associated with
            the collection.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Save">
            <summary>
            This is used to save the table of contents entries to the site map file associated with the
            collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">This is thrown if a site map has not been associated with
            the collection.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Find(System.String)">
            <summary>
            Find a TOC entry with the same source filename
            </summary>
            <param name="sourceFilename">The source filename to match</param>
            <returns>The match TOC entry or null if not found</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ResetSortOrder">
            <summary>
            Reset the sort order on all items in the collection
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ChildListChanged(SandcastleBuilder.Utils.ConceptualContent.TocEntry,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            This is used by contained items to notify the parent that a child list changed and thus the
            collection should be marked as dirty.
            </summary>
            <param name="t">The item that changed</param>
            <param name="e">The list change event arguments from the child collection</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.AddTopicsFromFolder(System.String,System.String,SandcastleBuilder.Utils.SandcastleProject)">
            <summary>
            Add all topics from the specified folder recursively to the collection and to the given project file
            </summary>
            <param name="folder">The folder from which to get the files</param>
            <param name="basePath">The base path to remove from files copied from another folder into the project
            folder.  On the first call, this should match the <paramref name="folder"/> value.</param>
            <param name="project">The project to which the files are added</param>
            <remarks>Only actual HTML and markdown content topic files are added.  They must have a ".htm?" or
            "*.md" extension.  Folders will be added as sub-topics recursively.  If a file with the same name as
            the folder exists, it will be associated with the container node.  If no such file exists, an empty
            container node is created.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.InsertItem(System.Int32,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            This is overridden to set the inserted item's parent to this collection
            </summary>
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.SetItem(System.Int32,SandcastleBuilder.Utils.ConceptualContent.TocEntry)">
            <summary>
            This is overridden to set the inserted item's parent to this collection
            </summary>
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.RemoveItem(System.Int32)">
            <summary>
            This is overridden to clear the parent on the removed item
            </summary>
            <param name="index">The index of the item to remove</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.GenerateTableOfContents(SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection,System.Boolean)">
            <inheritdoc />
            <remarks>The <paramref name="includeInvisibleItems"/> parameter is ignored as site maps do not
            support them.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.DefaultTopic">
            <summary>
            This is used to get the default topic
            </summary>
            <value>It returns the default topic or null if one is not set</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ApiContentInsertionPoint">
            <summary>
            This is used to get the topic at which the API table of contents is to be inserted or parented
            </summary>
            <value>This will return null if no parent location has been set</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ApiContentParent">
            <summary>
            This is used to get the parent item that will contain the API table of contents
            </summary>
            <returns>The parent item or null if it is the root collection.</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ApiContentParentCollection">
            <summary>
            This is used to get the parent collection that contains the item where the API table of contents is
            to be inserted.
            </summary>
            <returns>The parent collection if there is a location defined or null if there isn't one</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.Item(System.String)">
            <summary>
            This can be used to get a topic by its unique ID (case-insensitive)
            </summary>
            <param name="id">The ID of the item to get.</param>
            <value>Returns the topic with the specified <see cref="P:SandcastleBuilder.Utils.ConceptualContent.TocEntry.Id"/> or null if not found</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TocEntryCollection.ContentLayoutFile">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile">
            <summary>
            This represents an XML comment file and is used when searching for and adding missing documentation tag
            information.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="filename">The XML comments filename</param>
            <exception cref="T:System.ArgumentNullException">This is thrown if the filename is null or an empty string</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.comments_NodeChanged(System.Object,System.Xml.XmlNodeChangedEventArgs)">
            <summary>
            Mark the file as modified if a node is changed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.Save">
            <summary>
            Save the comments file if it was modified
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.ForceReload">
            <summary>
            This can be used to force a reload of the comments file if changes were made to it outside of this
            instance.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.SourcePath">
            <summary>
            This read-only property is used to get the source path of the file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.Encoding">
            <summary>
            This read-only property is used to get the encoding, typically UTF-8
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.Comments">
            <summary>
            This is used to load the comments file on first use
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFile.Members">
            <summary>
            This read-only property is used to get the root members node
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection">
            <summary>
            This collection class is used to hold the XML comments files during the build process
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.Save">
            <summary>
            Save the comments files
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.FindMember(System.String)">
            <summary>
            Search all comments files for the specified member.  If not found, add the blank member to the first
            file.
            </summary>
            <param name="memberName">The member name for which to search.</param>
            <returns>The XML node of the found or added member</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.ReplaceNamespaceDocEntries">
            <summary>
            This will search for all type member comments where the ID contains <c>NamespaceDoc</c> or
            <c>NamespaceGroupDoc</c> and convert them to namespace and namespace group entries for the containing
            namespace.
            </summary>
            <remarks>The converted ID effectively converts the comments into comments for the class's containing
            namespace.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.CommentFileList(System.String,System.Boolean)">
            <summary>
            Returns a list of the comment file paths in a format suitable for inserting into a Sandcastle
            Configuration file.
            </summary>
            <param name="workingFolder">The working folder path</param>
            <param name="forInheritedDocs">True if generating the list for the inherited documentation tool or
            false for sandcastle.config.</param>
            <returns>The comment file list XML tags</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.GetReferencedNamespaces(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This is used to get an enumerable list of unique namespaces referenced in the XML comments files
            </summary>
            <param name="validNamespaces">An enumerable list of valid namespaces</param>
            <returns>An enumerable list of unique namespaces referenced in the XML comments files</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.BuildEngine.XmlCommentsFileCollection.ContainsInheritedDocumentation">
            <summary>
            This read-only property returns true if any of the comments files contain an <c>inheritdoc</c>,
            <c>AttachedPropertyComments</c>, or <c>AttachedEventComments</c> tag indicating that the Inherited
            Documentation tool will need to be ran.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.XPath.ResolveNameFunction">
             <summary>
             This class is a custom XPath function used to convert an API name into
             its more readable form used for searching.
             </summary>
             <remarks>The function should be passed an XML node containing the
             necessary information used to obtain the name and convert it into the
             searchable format along with a boolean indicating whether or not the
             name should be fully qualified with the namespace and type.</remarks>
             <example>
             <example>
             Some examples of XPath queries using the function:
             <code lang="none">
             //apis/api[matches-regex(resolve-name(node(), boolean(false),
             'utils.*proj', boolean(true))
            
             //apis/api[matches-regex(resolve-name(node(), boolean(true)),
             'Proj|Filt|Excep', boolean(false))
             </code>
             </example>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.ResolveNameFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
            <summary>
            This is called to invoke the <b>resolve-name</b> method.
            </summary>
            <param name="xsltContext">The XSLT context for the function call</param>
            <param name="args">The arguments for the function call</param>
            <param name="docContext">The context node for the function call</param>
            <returns>An object representing the return value of the function
            (the name string).</returns>
            <exception cref="T:System.ArgumentException">This is thrown if the
            number of arguments for the function is not two.</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.ResolveNameFunction.ReplaceTypeTemplateMarker(System.Xml.XmlNode,System.String)">
            <summary>
            This is used to replace the template marker in a type name
            </summary>
            <param name="apiNode">The API node to use</param>
            <param name="nodeText">The node text to modify</param>
            <returns>The updated node text</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.ResolveNameFunction.ArgTypes">
            <summary>
            Gets the supplied XPath types for the function's argument list.
            This information can be used to discover the signature of the
            function which allows you to differentiate between overloaded
            functions.
            </summary>
            <value>Always returns an array with a <b>Navigator</b> type
            and a Boolean type entry.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.ResolveNameFunction.Minargs">
            <summary>
            Gets the minimum number of arguments for the function. This enables
            the user to differentiate between overloaded functions.
            </summary>
            <value>Always returns two</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.ResolveNameFunction.Maxargs">
            <summary>
            Gets the maximum number of arguments for the function. This enables
            the user to differentiate between overloaded functions.
            </summary>
            <value>Always returns two</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.ResolveNameFunction.ReturnType">
            <summary>
            Gets the XPath type returned by the function
            </summary>
            <value>Always returns String</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.XPath.XPathFunctionContext">
            <summary>
            This class is used to provide a custom regular expression search
            function to XPath queries using an XSLT context.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.XPathFunctionContext.CompareDocument(System.String,System.String)">
            <summary>
            This is not used by this class.
            </summary>
            <param name="baseUri">The base URI of the first document to compare</param>
            <param name="nextbaseUri">The base URI of the second document to compare</param>
            <returns>Always returns zero (equal).</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.XPathFunctionContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is not used by this class.
            </summary>
            <param name="node">The whitespace node to preserve or strip</param>
            <returns>For this class, this always returns true to preserve
            whitespace.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.XPathFunctionContext.ResolveVariable(System.String,System.String)">
            <summary>
            This is not used by this class.
            </summary>
            <param name="prefix">The prefix of the variable as it appears
            in the expression</param>
            <param name="name">The name of the variable</param>
            <returns>Always returns null</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.XPath.XPathFunctionContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
            <summary>
            Resolves a function reference and return an
            <see cref="T:System.Xml.Xsl.IXsltContextFunction"/> representing the function. The
            <see cref="T:System.Xml.Xsl.IXsltContextFunction"/> is used at execution time to get
            the return value of the function.
            </summary>
            <param name="prefix">The prefix of the function as it appears in
            the XPath expression</param>
            <param name="name">The name of the function</param>
            <param name="ArgTypes">An array of argument types for the function
            being resolved. This allows you to select between methods with the
            same name (for example, overloaded methods).</param>
            <returns>An <see cref="T:System.Xml.Xsl.IXsltContextFunction"/> representing the
            function</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.XPath.XPathFunctionContext.Whitespace">
            <summary>
            This is not used by this class.
            </summary>
            <value>Always returns true to include whitespace in the output</value>
        </member>
        <member name="T:SandcastleBuilder.Utils.BuildAction">
            <summary>
            This defines the build action (item name) for build items in a project
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.None">
            <summary>No action, the item is ignored</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.Image">
            <summary>Conceptual content image file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.CodeSnippets">
            <summary>Conceptual content code snippets file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.Tokens">
            <summary>Conceptual content token file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.ContentLayout">
            <summary>Conceptual content layout file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.SiteMap">
            <summary>Additional content site map file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.Content">
            <summary>General content file (HTML, style sheet, images not  related to conceptual content, etc.)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.ResourceItems">
            <summary>Resource items file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.XamlConfiguration">
            <summary>XAML configuration file (for BuildAssembler)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.Folder">
            <summary>A folder (project explorer designation only, not a build
            action)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.Project">
            <summary>The project (project explorer designation only, not a
            build action)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.DocumentationSource">
            <summary>A documentation source (project explorer designation only,
            not a build action)</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.BuildAction.ReferenceItem">
            <summary>A reference item (project explorer designation only, not a
            build action)</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ApiParentMode">
            <summary>
            This public enumerated type defines the API parent mode for a conceptual
            topic.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ConceptualContent.ApiParentMode.None">
            <summary>Not a parent to the API content</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ConceptualContent.ApiParentMode.InsertBefore">
            <summary>Insert the API content before this element</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ConceptualContent.ApiParentMode.InsertAfter">
            <summary>Insert the API content after this element</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.ConceptualContent.ApiParentMode.InsertAsChild">
            <summary>Insert the API content as a child of this element</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.ResourceItem">
            <summary>
            This represents a Sandcastle transformation resource item that can be used to insert a common item,
            value, or construct into generated topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="file">The file containing the resource item</param>
            <param name="id">The item ID</param>
            <param name="value">The item value</param>
            <param name="isOverride">True if this is an override, false if not</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.OnPropertyChanged(System.String)">
            <summary>
            This raises the <see cref="E:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.PropertyChanged"/> event
            </summary>
            <param name="propertyName">The property name that changed</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.SourceFile">
            <summary>
            This is used to get or set the name of the file containing the resource item
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.Id">
            <summary>
            This read-only property is used to get the item ID
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.Value">
            <summary>
            This is used to get or set the item value
            </summary>
            <value>The value can contain help file builder replacement tags.  These will be replaced at build
            time with the appropriate project value.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.IsSelected">
            <summary>
            This is used to get or set whether or not the entity is selected
            </summary>
            <remarks>Used by the editor for binding in the list box</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.IsOverridden">
            <summary>
            This is used to get or set whether or not the item has been edited and thus overrides a default item
            with the same ID.
            </summary>
        </member>
        <member name="E:SandcastleBuilder.Utils.ConceptualContent.ResourceItem.PropertyChanged">
            <summary>
            The property changed event
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ConceptualContent.TopicFile">
            <summary>
            This class represents a conceptual content topic file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicFile.#ctor(SandcastleBuilder.Utils.ConceptualContent.ContentFile)">
            <summary>
            Constructor
            </summary>
            <param name="contentFile">The content file from the project</param>
            <exception cref="T:System.ArgumentNullException">This is thrown if the content file is null</exception>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicFile.ParseContent(System.Boolean)">
            <summary>
            This will parse the file content and extract the document type, unique ID, and revision number
            </summary>
            <param name="reparse">If false and the file has already been parsed, the method just returns.  If
            true, the file is reparsed to refresh the information.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.ConceptualContent.TopicFile.GetReferencedNamespaces(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            This is used to get an enumerable list of unique namespaces referenced in the topic
            </summary>
            <param name="validNamespaces">An enumerable list of valid framework namespaces</param>
            <returns>An enumerable list of unique namespaces in the topic</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.ContentFile">
            <summary>
            This is used to get or set the file build item
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.Name">
            <summary>
            Get the name of the file without the path
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.FullPath">
            <summary>
            Get the full path to the file
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.Id">
            <summary>
            This is used to get the unique ID of the topic
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.RevisionNumber">
            <summary>
            This is used to get the topic's revision number
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.DocumentType">
            <summary>
            This read-only property is used to get the document type
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.ErrorMessage">
            <summary>
            This read-only property is used to return the error message if <see cref="P:SandcastleBuilder.Utils.ConceptualContent.TopicFile.DocumentType"/> returns
            <c>Invalid</c>.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.BuildActionEnumConverter">
            <summary>
            This is used to limit which values are available to properties using
            <see cref="T:SandcastleBuilder.Utils.BuildAction"/> as their underlying type.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.BuildActionEnumConverter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.BuildActionEnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc />
            <remarks>Build actions that serve no purpose for selection
            are removed.</remarks>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg">
            <summary>
            This form is used to edit namespace summaries and to indicate which namespaces should appear in the help
            file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.#ctor(SandcastleBuilder.Utils.NamespaceSummaryItemCollection)">
            <summary>
            Constructor
            </summary>
            <param name="items">The namespace summary item collection to edit</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.buildProcess_ReportProgress(SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is used to report build progress
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.LoadNamespaces(System.String)">
            <summary>
            Load the namespace information from the reflection information
            </summary>
            <param name="reflectionFile">The reflection information filename</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.NamespacesDlg_Load(System.Object,System.EventArgs)">
            <summary>
            Do a partial build on load to gather new namespace information that isn't currently in the project's
            namespace list.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.NamespacesDlg_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Shut down the build process thread and clean up on exit
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnClose_Click(System.Object,System.EventArgs)">
            <summary>
            Store the changes and close the dialog box
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnHelp_Click(System.Object,System.EventArgs)">
            <summary>
            View help for this form
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.lbNamespaces_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            When the item changes, show its summary in the text box and set the Appears In list box data source
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.lbNamespaces_ItemCheck(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
            <summary>
            Mark the summary item as documented or not when the check state changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.txtSummary_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection to prevent accidental deletion of the text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.txtSummary_Leave(System.Object,System.EventArgs)">
            <summary>
            Store changes to the summary when the textbox loses focus
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete an old namespace entry that is no longer needed.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnApplyFilter_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the namespace filter to the namespace list
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnAll_Click(System.Object,System.EventArgs)">
            <summary>
            Mark all namespaces as included
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.btnNone_Click(System.Object,System.EventArgs)">
            <summary>
            Mark all namespaces as excluded
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>Note that at least one will need to be selected or the build will fail due to lack of
            information to document.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.NamespaceComparer">
            <summary>
            This is used to compare namespace names and sort namespace groups ahead of the contained namespaces
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.Design.NamespaceSummaryItemEditorDlg.NamespaceComparer.System#Collections#Generic#IComparer{System#String}#Compare(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Utils.FileItem">
            <summary>
            This class represents a file that is part of the project (MAML/additional content, site map, style
            sheet, etc.).
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.includePath_PersistablePathChanging(System.Object,System.EventArgs)">
            <summary>
            This is used to handle changes in the <see cref="P:SandcastleBuilder.Utils.FileItem.IncludePath"/> properties such that the path gets
            stored in the project file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.linkPath_PersistablePathChanging(System.Object,System.EventArgs)">
            <summary>
            This is used to handle changes in the <see cref="P:SandcastleBuilder.Utils.FileItem.LinkPath"/> properties such that the path gets stored
            in the project file.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.#ctor(SandcastleBuilder.Utils.SandcastleProject,Microsoft.Build.Evaluation.ProjectItem)">
            <summary>
            This constructor is used to wrap an existing project item
            </summary>
            <param name="project">The project that owns the item</param>
            <param name="existingItem">The existing project item</param>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String,System.String)">
            <summary>
            This constructor is used to create a new item and add it to the project
            </summary>
            <param name="project">The project that will own the item</param>
            <param name="itemType">The type of item to create</param>
            <param name="itemPath">The path to the item</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.RefreshPaths">
            <summary>
            Refresh the paths due to a parent path being renamed
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.ToContentFile">
            <summary>
            This is used to convert the file item to a <see cref="T:SandcastleBuilder.Utils.ConceptualContent.ContentFile"/> instance
            </summary>
            <returns>The file item as a <see cref="T:SandcastleBuilder.Utils.ConceptualContent.ContentFile"/></returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetAttributes">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetClassName">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetComponentName">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetConverter">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetDefaultEvent">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetDefaultProperty">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetEditor(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Utils.FileItem.FilterProperties(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            This is used to filter the properties based on the
            <see cref="P:SandcastleBuilder.Utils.FileItem.BuildAction"/>.
            </summary>
            <param name="pdc">The property descriptor collection to filter</param>
            <returns>The filtered property descriptor collection</returns>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.BuildAction">
            <summary>
            This is used to set or get the build action of the item
            </summary>
            <value>If set to <c>Image</c>, <see cref="P:SandcastleBuilder.Utils.FileItem.ImageId"/> and <see cref="P:SandcastleBuilder.Utils.FileItem.AlternateText"/> will be set to
            the filename if not set already.</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.IncludePath">
            <summary>
            This is used to set or get the filename (include path)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.LinkPath">
            <summary>
            This is used to set or get the link path
            </summary>
            <value>If the item has no link path, this returns the <see cref="P:SandcastleBuilder.Utils.FileItem.IncludePath"/> path</value>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.FullPath">
            <summary>
            This is used to get the full path to the item
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.Name">
            <summary>
            This is used to set or get the name of the item
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.ImageId">
            <summary>
            This is used to get or set an ID for a conceptual content image
            </summary>
            <remarks>This is used to indicate that an image file is part of the conceptual content.  Image items
            without an ID are not valid and will be ignored.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.AlternateText">
            <summary>
            This is used to get or set alternate text for an image
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.CopyToMedia">
            <summary>
            This is used to get or set whether an item is copied to the output folder during a build
            </summary>
            <remarks>If this is set to true, the image will always be copied to the build's media folder.  If
            false, it is only copied if referenced in a topic.</remarks>
        </member>
        <member name="P:SandcastleBuilder.Utils.FileItem.SortOrder">
            <summary>
            This is used to get or set the sort order for content layout and site map files
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.HtmlSdkLinkType">
            <summary>
            This public enumerated type defines the type of links used to reference
            other help topics referring to framework (SDK) help topics in HTML Help
            1 and website help files.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HtmlSdkLinkType.None">
            <summary>No active links</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.HtmlSdkLinkType.Msdn">
            <summary>Links to framework topics online at MSDN</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile">
            <summary>
            This task is used to compress the help content into a Microsoft Help Container (a ZIP file with a .mshc
            extension).
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.Execute">
            <summary>
            This is used to execute the task and perform the build
            </summary>
            <returns>True on success or false on failure.</returns>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.zip_AddProgress(System.Object,Ionic.Zip.AddProgressEventArgs)">
            <summary>
            This is used to report progress as files are added to the archive
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.zip_SaveProgress(System.Object,Ionic.Zip.SaveProgressEventArgs)">
            <summary>
            This is used to report progress as the archive is saved
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.WorkingFolder">
            <summary>
            This is used to pass in the working folder where the files to compress are located
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.OutputFolder">
            <summary>
            This is used to pass in the output folder where the compressed output file is stored
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.MSBuild.BuildHelpViewerFile.HtmlHelpName">
            <summary>
            This is used to pass in the name of the help file (no path or extension)
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.MSHelpViewerSdkLinkType">
            <summary>
            This public enumerated type defines the type of links used to reference
            other help topics referring to framework (SDK) help topics in MS Help
            Viewer help files.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSHelpViewerSdkLinkType.None">
            <summary>No active links</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSHelpViewerSdkLinkType.Id">
            <summary>Id style links for use within an MS Help viewer help file</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.MSHelpViewerSdkLinkType.Msdn">
            <summary>Links to framework topics online at MSDN</summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.ProjectFileConfiguration">
            <summary>
            This holds configuration settings for Visual Studio project file
            documentation sources
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Utils.ProjectFileConfiguration.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">The project filename</param>
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectFileConfiguration.ProjectFileName">
            <summary>
            This is used to get or set the project filename
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectFileConfiguration.Configuration">
            <summary>
            This is used to get or set the configuration used for the build
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Utils.ProjectFileConfiguration.Platform">
            <summary>
            This is used to get or set the platform used for the build
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Utils.SdkLinkTarget">
            <summary>
            This public enumerated type defines the locations in which a browser
            window can be opened for the MSDN SDK links.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkTarget.Blank">
            <summary>The URL is loaded into a new unnamed window.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkTarget.Self">
            <summary>The current document is replaced with the specified
            URL.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkTarget.Parent">
            <summary>The URL is loaded into the current frame's parent. If
            the frame has no parent, this value acts like the value
            <b>Self</b>.</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.SdkLinkTarget.Top">
            <summary>The URL replaces any framesets that may be loaded. If
            there are no framesets defined, this value acts like the value
            <b>Self</b>.</summary>
        </member>
    </members>
</doc>
