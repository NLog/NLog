<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilder.PlugIns</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn">
            <summary>
            This plug-in class can be used to build a help file consisting of nothing but additional content items.
            It is also useful for proofreading your additional content without having to build all the API topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.AdditionalContentOnlyPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new help file builder project to the reference link settings.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a reference links item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.lbReferences_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.AdditionalReferenceLinksConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn">
            <summary>
            This plug-in class is designed to add additional reference link targets to the <strong>Reflection Index
            Data</strong> and <strong>Resolve Reference Links</strong> build components so that links can be created
            to other third party help in a help collection or additional online MSDN content.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process.
            </summary>
            <param name="buildProcess">A reference to the current build process.</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize
            itself.</param>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the plug-in configuration is not valid.</exception>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.MergeInheritedDocConfig">
            <summary>
            This is used to merge the reflection file names into the inherited documentation tool's configuration
            file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.MergeReflectionInfo(System.String,System.Boolean)">
            <summary>
            This is used to merge the reflection file info into the named configuration file.
            </summary>
            <param name="configFilename">The configuration filename</param>
            <param name="isConceptual">True if it is the conceptual configuration file or false if it is the
            reference configuration file.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.BuildProject(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This is called to build a project
            </summary>
            <param name="project">The project to build</param>
            <param name="workingPath">The working path for the project</param>
            <returns>Returns true if successful, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.Report(SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process to report build progress for the reference link projects
            </summary>
            <param name="value">The event arguments</param>
            <remarks>Since the build is synchronous in this plug-in, we need to implement the interface and
            report progress synchronously as well or the final few messages can get lost and it looks like the
            build failed.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.AjaxDocConfigDlg">
            <summary>
            This form is used to configure the settings for the
            <see cref="T:SandcastleBuilder.PlugIns.AjaxDocPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.ProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the project site for the clicked link
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.chkUseDefaultCredentials_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the user name and password controls based on the Default Credentials check state
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.chkUseProxyServer_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the proxy server settings based on the Use Proxy Server check state
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.chkUseProxyDefCreds_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the proxy user credentials based on the Proxy Default Credentials check state
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.AjaxDocConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.AjaxDocPlugIn">
            <summary>
            This plug-in class is designed to generate XML comments and reflection file information for Atlas client
            script libraries using AjaxDoc.
            </summary>
            <remarks><note type="note">If you want the visibility settings and API filter applied, add the Manual
            Visibility/API filter plug-in to the project as well.</note></remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the plug-in configuration is not valid</exception>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.RunBrowser">
            <summary>
            This is the entry point for the thread that runs the browser to invoke AjaxDoc
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.wb_DocumentCompleted(System.Object,System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
            <summary>
            Hook up the error handler on completion to handle script errors
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.Window_Error(System.Object,System.Windows.Forms.HtmlElementErrorEventArgs)">
            <summary>
            If a script error occurs, stop processing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.AjaxDocPlugIn.wb_Navigated(System.Object,System.Windows.Forms.WebBrowserNavigatedEventArgs)">
            <summary>
            This notes when the page completes navigating
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>If ran successfully, the page navigates twice.  The first time is the initial page load.  It
            immediately submits itself to post the results.  On the second navigation, we can assume it was
            successful and the page contains the "success" result message.
            </remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.AjaxDocPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.PlugIns.BibliographySupportPlugIn"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.project_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.btnSelectLocation_Click(System.Object,System.EventArgs)">
            <summary>
            Select the path to the bibliography file
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BibliographySupportConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BibliographySupportPlugIn">
            <summary>
            This plug-in class is used to add bibliography support to the topics
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.AddBibliographyParameter(System.String)">
            <summary>
            Add the bibliography file parameter to the TransformComponent configuration
            </summary>
            <param name="configFilename">The BuildAssembler configuration file to modify</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BibliographySupportPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new setting item to the collection
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a binding settings item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.lbReferences_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnAddIgnoredName_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new ignored assembly name
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.btnDeleteIgnoredName_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected ignored assembly name
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectResolverConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn">
            <summary>
            This plug-in class is used to add assembly binding redirection support to the MRefBuilder configuration
            file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BindingRedirectSettings">
            <summary>
            This represents binding redirection settings for the <see cref="T:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettings.#ctor(SandcastleBuilder.Utils.IBasePathProvider)">
            <summary>
            Constructor
            </summary>
            <param name="provider">The base path provider</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettings.ToString">
            <summary>
            This returns a string representation of the item
            </summary>
            <returns>The item value as a string</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettings.FromXPathNavigator(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a binding redirect settings instance from an XPath navigator containing the settings
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which to obtain the settings</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.BindingRedirectSettings"/> object containing the settings from the XPath
            navigator.</returns>
            <remarks>It should contain an element called <c>dependentAssembly</c> with a <c>configFile</c>
            attribute or a nested <c>assemblyIdentity</c> and <c>bindingRedirect</c> element that define
            the settings.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettings.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode,System.Boolean)">
            <summary>
            Store the binding redirect settings as a node in the given XML document
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <param name="relativePath">True to allow a relative path on <c>importFrom</c> attributes, false to
            fully qualify the path.</param>
            <returns>Returns the node that was added.</returns>
            <remarks>The settings are stored in an element called <c>dependentAssembly</c>.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.AssemblyName">
            <summary>
            This is used to get or set the assembly name (no extension)
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.PublicKeyToken">
            <summary>
            This is used to get or set the public key token for the assembly
            </summary>
            <value>If omitted, "null" is assumed</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.Culture">
            <summary>
            This is used to get or set the culture for the assembly
            </summary>
            <value>If omitted, "neutral" is assumed</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.OldVersion">
            <summary>
            This is used to get or set the old version number to redirect to the new version number
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.OldVersionTo">
            <summary>
            This is used to get or set the ending old version number range to redirect to the new version
            number.
            </summary>
            <value>If not set, only <see cref="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.OldVersion"/> will be used to redirect a single
            version.</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.NewVersion">
            <summary>
            This is used to get or set the new version number to which the old versions are redirected
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.BindingRedirectSettings.ConfigurationFile">
            <summary>
            This is used to get or set the path to the configuration file from which the settings should be
            imported.
            </summary>
            <value>If specified, the properties in the Binding Redirect category are ignored.</value>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.BindingRedirectSettingsCollection">
            <summary>
            This collection class is used to hold the binding redirect settings information for the
            <see cref="T:SandcastleBuilder.PlugIns.BindingRedirectResolverPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettingsCollection.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode,System.Boolean)">
            <summary>
            This is used to save the binding redirect settings list to the configuration settings
            </summary>
            <param name="config">The XML configuration document.</param>
            <param name="root">The root configuration node</param>
            <param name="relativePath">True to allow a relative path on <c>importFrom</c> attributes, false to
            fully qualify the path.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.BindingRedirectSettingsCollection.FromXml(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            This is used to load the binding redirect settings list from the configuration settings
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which the information is loaded</param>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the Sandcastle Help File Builder project site
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.chkUseDefaultCredentials_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the user name and password controls based on the Default Credentials check state
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.CompletionNotificationConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn">
            <summary>
            This plug-in class is designed to run after the build completes to send notification of the completion
            status via e-mail.  The log file can be sent as an attachment.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the plug-in configuration is not valid</exception>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
            <remarks>Since this runs after completion of the build and the log file is closed, any progress
            messages reported here will not appear in it, just in the output window on the main form.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.TransformLogFile">
            <summary>
            This is used to run the log file through an XSL transform so that it is more readable
            </summary>
            <returns>The transformed log filename</returns>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.CompletionNotificationPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DbcsFixConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.PlugIns.DbcsFixPlugIn"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.project_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.btnSelectLocation_Click(System.Object,System.EventArgs)">
            <summary>
            Select the path to the SBAppLocale tool
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DbcsFixConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DbcsFixPlugIn">
            <summary>
            This plug-in class is designed to modify the HTML files and alter the build so as to overcome the
            encoding issues encountered when building HTML Help 1 (.chm) files for various foreign languages.
            </summary>
            <remarks>This uses the <see href="http://www.steelbytes.com/?mid=45">Steel Bytes SBAppLocale</see> tool
            to run the HTML Help 1 compiler using the correct locale.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DbcsFixPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DbcsFixPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DeploymentConfigUserControl">
            <summary>
            This user control is used to edit deployment configuration settings
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.LoadFromSettings(SandcastleBuilder.PlugIns.DeploymentLocation)">
            <summary>
            Load the control values from the specified deployment location
            settings object.
            </summary>
            <param name="location">The location settings</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.CreateDeploymentLocation">
            <summary>
            Validate the control values and, if valid, create and return a new
            deployment location settings object.
            </summary>
            <returns>The deployment location settings if they are valid or
            null if they are not valid.</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.chkUseDefaultCredentials_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the user name and password controls based on
            the Default Credentials check state.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.chkUseProxyServer_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the proxy server settings based on the Use
            Proxy Server check state.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.chkUseProxyDefCreds_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the proxy user credentials based on the Proxy
            Default Credentials check state.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn">
            <summary>
            This plug-in class can be used to build an IntelliSense XML comments file without a related help file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.IntelliSenseOnlyPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn">
            <summary>
            This plug-in class is used to add elements for the lightweight website style such as a search box and a
            table of contents in the topics similar to the current MSDN lightweight style.
            </summary>
            <remarks>This is a presentation style dependency plug-in and has no configurable elements.  As such, it
            is hidden.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.GenerateTocRoot(System.Boolean)">
            <summary>
            Generate the root TOC node
            </summary>
            <param name="expanded">True if expanded false if not</param>
            <returns>The root TOC node</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.GenerateTocAncestor(System.Xml.Linq.XElement,System.Int32,System.Boolean)">
            <summary>
            Generate a TOC ancestor node
            </summary>
            <param name="ancestor">The TOC ancestor</param>
            <param name="level">The level of the node</param>
            <param name="expanded">True if expanded, false if not</param>
            <returns>The TOC ancestor node</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.GenerateTocSibling(System.Xml.Linq.XElement,System.Xml.Linq.XElement,System.Int32,System.Boolean)">
            <summary>
            Generate a TOC sibling node
            </summary>
            <param name="current">The current node</param>
            <param name="sibling">The sibling node</param>
            <param name="level">The level of the node</param>
            <param name="showSiblings">True to show siblings, false to keep them hidden</param>
            <returns>The TOC sibling node</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.GenerateTocChild(System.Xml.Linq.XElement)">
            <summary>
            Generate a TOC child node
            </summary>
            <param name="child">The child node</param>
            <returns>The TOC child node</returns>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.LightweightWebsiteStylePlugIn.ExecutionPoints">
            <inheritdoc/>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn">
            <summary>
            This plug-in class can be used to manually apply the visibility settings and API filter from the project
            to the reflection data file.
            </summary>
            <remarks><note type="note">This is only necessary if the Generate Reflection Information build step is
            suppressed or replaced by some other means.  In such cases, the visibility settings and API filter are
            not applied unless this plug-in is used.  If the reflection information file is produced by
            <strong>MRefBuilder.exe</strong>, there is no need to use this plug-in as it will apply the visibility
            settings and API filter automatically to the file that it produces.</note></remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ApplyVisibilityProperties(System.String)">
            <summary>
            Apply the project's Visibility category properties to the given reflection information file
            </summary>
            <param name="reflectionInfoFile">The name of the reflection information file to use</param>
            <remarks>This is used to remove entries from the reflection information file so that it does not
            appear in the help file.  See the <c>Document*</c> properties in the <see cref="T:SandcastleBuilder.Utils.SandcastleProject"/>
            class for information on the items removed.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveAttributes(System.Xml.XmlNode)">
            <summary>
            Remove attribute information
            </summary>
            <param name="apisRoot">The root APIs node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveExplicitInterfaceImplementations(System.Xml.XmlNode)">
            <summary>
            Remove explicit interface implementation information
            </summary>
            <param name="apisRoot">The root APIs node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveInheritedMembers(System.Xml.XmlNode)">
            <summary>
            Remove inherited member information from each type's element list based on the project settings
            </summary>
            <param name="apisRoot">The root APIs node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveMembers(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Remove member information matching the specified XPath query.
            </summary>
            <param name="apisRoot">The root APIs node</param>
            <param name="xpath">The XPath query used to find the members.</param>
            <param name="memberDesc">A description of the members removed.</param>
            <returns>The number of members to be removed</returns>
            <remarks>Actual removal of the members is deferred.  On very large files, the XPath queries took too
            long when removing the &lt;element&gt; members.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ModifyProtectedInternalVisibility(System.Xml.XmlNode)">
            <summary>
            Change the visibility of "protected internal" members to
            "protected".
            </summary>
            <param name="apisRoot">The root APIs node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveSealedProtected(System.Xml.XmlNode)">
            <summary>
            Remove protected members from sealed classes.
            </summary>
            <param name="apisRoot">The root APIs node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.OnExcludeElement(System.Text.RegularExpressions.Match)">
            <summary>
            This is used as the match evaluator for the regular expression that finds the &lt;element&gt; entries
            to remove from the reflection information file.
            </summary>
            <param name="m">The match found</param>
            <returns>The string with which to replace the match</returns>
            <remarks>The removals are done this way as it proved to be a very slow process to remove the child
            elements at the time they were found with an XPath query on very large files.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ApplyManualApiFilter(SandcastleBuilder.Utils.ApiFilterCollection,System.String)">
            <summary>
            This is used to manually apply the specified API filter to the specified reflection information file
            </summary>
            <param name="filterToApply">The API filter to apply</param>
            <param name="reflectionFilename">The reflection information file</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ApplyMemberFilter(System.Xml.XmlNode,SandcastleBuilder.Utils.ApiFilter)">
            <summary>
            Apply a member filter to the specified type.
            </summary>
            <param name="apis">The APIs node from which to remove info</param>
            <param name="typeFilter">The type filter to be processed</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveNamespace(System.Xml.XmlNode,System.String)">
            <summary>
            Remove an entire namespace and all of its members
            </summary>
            <param name="apis">The APIs node from which to remove info</param>
            <param name="id">The namespace ID to remove</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.RemoveType(System.Xml.XmlNode,System.String)">
            <summary>
            Remove an entire type and all of its members
            </summary>
            <param name="apis">The APIs node from which to remove info</param>
            <param name="id">The type ID to remove</param>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ManualVisibilityApiFilterPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn">
            <summary>
            This plug-in class is used to fix up member IDs in the XML comments files due to quirks in the various
            compilers that cause a mismatch between the member IDs in the XML comments and the reflection data.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.MemberIdFixUpPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new match expression
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.btnCPPFixes_Click(System.Object,System.EventArgs)">
            <summary>
            Add the common C++ fix-up expressions
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected match expression
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.tvExpressions_BeforeSelect(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Validate the expression and store it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.tvExpressions_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Load the selected expression for editing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.Expression_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection when the text box gains the focus to prevent loss of all text
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdFixUpPlugInConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.MemberIdMatchExpression">
            <summary>
            This is used to hold the member ID match expression settings
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdMatchExpression.MatchExpression">
            <summary>
            The member ID expression to match
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdMatchExpression.ReplacementValue">
            <summary>
            The replacement member ID value
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdMatchExpression.MatchAsRegEx">
            <summary>
            Match and replace the member ID using a regular expression
            </summary>
            <value>True to match and replace as a regular expression, false to use literal match and replace</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.MemberIdMatchExpression.RegularExpression">
            <summary>
            This read-only property returns a <see cref="T:System.Text.RegularExpressions.Regex"/> for the expression if it should be matched as a
            regular expression or null if not.
            </summary>
            <remarks>The regular expression is cached for future use</remarks>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.ReferenceLinkSettings">
            <summary>
            This represents reference link settings for the
            <see cref="T:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettings.ShouldSerializeHelpFileProject">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.HelpFileProject"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettings.FromXPathNavigator(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a reference link settings instance from an XPath navigator
            containing the settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which to
            obtain the settings.</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.ReferenceLinkSettings"/> object containing the
            settings from the XPath navigator.</returns>
            <remarks>It should contain an element called <c>target</c>
            with two attributes (<c>linkType</c> and <c>helpFileProject</c>).
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettings.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Store the reference link settings as a node in the given XML
            document.
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <returns>Returns the node that was added.</returns>
            <remarks>The reference link settings are stored in an element
            called <c>target</c> with two attributes (<c>linkType</c> and
            <c>helpFileProject</c>).</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.ReflectionFilename">
            <summary>
            This is used to get or set the location of the reflection file
            at build time.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.HtmlSdkLinkType">
            <summary>
            This is used to get or set the HTML Help 1 SDK link type for the target
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.MSHelpViewerSdkLinkType">
            <summary>
            This is used to get or set the MS Help Viewer SDK link type for the target
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.WebsiteSdkLinkType">
            <summary>
            This is used to get or set the website SDK link type for the target
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.HelpFileProject">
            <summary>
            This is used to get or set the path to the help file builder
            project used to generate reference link information.
            </summary>
            <value>The help file builder project makes it simple to manage
            settings for the other target's assemblies such as references,
            API filter settings, etc.</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ReferenceLinkSettings.ListDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.ReferenceLinkSettingsCollection">
            <summary>
            This collection class is used to hold the reference link settings
            information for the <see cref="T:SandcastleBuilder.PlugIns.AdditionalReferenceLinksPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettingsCollection.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            This is used to save the reference link settings list to the
            configuration settings.
            </summary>
            <param name="config">The XML configuration document.</param>
            <param name="root">The root configuration node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ReferenceLinkSettingsCollection.FromXml(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            This is used to load the reference link settings list from the
            configuration settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which the
            information is loaded.</param>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.ScriptSharpPlugIn">
            <summary>
            This plug-in class is designed to modify the reflection information file produced after running
            MRefBuilder on assemblies produced by the Script# compiler so that it is suitable for use in
            producing a help file.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.ModifyMRefBuilderConfig">
            <summary>
            This is used to modify the MRefBuilder.config file for use with Script#
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.ModifyGenerateRefInfoProject">
            <summary>
            This is used to modify the GenerateRefInfo.proj file for use with Script#
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ScriptSharpPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.TocExcludePlugIn">
            <summary>
            This plug-in class can be used to exclude API members from the table of contents via the
            <c>&lt;tocexclude /&gt;</c> XML comment tag.  The excluded items are still accessible in the help file
            via other topic links.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.TocExcludePlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.TocExcludePlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.TocExcludePlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.TocExcludePlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.TocExcludePlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.VersionBuilderPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.btnAddFile_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new help file builder project to the version settings.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a version settings item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.lbVersionInfo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionBuilderConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DeploymentConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.PlugIns.DeploymentPlugIn"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the Sandcastle Help File Builder project site
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.DeploymentConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DeploymentConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DeploymentLocation">
            <summary>
            This represents a deployment location
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentLocation.#ctor">
            <summary>
            Constructor
            </summary>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentLocation.#ctor(System.Uri,SandcastleBuilder.PlugIns.UserCredentials,SandcastleBuilder.PlugIns.ProxyCredentials)">
            <summary>
            Constructor
            </summary>
            <param name="deployTo">The deployment location</param>
            <param name="user">The user credentials, if any</param>
            <param name="proxy">The proxy credentials, if any</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentLocation.FromXPathNavigator(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Create a deployment location instance from an XPath navigator
            containing the settings.
            </summary>
            <param name="navigator">The XPath navigator from which to
            obtain the settings.</param>
            <param name="id">The id of the element to load</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.DeploymentLocation"/> object containing the
            settings from the XPath navigator.</returns>
            <remarks>It should contain an element called <b>deploymentLocation</b>
            with two attributes (<b>id</b> with the specified ID value and
            <b>location</b>) and nested <b>userCredentials</b> and
            <b>proxyCredentials</b> elements.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentLocation.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode,System.String)">
            <summary>
            Store the deployment location as a node in the given XML document
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <param name="id">The id of the element to create</param>
            <returns>Returns the node that was added or the one that
            already existed in the document.</returns>
            <remarks>The deployment location is stored in an element called
            <b>deploymentLocation</b> with two attributes (<b>id</b> matching
            the specified id and <b>location</b>) and nested
            <b>userCredentials</b> and <b>proxyCredentials</b> elements.  It
            is created if it does not already exist.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DeploymentLocation.Location">
            <summary>
            The location to which the help file is deployed
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DeploymentLocation.UserCredentials">
            <summary>
            The user credentials for the location
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DeploymentLocation.ProxyCredentials">
            <summary>
            The proxy credentials for the location
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.DeploymentPlugIn">
            <summary>
            This plug-in class is used to copy the resulting help file output to a location other than the output
            folder (i.e. a file share, an FTP site, a web server, etc.).
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the plug-in configuration is not valid</exception>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentPlugIn.DeployOutput(System.Collections.ObjectModel.Collection{System.String},SandcastleBuilder.PlugIns.DeploymentLocation)">
            <summary>
            Deploy the given list of files to the specified location
            </summary>
            <param name="files">The list of files to deploy</param>
            <param name="location">The deployment location</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.DeploymentPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.DeploymentPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.ProxyCredentials">
            <summary>
            This class is used to specify credentials for a proxy server.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ProxyCredentials.#ctor">
            <summary>
            Constructor
            </summary>
            <overloads>There are two overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ProxyCredentials.#ctor(System.Boolean,System.Uri,SandcastleBuilder.PlugIns.UserCredentials)">
            <summary>
            Constructor
            </summary>
            <param name="useProxy">True to use default the proxy server, false to not use it</param>
            <param name="server">The server name to use</param>
            <param name="proxyUser">The user credentials to use for the proxy server</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ProxyCredentials.FromXPathNavigator(System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a proxy credentials instance from an XPath navigator containing the settings
            </summary>
            <param name="navigator">The XPath navigator from which to obtain the settings</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.ProxyCredentials"/> object containing the settings from the XPath navigator</returns>
            <remarks>It should contain an element called <b>proxyCredentials</b> with two attributes
            (<c>useProxy</c> and <c>proxyServer</c>) and a nested <c>userCredentials</c> element.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.ProxyCredentials.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Store the credentials as a node in the given XML document
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <returns>Returns the node that was added or the one that already existed in the document</returns>
            <remarks>The credentials are stored in an element called <c>proxyCredentials</c> with two attributes
            (<c>useProxy</c> and <c>proxyServer</c>) and a nested <c>userCredentials</c> element.  It is created
            if it does not already exist.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ProxyCredentials.UseProxyServer">
            <summary>
            This is used to set or get the flag indicating whether or not to use the proxy server
            </summary>
            <value>By default, this is false and <see cref="P:SandcastleBuilder.PlugIns.ProxyCredentials.ProxyServer"/> and <see cref="P:SandcastleBuilder.PlugIns.ProxyCredentials.Credentials"/> will be
            ignored.</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ProxyCredentials.ProxyServer">
            <summary>
            Get or set the proxy server name
            </summary>
            <value>If <see cref="P:SandcastleBuilder.PlugIns.ProxyCredentials.UseProxyServer"/> is false, this will be ignored</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.ProxyCredentials.Credentials">
            <summary>
            Get the user credentials
            </summary>
            <value>If <see cref="P:SandcastleBuilder.PlugIns.ProxyCredentials.UseProxyServer"/> is false, this will be ignored</value>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.UserCredentials">
            <summary>
            This class is used to specify user credentials.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.UserCredentials.#ctor">
            <summary>
            Constructor
            </summary>
            <overloads>There are three overloads for the constructor.</overloads>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.UserCredentials.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="useDefault">True to use default credentials, false to use the supplied user name and
            password.</param>
            <param name="user">The user name to use.</param>
            <param name="pwd">The password to use.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.UserCredentials.FromXPathNavigator(System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a user credentials instance from an XPath navigator containing the settings
            </summary>
            <param name="navigator">The XPath navigator from which to obtain the settings</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.UserCredentials"/> object containing the settings from the XPath navigator</returns>
            <remarks>It should contain an element called <c>userCredentials</c> with three attributes:
            <c>useDefault</c>, <c>userName</c>, and <c>password</c>.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.UserCredentials.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Store the credentials as a node in the given XML document
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <returns>Returns the node that was added or the one that already existed in the document</returns>
            <remarks>The credentials are stored in an element called <c>userCredentials</c> with three
            attributes:  <c>useDefault</c>, <c>userName</c>, and <c>password</c>.  It is created if it does not
            already exist.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.UserCredentials.UseDefaultCredentials">
            <summary>
            This is used to set or get the flag indicating whether or not to use default credentials
            </summary>
            <value>By default, this is true and <see cref="P:SandcastleBuilder.PlugIns.UserCredentials.UserName"/> and <see cref="P:SandcastleBuilder.PlugIns.UserCredentials.Password"/> will be ignored</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.UserCredentials.UserName">
            <summary>
            Get or set the user name
            </summary>
            <value>If <see cref="P:SandcastleBuilder.PlugIns.UserCredentials.UseDefaultCredentials"/> is true, this will be ignored</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.UserCredentials.Password">
            <summary>
            Get or set the password
            </summary>
            <value>If <see cref="P:SandcastleBuilder.PlugIns.UserCredentials.UseDefaultCredentials"/> is true, this will be ignored</value>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.VersionBuilderPlugIn">
            <summary>
            This plug-in class is designed to generate version information for assemblies in the current project and
            others related to the same product that can be merged into the current project's help file topics.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
            <exception cref="T:SandcastleBuilder.Utils.BuilderException">This is thrown if the plug-in configuration is not valid</exception>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.UpdateVersionItems">
            <summary>
            Update the version information items in the shared builder content file
            </summary>
            <remarks>Remove the standard version information items from the shared content file as the version
            builder information will take its place in the topics.  New items are added for each version of the
            project defined in the configuration settings.</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.BuildProject(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This is called to build a project
            </summary>
            <param name="project">The project to build</param>
            <param name="workingPath">The working path for the project</param>
            <returns>Returns true if successful, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.CreateVersionBuilderConfigurationFile">
            <summary>
            This creates the Version Builder configuration file
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.ModifyTransformManifestProject">
            <summary>
            This is used to modify the GenerateRefInfo.proj file for use with VersionBuilder
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.Report(SandcastleBuilder.Utils.BuildEngine.BuildProgressEventArgs)">
            <summary>
            This is called by the build process to report build progress for the reference link projects
            </summary>
            <param name="value">The event arguments</param>
            <remarks>Since the build is synchronous in this plug-in, we need to implement the interface and
            report progress synchronously as well or the final few messages can get lost and it looks like the
            build failed.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionBuilderPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.VersionSettings">
            <summary>
            This represents version settings for the <see cref="T:SandcastleBuilder.PlugIns.VersionBuilderPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.ShouldSerializeVersion">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.PlugIns.VersionSettings.Version"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.ShouldSerializeHelpFileProject">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.PlugIns.VersionSettings.HelpFileProject"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.FromXPathNavigator(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            Create a version settings instance from an XPath navigator
            containing the settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which to
            obtain the settings.</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.VersionSettings"/> object containing the
            settings from the XPath navigator.</returns>
            <remarks>It should contain an element called <c>version</c>
            with three attributes (<c>label</c>, <c>version</c> and
            <c>helpFileProject</c>).</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Store the version settings as a node in the given XML document
            </summary>
            <param name="config">The XML document</param>
            <param name="root">The node in which to store the element</param>
            <returns>Returns the node that was added.</returns>
            <remarks>The version settings are stored in an element called
            <c>version</c> with three attributes (<c>label</c>, <c>version</c>
            and <c>helpFileProject</c>).</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettings.GetHashCode">
            <summary>
            This is overridden to return the hash code of the combined
            framework and version number.
            </summary>
            <returns>The hash code for the version settings.</returns>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionSettings.ReflectionFilename">
            <summary>
            This is used to get or set the location of the reflection file
            at build time.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionSettings.FrameworkLabel">
            <summary>
            This is used to get or set the framework label for the related
            project.
            </summary>
            <remarks>This is used to group like versions of projects.</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionSettings.Version">
            <summary>
            This is used to get or set the version number description for the
            related project.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionSettings.HelpFileProject">
            <summary>
            This is used to get or set the path to the help file builder
            project used to generate version information.
            </summary>
            <value>The help file builder project makes it simple to manage
            settings for the prior version's assemblies such as references,
            API filter settings, etc.</value>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.VersionSettings.ListDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.VersionSettingsCollection">
            <summary>
            This collection class is used to hold the version settings information
            for the <see cref="T:SandcastleBuilder.PlugIns.VersionBuilderPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettingsCollection.ToXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            This is used to save the version settings list to the configuration
            settings.
            </summary>
            <param name="config">The XML configuration document.</param>
            <param name="root">The root configuration node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettingsCollection.FromXml(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.XPath.XPathNavigator)">
            <summary>
            This is used to load the version settings list from the
            configuration settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="navigator">The XPath navigator from which the
            information is loaded.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.VersionSettingsCollection.Sort">
            <summary>
            This is used to sort the collection by framework label in ascending
            order and by version in descending order.
            </summary>
            <remarks>The collection must be sorted in descending order by
            version in order for the version builder tool to output the correct
            information.</remarks>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.#ctor(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentProject">The current project</param>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.btnAddReferencePath_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new folder to the wildcard reference settings.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete a wildcard reference folder item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.lbReferences_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the property grid with the selected item
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.pgProps_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Refresh the list box item when a property changes
            </summary>
            <param name="s">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferencesConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.WildcardReferenceSettings">
            <summary>
            This represents wildcard reference settings for the
            <see cref="T:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettings.ShouldSerializeReferencePath">
            <summary>
            This is used to see if the <see cref="P:SandcastleBuilder.PlugIns.WildcardReferenceSettings.ReferencePath"/> property
            should be serialized.
            </summary>
            <returns>True to serialize it, false if it matches the default
            and should not be serialized.  This property cannot be reset
            as it should always have a value.</returns>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettings.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettings.FromXPathNavigator(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.Linq.XElement)">
            <summary>
            Create a wildcard reference settings instance from an XElement
            containing the settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="element">The XElement from which to obtain the settings.</param>
            <returns>A <see cref="T:SandcastleBuilder.PlugIns.WildcardReferenceSettings"/> object containing the
            settings from the XElement.</returns>
            <remarks>It should contain an element called <c>reference</c>
            with three attributes (<c>path</c>, <c>wildcard</c>, and <c>recurse</c>).
            </remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettings.ToXml">
            <summary>
            Store the wildcard reference settings as a node in the given XML
            element.
            </summary>
            <returns>Returns the node to add.</returns>
            <remarks>The reference link settings are stored in an element
            called <c>reference</c> with three attributes (<c>path</c>,
            <c>wildcard</c>, and <c>recurse</c>).</remarks>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferenceSettings.ReferencePath">
            <summary>
            This is used to get or set the path to scan for references.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferenceSettings.Wildcard">
            <summary>
            This is used to get or set the wildcard to use with the folder
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferenceSettings.Recursive">
            <summary>
            This is used to get or set whether or not to scan sub-folders recursively
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferenceSettings.ListDescription">
            <summary>
            This returns a description of the entry suitable for display in a
            bound list control.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.WildcardReferenceSettingsCollection">
            <summary>
            This collection class is used to hold the wildcard reference settings
            information for the <see cref="T:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn"/>.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettingsCollection.ToXml(System.Xml.Linq.XElement)">
            <summary>
            This is used to save the wildcard reference settings list to the
            configuration settings.
            </summary>
            <param name="root">The root configuration node</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferenceSettingsCollection.FromXml(SandcastleBuilder.Utils.IBasePathProvider,System.Xml.Linq.XElement)">
            <summary>
            This is used to load the wildcard reference settings list from the
            configuration settings.
            </summary>
            <param name="pathProvider">The base path provider object</param>
            <param name="root">The XElement from which the information is loaded.</param>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn">
            <summary>
            This plug-in class is designed to modify the MRefBuilder project file by adding in reference assemblies
            matching wildcard search paths.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.WildcardReferencesPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn">
            <summary>
            This plug-in class is used to filter out unwanted information from the reflection information file using
            XPath queries.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn.ConfigurePlugIn(SandcastleBuilder.Utils.SandcastleProject,System.String)">
            <summary>
            This method is used by the Sandcastle Help File Builder to let the plug-in perform its own
            configuration.
            </summary>
            <param name="project">A reference to the active project</param>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
            <remarks>The configuration data will be stored in the help file builder project</remarks>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn.Initialize(SandcastleBuilder.Utils.BuildEngine.BuildProcess,System.Xml.XPath.XPathNavigator)">
            <summary>
            This method is used to initialize the plug-in at the start of the build process
            </summary>
            <param name="buildProcess">A reference to the current build process</param>
            <param name="configuration">The configuration data that the plug-in should use to initialize itself</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn.Execute(SandcastleBuilder.Utils.BuildComponent.ExecutionContext)">
            <summary>
            This method is used to execute the plug-in during the build process
            </summary>
            <param name="context">The current execution context</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn.Dispose">
            <summary>
            This implements the Dispose() interface to properly dispose of the plug-in object
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn.ExecutionPoints">
            <summary>
            This read-only property returns a collection of execution points that define when the plug-in should
            be invoked during the build process.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg">
            <summary>
            This form is used to edit the <see cref="T:SandcastleBuilder.PlugIns.XPathReflectionFileFilterPlugIn"/> configuration
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Add a new XPath expression
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.btnDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the selected XPath expression
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.tvExpressions_BeforeSelect(System.Object,System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Validate the expression and store it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.tvExpressions_AfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Load the selected expression for editing
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.lnkProjectSite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Launch the URL in the web browser
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.PlugIns.XPathReflectionFileFilterConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
    </members>
</doc>
